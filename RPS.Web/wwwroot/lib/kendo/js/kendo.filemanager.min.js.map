{"version":3,"sources":["kendo.filemanager.js"],"names":["f","define","$","undefined","kendo","window","extend","Class","Command","init","options","this","filemanager","CreateFolderCommand","fn","call","exec","that","dataSource","_viewDataSource","add","RenameCommand","target","viewItem","_view","widgetComponent","dataItem","edit","_renameTreeViewItem","uid","data","item","treeView","getByUid","realItem","get","id","_prompt","type","defaultInput","name","done","newName","set","DeleteCommand","itemsToRemove","items","getSelected","is","length","_confirm","removeItems","i","Array","isArray","remove","CopyCommand","targetDataSource","children","toJSON","fileManagerNewItem","MoveCommand","cloning","SortCommand","sortOptions","defaultSortOption","dir","field","sort","folderSortOption","SearchCommand","filter","operator","value","ChangeViewCommand","view","resize","OpenDialogCommand","dialog","open","console","warn","format","TogglePaneCommand","pane","resizable","getResizable","toggle","wrapper","find","handle","_resizeDraggable","ui","FileManagerCommand","commands","jQuery","amd","a1","a2","a3","ListView","TreeView","Grid","Observable","proxy","NAVIGATE","SELECT","EXPAND","CHANGE","OPEN","LOAD","KEYDOWN","KEYDOWNACTION","NS","fileManagerDraggables","fileManagerDragOrigin","registerViewComponent","componentName","component","ViewComponents","getViewComponent","Component","widget","element","Error","_bindEvents","bind","_binding","_bound","ev","trigger","preventDefault","_setDSOptions","dataSourceOptions","_initDragAndDrop","dropFilter","draggable","kendoDraggable","hint","_hint","cursorOffset","top","left","holdToDrag","ignore","hold","_hold","userEvents","minHold","droptarget","kendoDropTargetArea","drop","_onDrop","dragenter","dropTarget","addClass","dragleave","removeClass","currentTarget","selectable","clear","select","cancel","selectedItems","messages","isDirectory","targetId","itemIds","push","refresh","setDataSource","destroy","ViewComponent","explicitOptions","defaultOptions","listView","isLocalBinding","support","mobileOS","template","editTemplate","navigatable","_select","on","_dblClick","_mousedown","_keydown","_keydownAction","sender","_closeEditable","dataItems","entries","keyCode","keys","ESC","node","closest","which","entry","addFolder","selected","off","dataTextField","_refreshDataSource","existingItem","action","parentNode","map","guid","hasChildren","findByUid","_progress","each","index","append","_shouldFocus","current","focus","_remove","_nextVisible","_navigate","_expand","entryId","path","noop","selectedItem","reload","read","_setupColumns","grid","editable","mode","confirmation","sortable","columns","title","nameField","icon","getFileGroup","extension","dateCreatedField","sizeField","size","getFileSizeMessage","table","_toggleFocusable","saveRow","ENTER","setTimeout","_tryCancel","cancelChanges","container","_editContainer","val","state","addBack","toggleClass","model","dirty","_destroyEditable","_displayRow","addRow","editRow","FileManagerDetailsToggle","ToolBar","Item","toolbar","CLICK","TOGGLE","CLOSE","ACTION","FileManagerToolBar","_extendOptions","_attachEvents","events","concat","defaultTools","createFolder","text","command","rules","upload","sortDirection","buttons","togglable","group","sortField","menuButtons","changeView","spacer","details","overflow","search","_click","_change","tools","Object","_extendToolsOptions","tool","toolOptions","toolRules","isBuiltInTool","isPlainObject","JSON","parse","deepExtend","attributes","aria-label","data-command","data-options","_mapButtonGroups","_mapMenuButtons","remote","hidden","button","initialView","isToolEnabled","toolName","found","args","fileManagerSearch","SearchTool","input","iconWrapper","renderIcon","addUidAttr","addIdAttr","addOverflowAttr","attr","placeholder","_inputHandler","_input","registerComponent","label","switchElement","switchInstance","Switch","change","checked","detailsChecked","unchecked","detailsUnchecked","fileManagerDetailsToggle","parent","FileEntry","FileManagerDataSource","Node","HierarchicalDataSource","DataSource","schemas","fields","defaultValue","hasDirectories","created","createdUtc","modified","modifiedUtc","isDirectoryObject","getter","isFunction","_initChildren","transport","parameterMap","_childrenOptions","e","collection","_updateChildrenField","isNew","_defaultId","fileEntry","serverFiltering","_hierarchicalFilter","schema","modelBase","LocalTransport","_attachBubbleHandlers","insert","result","_hasDirectories","create","_dataSource","ContextMenu","FileManagerContextMenu","_overrideTemplates","_extendItems","_onSelect","templates","sprite","defaultItems","rename","spriteCssClass","delete","key","_extendItem","DataBoundWidget","outerHeight","_outerHeight","ERROR","UPLOAD","SUCCESS","HIDE","DATABINDING","DATABOUND","DROP","EXECUTE","TREE_TYPE","DOT","fileManagerStyles","header","navigation","navigationContainer","contentContainer","content","preview","previewContainer","treeview","breadcrumb","list","uploadDialog","splitBar","splitBarHorizontal","splitBarHover","splitBarIcon","splitBarNavigation","splitBarPreview","fileManagerTemplateStyles","fileInfo","filePreviewWrapper","fileTitleWrapper","fileTitle","fileMetaWrapper","metaLabel","metaValue","viewTypes","NO_FILE_PREVIEW_TEMPLATE","SINGLE_FILES_PREVIEW_TEMPLATE","MULTIPLE_FILES_PREVIEW_TEMPLATE","FileManager","_wrapper","_renderHeader","_renderContentContainer","_initContextMenu","_renderNavigation","_renderContent","_renderPreview","_initUploadDialog","_resizable","notify","height","contextMenu","uploadUrl","views","dialogs","width","moveConfirm","closable","deleteConfirm","renamePrompt","previewPane","metaFields","noFileTemplate","singleFileTemplate","multipleFilesTemplate","sortDirectionAsc","sortDirectionDesc","typeField","dateModifiedField","gridView","okText","close","noFileSelected","typeSortOrder","nameSortOrder","autoSync","_errorHandler","unbind","_changeHandler","_error","xhr","status","statusText","_resizeHandler","onResize","_initToolbar","menuOptions","executeCommand","_cacheFocus","_initTreeView","_initBreadcrumb","_initView","_initUpload","hide","enablePreview","_setPreviewPaneContent","previewTemplate","previewPaneMessages","previewPaneOptions","selection","styles","html","toolbarElement","toolbarOptions","treeViewElement","_load","_drop","indexOf","fail","DELETE","F2","_viewType","confirm","kendoConfirm","_restoreFocus","prompt","kendoPrompt","activeElement","document","popup","visible","hasClass","_focusElement","viewWrapper","breadcrumbElement","breadcrumbOptions","_breadcrumbChange","Breadcrumb","uploadInstance","dialogMessages","dialogElement","dialogOptions","modal","actions","_clearUploadFilesList","primary","_shouldInitUpload","Dialog","_toggleUploadDropZone","shouldInit","async","saveUrl","uploadElement","uploadOptions","autoUpload","dropZone","Upload","_sendUploadPathParameter","_success","clearAllFiles","zone","setOptions","source","_createResizableSplitBar","cssClass","hover","_initResizableNavigation","contentWrapperWidth","navigationWrapperWidth","contentWrapper","navigationWrapper","insertAfter","end","kendoResizable","start","delta","x","initialDelta","isRtl","getKendoResizable","_initResizablePreview","previewWrapperWidth","previewWrapper","insertBefore","empty","_open","el","join","commandName","commandOptions","navigate","load","sync","_navigateToParent","loaded","parentNodePath","_buildBreadcrumbPath","values","reverse","_adjustDimensions","gridSelector","listViewSelector","totalHeight","toolbarHeight","breadcrumbHeight","_resize","getSize","dimensions","_path","replace","unbindResize","plugin"],"mappings":"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","file":"kendo.filemanager.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('filemanager/commands', ['kendo.core'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, Class = kendo.Class;\n        var Command = Class.extend({\n            init: function (options) {\n                this.options = options;\n                this.filemanager = options.filemanager;\n            }\n        });\n        var CreateFolderCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dataSource = filemanager._viewDataSource || filemanager.dataSource;\n                dataSource.add();\n            }\n        });\n        var RenameCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, target = that.options.target, viewItem = that.filemanager._view.widgetComponent.dataItem(target);\n                if (target && viewItem) {\n                    that.filemanager._view.edit(target);\n                } else {\n                    that._renameTreeViewItem(target);\n                }\n            },\n            _renameTreeViewItem: function (target) {\n                var that = this, uid = target.data('uid'), item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid), realItem = that.filemanager.dataSource.get(item.id);\n                that.filemanager._prompt({\n                    type: 'rename',\n                    defaultInput: realItem.name,\n                    target: target\n                }).done(function (newName) {\n                    realItem.set('name', newName);\n                });\n            }\n        });\n        var DeleteCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, target = that.options.target, filemanager = that.filemanager, items = filemanager.getSelected(), viewItem = that.filemanager._view.widgetComponent.dataItem(target), itemsToRemove;\n                if (target && target.is('.k-state-selected') && items && items.length) {\n                    itemsToRemove = items;\n                } else if (target && viewItem) {\n                    itemsToRemove = viewItem;\n                } else if (target) {\n                    var uid = target.data('uid');\n                    var item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid);\n                    var realItem = that.filemanager.dataSource.get(item.id);\n                    itemsToRemove = realItem;\n                }\n                filemanager._confirm({\n                    type: 'delete',\n                    target: target\n                }).done(function () {\n                    that.removeItems(itemsToRemove);\n                });\n            },\n            removeItems: function (items) {\n                var itemsToRemove = Array.isArray(items) ? items : [items];\n                for (var i = 0; i < itemsToRemove.length; i++) {\n                    this.filemanager.dataSource.remove(itemsToRemove[i]);\n                }\n            }\n        });\n        var CopyCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dataSource = filemanager.dataSource, items = that.options.items, target = dataSource.get(that.options.target), targetDataSource = target.children;\n                for (var i = 0; i < items.length; i++) {\n                    var item = dataSource.get(items[i]).toJSON();\n                    item.fileManagerNewItem = true;\n                    targetDataSource.add(item);\n                }\n            }\n        });\n        var MoveCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dataSource = filemanager.dataSource, items = that.options.items, target = dataSource.get(that.options.target), targetDataSource = target.children;\n                for (var i = 0; i < items.length; i++) {\n                    var item = dataSource.get(items[i]);\n                    var cloning = item.toJSON();\n                    cloning.fileManagerNewItem = true;\n                    targetDataSource.add(cloning);\n                    dataSource.remove(item);\n                }\n            }\n        });\n        var SortCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, options = that.options, filemanager = that.filemanager, sortOptions = filemanager.defaultSortOption;\n                extend(sortOptions, {\n                    dir: options.dir,\n                    field: options.field\n                });\n                filemanager._view.widgetComponent.dataSource.sort([\n                    filemanager.folderSortOption,\n                    sortOptions\n                ]);\n            }\n        });\n        var SearchCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, options = that.options, filemanager = that.filemanager, filter = {\n                        field: options.field,\n                        operator: options.operator,\n                        value: options.value\n                    };\n                filemanager._view.widgetComponent.dataSource.filter(filter);\n            }\n        });\n        var ChangeViewCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, options = that.options, filemanager = that.filemanager;\n                filemanager.view(options.value);\n                filemanager.resize(true);\n            }\n        });\n        var OpenDialogCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, dialog = filemanager[that.options.type];\n                if (dialog) {\n                    dialog.open();\n                } else {\n                    window.console.warn(kendo.format('The {0} dialog is not available!', that.options.type));\n                }\n            }\n        });\n        var TogglePaneCommand = Command.extend({\n            init: function (options) {\n                Command.fn.init.call(this, options);\n            },\n            exec: function () {\n                var that = this, filemanager = that.filemanager, pane = filemanager[that.options.type], resizable = that.getResizable();\n                if (pane) {\n                    pane.toggle();\n                    if (resizable) {\n                        filemanager.wrapper.find(resizable.options.handle).toggle();\n                    }\n                }\n            },\n            getResizable: function () {\n                var that = this, filemanager = that.filemanager, type = that.options.type;\n                if (!filemanager._resizeDraggable) {\n                    return;\n                }\n                return filemanager._resizeDraggable[type];\n            }\n        });\n        extend(kendo.ui, {\n            filemanager: {\n                FileManagerCommand: Command,\n                commands: {\n                    CreateFolderCommand: CreateFolderCommand,\n                    RenameCommand: RenameCommand,\n                    DeleteCommand: DeleteCommand,\n                    MoveCommand: MoveCommand,\n                    CopyCommand: CopyCommand,\n                    SortCommand: SortCommand,\n                    SearchCommand: SearchCommand,\n                    ChangeViewCommand: ChangeViewCommand,\n                    OpenDialogCommand: OpenDialogCommand,\n                    TogglePaneCommand: TogglePaneCommand\n                }\n            }\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/view', [\n        'kendo.listview',\n        'kendo.treeview'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, Observable = kendo.Observable, extend = $.extend, proxy = $.proxy, NAVIGATE = 'navigate', SELECT = 'select', EXPAND = 'expand', CHANGE = 'change', OPEN = 'open', LOAD = 'load', KEYDOWN = 'keydown', KEYDOWNACTION = 'keydownAction', NS = '.kendoFileManagerViewComponent', fileManagerDraggables = [], fileManagerDragOrigin = null;\n        var registerViewComponent = function (componentName, component) {\n            ui.filemanager.ViewComponents[componentName] = component;\n        };\n        var getViewComponent = function (componentName) {\n            return ui.filemanager.ViewComponents[componentName] || null;\n        };\n        var Component = Observable.extend({\n            init: function (widget, element, options) {\n                var that = this;\n                that.element = element;\n                that.options = options;\n                if (widget) {\n                    that.widgetComponent = new widget(element, options);\n                } else {\n                    throw new Error('The widget for the ViewComponent is not available! Please add the corresponding scripts!');\n                }\n                Observable.fn.init.call(that);\n            },\n            _bindEvents: function () {\n                this.widgetComponent.bind('dataBinding', proxy(this._binding, this));\n                this.widgetComponent.bind('dataBound', proxy(this._bound, this));\n            },\n            _binding: function (ev) {\n                if (this.trigger('dataBinding', ev)) {\n                    ev.preventDefault();\n                }\n            },\n            _bound: function () {\n                this.trigger('dataBound');\n            },\n            _setDSOptions: function (options, dataSourceOptions) {\n                if (!options.dataSource && dataSourceOptions) {\n                    options.dataSource = dataSourceOptions;\n                }\n            },\n            _initDragAndDrop: function (element, filter) {\n                var that = this;\n                filter = filter || that.options.dropFilter;\n                element = element || that.element;\n                that.draggable = element.kendoDraggable({\n                    filter: filter,\n                    hint: proxy(that._hint, that),\n                    cursorOffset: {\n                        top: -10,\n                        left: -50\n                    },\n                    holdToDrag: true,\n                    ignore: 'input,.k-focusable',\n                    hold: proxy(that._hold, that)\n                }).data('kendoDraggable');\n                that.draggable.userEvents.minHold = 150;\n                that.droptarget = element.kendoDropTargetArea({\n                    filter: filter,\n                    drop: proxy(that._onDrop, that),\n                    dragenter: function (ev) {\n                        ev.dropTarget.addClass('k-filemanager-drop-target');\n                    },\n                    dragleave: function (ev) {\n                        ev.dropTarget.removeClass('k-filemanager-drop-target');\n                    }\n                }).data('kendoDraggable');\n            },\n            _hold: function (ev) {\n                var that = this, target = ev.currentTarget;\n                if (!target.is('.k-state-selected')) {\n                    if (that.widgetComponent.selectable) {\n                        that.widgetComponent.selectable.clear();\n                    }\n                    that.widgetComponent.select(target);\n                }\n                if (that.widgetComponent.selectable) {\n                    that.widgetComponent.selectable.userEvents.cancel();\n                }\n            },\n            _hint: function (target) {\n                var that = this, item = that.widgetComponent.dataItem(target), selectedItems = that.widgetComponent.select();\n                fileManagerDragOrigin = that.widgetComponent;\n                fileManagerDraggables = selectedItems;\n                if (selectedItems.length > 1) {\n                    return kendo.format('<div class=\\'k-filemanager-drag-hint\\'><span class=\\'k-icon k-i-{0}\\'></span> <span>{1} {2}</span></div>', 'file', selectedItems.length, that.options.messages.items);\n                }\n                return kendo.format('<div class=\\'k-filemanager-drag-hint\\'><span class=\\'k-icon k-i-{0}\\'></span> <span>{1}</span></div>', item.isDirectory ? 'folder' : 'file', item.name);\n            },\n            _onDrop: function (ev) {\n                var that = this, target = that.widgetComponent.dataItem(ev.dropTarget), targetId = target.id, itemIds = [];\n                if (!target.isDirectory) {\n                    return;\n                }\n                for (var i = 0; i < fileManagerDraggables.length; i++) {\n                    var id = fileManagerDragOrigin.dataItem(fileManagerDraggables[i]).id;\n                    itemIds.push(id);\n                }\n                this.trigger('drop', {\n                    target: targetId,\n                    items: itemIds\n                });\n            },\n            getSelected: function () {\n                throw new Error('Not Implemented!');\n            },\n            refresh: function (dataSource) {\n                this.widgetComponent.setDataSource(dataSource);\n            },\n            destroy: function () {\n                kendo.destroy(this.element);\n            }\n        });\n        extend(kendo.ui.filemanager, {\n            ViewComponent: Component,\n            ViewComponents: {},\n            registerViewComponent: registerViewComponent,\n            getViewComponent: getViewComponent\n        });\n        var ListView = Component.extend({\n            init: function (element, options, explicitOptions) {\n                var that = this, dataSourceOptions = explicitOptions.dataSource, messages = explicitOptions.messages;\n                options = extend({}, that.defaultOptions, options, { messages: messages });\n                that._setDSOptions(options, dataSourceOptions);\n                Component.fn.init.call(this, ui.ListView, element, options);\n                that.listView = that.widgetComponent;\n                that._bindEvents();\n                if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n            defaultOptions: {\n                selectable: kendo.support.mobileOS ? 'row' : 'multiple',\n                template: '<div class=\\'k-item\\' title=\\'#:name##:extension#\\'>' + '<div class=\\'file-group-icon\\'><span class=\\'k-icon k-i-#= !isDirectory ? kendo.getFileGroup(extension, true) : \\'folder\\' #\\'></span></div>' + '<div class=\\'file-name\\'>#:name##:extension#</div>' + '</div>',\n                editTemplate: '<div class=\\'k-item\\'>' + '<div class=\\'file-group-icon\\'><span class=\\'k-icon k-i-#= !isDirectory ? kendo.getFileGroup(extension, true) : \\'folder\\' #\\'></span></div>' + '<div class=\\'file-edit-input\\'><input type=\\'text\\' class=\\'k-textbox\\' data-bind=\\'value:name\\' name=\\'name\\' required=\\'required\\' /></div>' + '</div>',\n                dropFilter: '.k-item',\n                navigatable: true\n            },\n            _bindEvents: function () {\n                var that = this, listView = that.listView;\n                listView.bind(CHANGE, proxy(that._select, that));\n                listView.element.on('dblclick' + NS, proxy(that._dblClick, that));\n                listView.element.on('mousedown' + NS, '.k-item:not(.k-edit-item)', proxy(that._mousedown, that));\n                listView.element.on(KEYDOWN + NS, '.k-edit-item', proxy(that._keydown, that));\n                listView.element.on(KEYDOWN + NS, proxy(that._keydownAction, that));\n                listView.bind('edit', function (ev) {\n                    var sender = ev.sender;\n                    ev.item.find('input').on('blur', function () {\n                        sender._closeEditable();\n                    });\n                });\n                Component.fn._bindEvents.call(this);\n            },\n            _select: function () {\n                var that = this, dataItems = that.getSelected();\n                that.trigger(SELECT, { entries: dataItems });\n            },\n            _keydown: function (ev) {\n                var that = this;\n                if (ev.keyCode === kendo.keys.ESC) {\n                    that.listView._closeEditable();\n                }\n            },\n            _keydownAction: function (ev) {\n                var that = this, target = $(ev.target).find('.k-state-focused');\n                if (target.length && !target.is('.k-edit-item')) {\n                    that.trigger(KEYDOWNACTION, {\n                        target: target,\n                        keyCode: ev.keyCode\n                    });\n                }\n            },\n            _mousedown: function (ev) {\n                var that = this, node = $(ev.target).closest('.k-item');\n                if (ev.which === 3 && !node.is('.k-state-selected')) {\n                    that.listView.selectable.clear();\n                    that.listView.select(node);\n                }\n            },\n            _dblClick: function (ev) {\n                var that = this, node = $(ev.target).closest('.k-item');\n                if (node.is('.k-edit-item')) {\n                    return;\n                }\n                var item = that.listView.dataItem(node);\n                if (item) {\n                    that.trigger(OPEN, { entry: item });\n                }\n            },\n            addFolder: function () {\n                this.listView.add();\n            },\n            edit: function (target) {\n                var that = this, selected = that.listView.select();\n                that.listView.edit(target || selected);\n            },\n            getSelected: function () {\n                var that = this, items = that.listView.select(), dataItems = [];\n                for (var i = 0; i < items.length; i++) {\n                    var item = that.listView.dataItem(items[i]);\n                    if (item) {\n                        dataItems.push(item);\n                    }\n                }\n                return dataItems;\n            },\n            destroy: function () {\n                this.listView.element.off(NS);\n                Component.fn.destroy.call(this);\n            }\n        });\n        ui.filemanager.registerViewComponent('list', ListView);\n        var TreeView = Component.extend({\n            init: function (element, options, explicitOptions) {\n                var that = this, messages = explicitOptions.messages;\n                options = extend({}, that.defaultOptions, options, { messages: messages });\n                Component.fn.init.call(this, ui.TreeView, element, options);\n                that.treeView = that.widgetComponent;\n                that._bindEvents();\n                if (explicitOptions.draggable !== false && !explicitOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n            defaultOptions: {\n                dataTextField: 'name',\n                dropFilter: '.k-item'\n            },\n            _refreshDataSource: function (ev) {\n                var that = this, treeView = that.treeView, action = ev.action, node = ev.node, parentNode = null, items = ev.items.filter(function (item) {\n                        return item.isDirectory;\n                    }).map(function (item) {\n                        return extend({}, item.toJSON(), {\n                            id: item.id || kendo.guid(),\n                            hasChildren: item.hasChildren,\n                            items: []\n                        });\n                    });\n                if (node) {\n                    parentNode = treeView.findByUid(treeView.dataSource.get(node.id).uid);\n                    treeView._progress(parentNode, false);\n                }\n                if (!items.length) {\n                    return;\n                }\n                if (action == 'itemloaded' || parentNode && action === 'sync') {\n                    parentNode.find('.k-item').each(function (index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items, parentNode);\n                    if (that._shouldFocus) {\n                        treeView.current(parentNode);\n                        treeView.focus();\n                    }\n                } else if (action == 'remove') {\n                    this._remove(items[0].id);\n                } else if (action == 'itemchange') {\n                    var existingItem = treeView.dataSource.get(items[0].id);\n                    if (existingItem) {\n                        existingItem.set(ev.field, items[0][ev.field]);\n                    } else {\n                        treeView.append(items[0], parentNode);\n                    }\n                } else if (!treeView.dataSource.data().length) {\n                    treeView.append(items);\n                } else if (action === 'sync' || action === undefined && !parentNode) {\n                    treeView.items().each(function (index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items);\n                    if (that._shouldFocus) {\n                        treeView.current(treeView._nextVisible($()));\n                        treeView.focus();\n                    }\n                }\n            },\n            _remove: function (id) {\n                var that = this, treeView = that.treeView, dataSource = treeView.dataSource, item = dataSource.get(id), node;\n                if (item) {\n                    node = treeView.findByUid(item.uid);\n                    treeView.remove(node);\n                }\n            },\n            _bindEvents: function () {\n                var that = this;\n                that.treeView.bind(SELECT, proxy(that._navigate, that));\n                that.treeView.bind(EXPAND, proxy(that._expand, that));\n                that.treeView.element.bind(KEYDOWN, proxy(that._keydownAction, that));\n            },\n            _keydownAction: function (ev) {\n                var that = this, target = $(ev.target).find('.k-state-focused').closest('.k-item');\n                that.trigger(KEYDOWNACTION, {\n                    target: target,\n                    keyCode: ev.keyCode\n                });\n            },\n            _expand: function (ev) {\n                var that = this, treeView = that.treeView, entry = treeView.dataItem(ev.node);\n                ev.preventDefault();\n                that.trigger(LOAD, { entryId: entry.id });\n            },\n            _navigate: function (ev) {\n                var that = this, node = ev.node, entry = that.treeView.dataItem(node), path = entry.id;\n                ev.preventDefault();\n                that.trigger(NAVIGATE, {\n                    path: path,\n                    entry: entry.toJSON()\n                });\n            },\n            _hold: $.noop,\n            getSelected: function () {\n                var that = this, selectedItem = that.treeView.element.find('.k-state-selected').closest('.k-item'), item = that.treeView.dataItem(selectedItem);\n                return item;\n            },\n            refresh: function (id) {\n                var that = this, treeView = that.treeView, entry = treeView.dataSource.get(id), node = entry && treeView.findByUid(entry.uid);\n                if (entry && node) {\n                    treeView.element.find('.k-state-selected').removeClass('k-state-selected');\n                    node.find('> div .k-in').removeClass('k-state-hover').addClass('k-state-selected');\n                }\n            },\n            reload: function () {\n                this.treeView.dataSource.read();\n            }\n        });\n        ui.filemanager.registerViewComponent('tree', TreeView);\n        if (kendo.ui.Grid) {\n            var Grid = Component.extend({\n                init: function (element, options, explicitOptions) {\n                    var that = this, dataSourceOptions = explicitOptions.dataSource, messages = explicitOptions.messages;\n                    options = extend({}, that.defaultOptions, options, { messages: messages });\n                    that._setDSOptions(options, dataSourceOptions);\n                    that._setupColumns(options, messages);\n                    Component.fn.init.call(this, ui.Grid, element, options);\n                    that.grid = that.widgetComponent;\n                    that._bindEvents();\n                    if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                        that._initDragAndDrop();\n                    }\n                },\n                defaultOptions: {\n                    selectable: kendo.support.mobileOS ? 'row' : 'multiple',\n                    editable: {\n                        mode: 'inline',\n                        confirmation: false\n                    },\n                    sortable: true,\n                    dropFilter: 'tr:not(.k-grid-edit-row)',\n                    navigatable: true\n                },\n                _setupColumns: function (options, messages) {\n                    if (!options.columns) {\n                        options.columns = [\n                            {\n                                field: 'name',\n                                title: messages.nameField || 'Name',\n                                template: function (item) {\n                                    var icon = !item.isDirectory ? kendo.getFileGroup(item.extension, true) : 'folder';\n                                    var template = '<div class=\\'file-group-icon\\'>' + '<span class=\\'k-icon k-i-' + icon + '\\'></span>' + '</div>' + '<div class=\\'file-name\\'>' + item.name + item.extension + '<div>';\n                                    return template;\n                                }\n                            },\n                            {\n                                field: 'created',\n                                title: messages.dateCreatedField,\n                                format: '{0:G}'\n                            },\n                            {\n                                field: 'size',\n                                title: messages.sizeField,\n                                template: function (item) {\n                                    if (item.size > 0) {\n                                        return kendo.getFileSizeMessage(item.size);\n                                    } else {\n                                        return '';\n                                    }\n                                }\n                            }\n                        ];\n                    }\n                },\n                _bindEvents: function () {\n                    var that = this, grid = that.grid;\n                    grid.bind(CHANGE, proxy(that._select, that));\n                    grid.table.on('dblclick' + NS, proxy(that._dblClick, that));\n                    grid.table.on('mousedown' + NS, 'tr:not(.k-grid-edit-row)', proxy(that._mousedown, that));\n                    grid.table.on(KEYDOWN + NS, '.k-grid-edit-row', proxy(that._keydown, that));\n                    grid.table.on(KEYDOWN + NS, proxy(that._keydownAction, that));\n                    grid.bind('edit', function () {\n                        that._toggleFocusable(true);\n                    });\n                    grid.saveRow = $.noop;\n                    Component.fn._bindEvents.call(this);\n                },\n                _keydownAction: function (ev) {\n                    var that = this, target = $(ev.target).find('.k-state-focused').closest('tr');\n                    if (target.length && !target.is('.k-grid-edit-row')) {\n                        that.trigger(KEYDOWNACTION, {\n                            target: target,\n                            keyCode: ev.keyCode\n                        });\n                    }\n                },\n                _keydown: function (ev) {\n                    var that = this, grid = that.grid;\n                    if (!$(ev.target).closest('.k-grid-edit-row').length) {\n                        return;\n                    }\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        setTimeout(function () {\n                            that._closeEditable();\n                        });\n                        that._tryCancel();\n                    }\n                    if (ev.keyCode === kendo.keys.ESC) {\n                        grid.cancelChanges();\n                    }\n                },\n                _mousedown: function (ev) {\n                    var that = this, node = $(ev.target).closest('tr[data-uid]');\n                    if (ev.which === 1 && that.grid.editable) {\n                        setTimeout(function () {\n                            that._closeEditable();\n                        });\n                        that._tryCancel();\n                    }\n                    if (ev.which === 3 && !node.is('.k-state-selected')) {\n                        that.grid.selectable.clear();\n                        that.grid.select(node);\n                    }\n                },\n                _tryCancel: function () {\n                    var that = this, grid = that.grid, container;\n                    if (grid.editable) {\n                        container = grid._editContainer;\n                        if (!container.find('input').val()) {\n                            grid.cancelChanges();\n                        }\n                    }\n                    setTimeout(function () {\n                        that._toggleFocusable(false);\n                    });\n                },\n                _toggleFocusable: function (state) {\n                    var that = this, grid = that.grid;\n                    grid.table.find('tr,td').children().addBack().toggleClass('k-focusable', state);\n                },\n                _closeEditable: function () {\n                    var that = this, container;\n                    if (that.grid.editable && !that.grid.editable.options.model.dirty) {\n                        container = that.grid._editContainer;\n                        that.grid._destroyEditable();\n                        that.grid._displayRow(container);\n                    }\n                },\n                _select: function () {\n                    var that = this, dataItems = that.getSelected();\n                    that.trigger(SELECT, { entries: dataItems });\n                },\n                _dblClick: function (ev) {\n                    var that = this, node = $(ev.target).closest('tr[data-uid]');\n                    if (node.is('.k-grid-edit-row')) {\n                        return;\n                    }\n                    var item = that.grid.dataItem(node);\n                    if (item) {\n                        that.trigger(OPEN, { entry: item });\n                    }\n                },\n                getSelected: function () {\n                    var that = this, items = that.grid.select(), dataItems = [];\n                    for (var i = 0; i < items.length; i++) {\n                        dataItems.push(that.grid.dataItem(items[i]));\n                    }\n                    return dataItems;\n                },\n                addFolder: function () {\n                    this.grid.addRow();\n                },\n                edit: function (target) {\n                    var that = this, selected = that.grid.select();\n                    that.grid.editRow(target || selected);\n                },\n                destroy: function () {\n                    this.grid.table.off(NS);\n                    this.grid.element.off(NS);\n                    Component.fn.destroy.call(this);\n                }\n            });\n            ui.filemanager.registerViewComponent('grid', Grid);\n        }\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/toolbar', [\n        'kendo.toolbar',\n        'kendo.switch'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, proxy = $.proxy, ToolBar = kendo.ui.ToolBar, Item = kendo.toolbar.Item, CLICK = 'click', TOGGLE = 'toggle', CLOSE = 'close', ACTION = 'action', CHANGE = 'change', NS = '.fileManagerToolbar';\n        var FileManagerToolBar = ToolBar.extend({\n            init: function (element, options) {\n                var that = this;\n                that._extendOptions(options);\n                ToolBar.fn.init.call(that, element, options);\n                that._attachEvents();\n            },\n            events: ToolBar.fn.events.concat([ACTION]),\n            defaultTools: {\n                createFolder: {\n                    type: 'button',\n                    text: 'New Folder',\n                    name: 'createFolder',\n                    command: 'CreateFolderCommand',\n                    rules: '{ \"remote\": true }'\n                },\n                upload: {\n                    type: 'button',\n                    text: 'Upload',\n                    name: 'upload',\n                    command: 'OpenDialogCommand',\n                    options: '{ \"type\": \"uploadDialog\" }',\n                    rules: '{ \"remote\": true }'\n                },\n                sortDirection: {\n                    type: 'buttonGroup',\n                    text: 'Sort Direction',\n                    name: 'sortDirection',\n                    buttons: [\n                        {\n                            name: 'sortDirectionAsc',\n                            icon: 'sort-asc-sm',\n                            togglable: true,\n                            group: 'sortDirection',\n                            command: 'SortCommand',\n                            options: '{ \"dir\": \"asc\" }',\n                            selected: true\n                        },\n                        {\n                            name: 'sortDirectionDesc',\n                            icon: 'sort-desc-sm',\n                            togglable: true,\n                            group: 'sortDirection',\n                            command: 'SortCommand',\n                            options: '{ \"dir\": \"desc\" }'\n                        }\n                    ]\n                },\n                sortField: {\n                    type: 'splitButton',\n                    text: 'Sort By',\n                    name: 'sortField',\n                    command: 'SortCommand',\n                    menuButtons: [\n                        {\n                            name: 'nameField',\n                            text: 'Name',\n                            options: '{\"field\": \"name\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'typeField',\n                            text: 'Type',\n                            options: '{\"field\": \"extension\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'sizeField',\n                            text: 'Size',\n                            options: '{\"field\": \"size\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'dateCreatedField',\n                            text: 'Date created',\n                            options: '{\"field\": \"createdUtc\"}',\n                            command: 'SortCommand'\n                        },\n                        {\n                            name: 'dateModifiedField',\n                            text: 'Date modified',\n                            options: '{\"field\": \"modifiedUtc\"}',\n                            command: 'SortCommand'\n                        }\n                    ]\n                },\n                changeView: {\n                    type: 'buttonGroup',\n                    text: 'Change View',\n                    name: 'changeView',\n                    buttons: [\n                        {\n                            name: 'gridView',\n                            icon: 'grid-layout',\n                            togglable: true,\n                            group: 'changeView',\n                            command: 'ChangeViewCommand',\n                            options: 'grid'\n                        },\n                        {\n                            name: 'listView',\n                            icon: 'grid',\n                            togglable: true,\n                            group: 'changeView',\n                            command: 'ChangeViewCommand',\n                            options: 'list'\n                        }\n                    ]\n                },\n                spacer: { type: 'spacer' },\n                details: {\n                    type: 'fileManagerDetailsToggle',\n                    text: 'View Details',\n                    name: 'details',\n                    overflow: 'never',\n                    command: 'TogglePaneCommand',\n                    options: '{ \"type\": \"preview\" }'\n                },\n                search: {\n                    type: 'fileManagerSearch',\n                    text: 'Search',\n                    name: 'search',\n                    command: 'SearchCommand',\n                    icon: 'search',\n                    overflow: 'never',\n                    options: '{ \"field\": \"name\", \"operator\": \"startswith\" }'\n                }\n            },\n            _attachEvents: function () {\n                var that = this;\n                that.bind(TOGGLE, proxy(that._click, that));\n                that.bind(CLOSE, proxy(that._click, that));\n                that.bind(CLICK, proxy(that._click, that));\n                that.bind(CHANGE, proxy(that._change, that));\n            },\n            _extendOptions: function (options) {\n                var that = this, tools = options.items ? options.items : Object.keys(that.defaultTools);\n                that.options = options;\n                that.options.items = that._extendToolsOptions(tools);\n            },\n            _extendToolsOptions: function (tools) {\n                var that = this, messages = that.options.messages;\n                if (!tools.length) {\n                    return;\n                }\n                return tools.map(function (tool) {\n                    var isBuiltInTool = $.isPlainObject(tool) && Object.keys(tool).length === 1 && tool.name, toolOptions, toolRules;\n                    tool = isBuiltInTool ? tool.name : tool;\n                    toolOptions = $.isPlainObject(tool) ? tool : extend({}, that.defaultTools[tool]);\n                    toolRules = toolOptions.rules ? JSON.parse(toolOptions.rules) : {};\n                    kendo.deepExtend(toolOptions, {\n                        id: toolOptions.name + '-' + kendo.guid(),\n                        name: toolOptions.name,\n                        text: messages[toolOptions.name],\n                        attributes: {\n                            'aria-label': messages[toolOptions.name],\n                            'title': messages[toolOptions.name],\n                            'data-command': toolOptions.command,\n                            'data-options': toolOptions.options\n                        },\n                        overflow: toolOptions.overflow\n                    });\n                    if (toolOptions.type === 'buttonGroup') {\n                        toolOptions.buttons = toolOptions.buttons.map(proxy(that._mapButtonGroups, that));\n                    }\n                    if (toolOptions.type === 'splitButton') {\n                        toolOptions.menuButtons = toolOptions.menuButtons.map(proxy(that._mapMenuButtons, that));\n                    }\n                    if (toolRules.remote && that.options.filemanager.dataSource.isLocalBinding) {\n                        toolOptions.hidden = true;\n                    }\n                    return toolOptions;\n                }, that);\n            },\n            _mapButtonGroups: function (button) {\n                var that = this, messages = that.options.messages;\n                if (button.group === 'changeView' && button.options === that.options.filemanager.options.initialView) {\n                    button.selected = true;\n                }\n                return kendo.deepExtend(button, {\n                    attributes: extend({}, button.attributes, {\n                        'aria-label': messages[button.name],\n                        'title': messages[button.name],\n                        'data-command': button.command,\n                        'data-options': button.options\n                    })\n                });\n            },\n            _mapMenuButtons: function (button) {\n                var that = this, messages = that.options.messages;\n                return kendo.deepExtend(button, {\n                    text: messages[button.name],\n                    attributes: extend({}, button.attributes, {\n                        'aria-label': messages[button.name],\n                        'title': messages[button.name],\n                        'data-command': button.command,\n                        'data-options': button.options\n                    })\n                });\n            },\n            _click: function (ev) {\n                var command = $(ev.target).data('command'), options = $(ev.target).data('options');\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: options\n                });\n            },\n            _change: function (ev) {\n                var command = $(ev.target).data('command'), options = $(ev.target).data('options');\n                options = extend({}, options, { value: $(ev.target).val() });\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: options\n                });\n            },\n            isToolEnabled: function (toolName) {\n                var that = this, options = that.options, found = false;\n                for (var i = 0; i < options.items.length; i++) {\n                    if (options.items[i].name == toolName) {\n                        found = true;\n                        break;\n                    }\n                }\n                return options.items[toolName] || found;\n            },\n            action: function (args) {\n                this.trigger(ACTION, args);\n            },\n            destroy: function () {\n                if (this.fileManagerSearch) {\n                    this.fileManagerSearch.destroy();\n                }\n                ToolBar.fn.destroy.call(this);\n            }\n        });\n        var SearchTool = Item.extend({\n            init: function (options, toolbar) {\n                var that = this, element = $('<div class=\\'k-filemanager-search-tool k-textbox\\'></div>'), input = $('<input class=\\'k-input\\' autocomplete=\\'off\\' />'), iconWrapper = $('<span class=\\'k-input-icon\\'></span>'), icon = $('<span />');\n                that.element = element;\n                that.input = input;\n                that.iconWrapper = iconWrapper;\n                that.icon = icon;\n                that.options = options;\n                that.options.type = 'fileManagerSearch';\n                that.toolbar = toolbar;\n                that.attributes();\n                that.renderIcon();\n                that.addUidAttr();\n                that.addIdAttr();\n                that.addOverflowAttr();\n                that.input.attr({\n                    placeholder: that.options.text,\n                    title: that.options.text\n                });\n                that.iconWrapper.append(icon);\n                that.element.append(that.input).append(iconWrapper);\n                that._bindEvents();\n                that.toolbar.fileManagerSearch = that;\n            },\n            attributes: function () {\n                if (this.options.attributes) {\n                    this.input.attr(this.options.attributes);\n                }\n            },\n            renderIcon: function () {\n                if (this.options.icon) {\n                    this.icon.addClass('k-icon k-i-' + this.options.icon);\n                }\n            },\n            _bindEvents: function () {\n                this._inputHandler = proxy(this._input, this);\n                this.input.on('input' + NS, this._inputHandler);\n            },\n            _input: function (ev) {\n                this.toolbar.trigger(CHANGE, { target: ev.target });\n            },\n            destroy: function () {\n                this.element.off(NS);\n            }\n        });\n        kendo.toolbar.registerComponent('fileManagerSearch', SearchTool);\n        var FileManagerDetailsToggle = Item.extend({\n            init: function (options, toolbar) {\n                var that = this, element = $('<div class=\\'k-filemanager-details-toggle\\'></div>'), label = $('<label>' + options.text + '</label>'), switchElement = $('<input title=\\'' + options.text + '\\' />');\n                that.element = element;\n                that.input = switchElement;\n                that.label = label;\n                that.options = options;\n                that.toolbar = toolbar;\n                that.attributes();\n                that.addUidAttr();\n                that.addIdAttr();\n                that.addOverflowAttr();\n                that.element.append(that.label);\n                that.element.append(that.input);\n                that.switchInstance = new kendo.ui.Switch(that.input, {\n                    change: proxy(that._change, that),\n                    messages: {\n                        checked: toolbar.options.messages.detailsChecked,\n                        unchecked: toolbar.options.messages.detailsUnchecked\n                    }\n                });\n                that.label.on(CLICK + NS, proxy(that._click, that));\n                that.toolbar.fileManagerDetailsToggle = that;\n            },\n            _change: function (ev) {\n                this.toolbar.trigger(CHANGE, { target: ev.sender.wrapper.parent() });\n            },\n            _click: function (ev) {\n                this.switchInstance.toggle();\n                this.toolbar.trigger(CHANGE, { target: $(ev.target).parent() });\n            },\n            destroy: function () {\n                this.element.off(NS);\n            }\n        });\n        kendo.toolbar.registerComponent('fileManagerDetailsToggle', FileManagerDetailsToggle);\n        extend(kendo.ui.filemanager, { ToolBar: FileManagerToolBar });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/data', ['kendo.data'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, data = kendo.data, Node = data.Node, HierarchicalDataSource = data.HierarchicalDataSource, DataSource = data.DataSource;\n        extend(true, kendo.data, {\n            schemas: {\n                'filemanager': {\n                    data: function (data) {\n                        return data.items || data || [];\n                    },\n                    model: {\n                        id: 'path',\n                        hasChildren: 'hasDirectories',\n                        fields: {\n                            name: {\n                                editable: true,\n                                type: 'String',\n                                defaultValue: 'New Folder'\n                            },\n                            size: {\n                                editable: false,\n                                type: 'Number'\n                            },\n                            path: {\n                                editable: false,\n                                type: 'String'\n                            },\n                            extension: {\n                                editable: false,\n                                type: 'String'\n                            },\n                            isDirectory: {\n                                editable: false,\n                                defaultValue: true,\n                                type: 'Boolean'\n                            },\n                            hasDirectories: {\n                                editable: false,\n                                defaultValue: false,\n                                type: 'Boolean'\n                            },\n                            created: {\n                                type: 'Date',\n                                editable: false\n                            },\n                            createdUtc: {\n                                type: 'Date',\n                                editable: false\n                            },\n                            modified: {\n                                type: 'Date',\n                                editable: false\n                            },\n                            modifiedUtc: {\n                                type: 'Date',\n                                editable: false\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        var FileEntry = Node.define({\n            init: function (value) {\n                var that = this, isDirectory = this.isDirectory;\n                Node.fn.init.call(this, value);\n                if (typeof isDirectory === 'string') {\n                    isDirectory = kendo.getter(isDirectory);\n                }\n                if (kendo.isFunction(isDirectory)) {\n                    var isDirectoryObject = isDirectory.call(that, that);\n                    if (isDirectoryObject && isDirectoryObject.length === 0) {\n                        that.isDirectory = false;\n                    } else {\n                        that.isDirectory = !!isDirectoryObject;\n                    }\n                }\n                if (that.isDirectory) {\n                    that._initChildren();\n                }\n            },\n            _initChildren: function () {\n                var that = this;\n                var children, transport, parameterMap;\n                if (!(that.children instanceof kendo.data.FileManagerDataSource)) {\n                    children = that.children = new kendo.data.FileManagerDataSource(that._childrenOptions);\n                    transport = children.transport;\n                    parameterMap = transport.parameterMap;\n                    transport.parameterMap = function (data, type) {\n                        if (type === 'read' || type === 'create') {\n                            data.target = that.id;\n                        }\n                        if (parameterMap) {\n                            data = parameterMap(data, type);\n                        }\n                        return data;\n                    };\n                    children.parent = function () {\n                        return that;\n                    };\n                    children.bind('change', function (e) {\n                        e.node = e.node || that;\n                        that.trigger('change', e);\n                    });\n                    children.bind('error', function (e) {\n                        var collection = that.parent();\n                        if (collection) {\n                            e.node = e.node || that;\n                            collection.trigger('error', e);\n                        }\n                    });\n                    that._updateChildrenField();\n                }\n            },\n            isNew: function () {\n                if (this.fileManagerNewItem) {\n                    delete this.fileManagerNewItem;\n                    return true;\n                }\n                return this.id === this._defaultId;\n            }\n        });\n        var FileManagerDataSource = HierarchicalDataSource.extend({\n            init: function (options) {\n                var fileEntry = FileEntry.define({ children: options });\n                if (options.filter && !options.serverFiltering) {\n                    this._hierarchicalFilter = options.filter;\n                    options.filter = null;\n                }\n                DataSource.fn.init.call(this, $.extend(true, {}, {\n                    schema: {\n                        modelBase: fileEntry,\n                        model: fileEntry\n                    }\n                }, options));\n                this.isLocalBinding = this.transport instanceof kendo.data.LocalTransport;\n                this._attachBubbleHandlers();\n            },\n            insert: function (index, model) {\n                var parentNode = this.parent();\n                if (parentNode && parentNode._initChildren) {\n                    if (model && model.isDirectory) {\n                        parentNode.hasDirectories = true;\n                    }\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n                return DataSource.fn.insert.call(this, index, model);\n            },\n            remove: function (node) {\n                var parentNode = node.parentNode(), dataSource = this, result;\n                if (parentNode && parentNode._initChildren) {\n                    dataSource = parentNode.children;\n                }\n                result = DataSource.fn.remove.call(dataSource, node);\n                if (parentNode && (dataSource.data() && !dataSource.data().length)) {\n                    parentNode.hasChildren = false;\n                } else if (parentNode && !this._hasDirectories(parentNode)) {\n                    parentNode.hasDirectories = false;\n                }\n                return result;\n            },\n            _hasDirectories: function (node) {\n                var result;\n                if (!node.children.data()) {\n                    return false;\n                }\n                result = node.children.data().filter(function (item) {\n                    return item.isDirectory;\n                });\n                return !!result.length;\n            }\n        });\n        FileManagerDataSource.create = function (options) {\n            options = options && options.push ? { data: options } : options;\n            var dataSource = options || {}, data = dataSource.data;\n            if (data && data._dataSource) {\n                return data._dataSource;\n            }\n            dataSource.data = data;\n            return dataSource instanceof FileManagerDataSource ? dataSource : new FileManagerDataSource(dataSource);\n        };\n        extend(kendo.data, {\n            FileManagerDataSource: FileManagerDataSource,\n            FileEntry: FileEntry\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('filemanager/contextmenu', ['kendo.menu'], f);\n}(function () {\n    (function ($, undefined) {\n        var kendo = window.kendo, extend = $.extend, proxy = $.proxy, template = kendo.template, ContextMenu = kendo.ui.ContextMenu, ACTION = 'action';\n        var FileManagerContextMenu = ContextMenu.extend({\n            init: function (element, options) {\n                var that = this;\n                ContextMenu.fn.init.call(that, element, options);\n                that._overrideTemplates();\n                that._extendItems();\n                that.bind('select', proxy(that._onSelect, that));\n            },\n            _overrideTemplates: function () {\n                this.templates.sprite = template('#if(spriteCssClass) {#<span class=\\'#= spriteCssClass #\\'></span>#}#');\n            },\n            defaultItems: {\n                'rename': {\n                    text: 'Rename',\n                    spriteCssClass: 'k-icon k-i-edit',\n                    command: 'RenameCommand'\n                },\n                'delete': {\n                    text: 'Delete',\n                    spriteCssClass: 'k-icon k-i-delete',\n                    command: 'DeleteCommand'\n                }\n            },\n            events: ContextMenu.fn.events.concat([ACTION]),\n            _extendItems: function () {\n                var that = this, items = that.options.items, item, isBuiltInTool;\n                if (items && items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        item = items[i];\n                        isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n                        if (isBuiltInTool) {\n                            item = item.name;\n                        }\n                        if ($.isPlainObject(item)) {\n                            that._extendItem(item);\n                            that.append(item);\n                        } else if (that.defaultItems[item]) {\n                            item = that.defaultItems[item];\n                            that._extendItem(item);\n                            that.append(item);\n                        }\n                    }\n                } else {\n                    for (var key in that.defaultItems) {\n                        item = that.defaultItems[key];\n                        that._extendItem(item);\n                        that.append(item);\n                    }\n                }\n            },\n            _extendItem: function (item) {\n                var that = this, messages = that.options.messages;\n                extend(item, {\n                    text: messages[item.text],\n                    spriteCssClass: item.spriteCssClass || '',\n                    attr: { 'data-command': item.command }\n                });\n            },\n            _onSelect: function (ev) {\n                var command = $(ev.item).data('command');\n                var target = $(ev.target);\n                if (!command) {\n                    return;\n                }\n                this.action({\n                    command: command,\n                    options: { target: target }\n                });\n            },\n            action: function (args) {\n                this.trigger(ACTION, args);\n            }\n        });\n        extend(kendo.ui.filemanager, { ContextMenu: FileManagerContextMenu });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.filemanager', [\n        'filemanager/commands',\n        'filemanager/view',\n        'filemanager/toolbar',\n        'filemanager/data',\n        'filemanager/contextmenu',\n        'kendo.breadcrumb',\n        'kendo.upload',\n        'kendo.dialog',\n        'kendo.resizable'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'filemanager',\n        name: 'FileManager',\n        category: 'web',\n        description: 'The FileManager widget displays offers file management functionality.',\n        depends: [\n            'core',\n            'data',\n            'listview',\n            'toolbar',\n            'breadcrumb',\n            'menu',\n            'treeview',\n            'upload',\n            'dialog',\n            'switch',\n            'resizable',\n            'selectable',\n            'editable'\n        ],\n        features: [{\n                id: 'filemanager-grid-view',\n                name: 'GridView',\n                description: 'Support for GridView',\n                depends: ['grid']\n            }]\n    };\n    (function ($, undefined) {\n        var ui = kendo.ui, extend = $.extend, isPlainObject = $.isPlainObject, isArray = $.isArray, DataBoundWidget = ui.DataBoundWidget, proxy = $.proxy, template = kendo.template, outerHeight = kendo._outerHeight, NAVIGATE = 'navigate', SELECT = 'select', OPEN = 'open', ERROR = 'error', CHANGE = 'change', UPLOAD = 'upload', SUCCESS = 'success', CLOSE = 'close', HIDE = 'hide', LOAD = 'load', DATABINDING = 'dataBinding', DATABOUND = 'dataBound', DROP = 'drop', EXECUTE = 'execute', KEYDOWNACTION = 'keydownAction', TREE_TYPE = 'tree', DOT = '.';\n        var fileManagerStyles = {\n            wrapper: 'k-widget k-filemanager',\n            header: 'k-filemanager-header',\n            navigation: 'k-filemanager-navigation',\n            navigationContainer: 'k-filemanager-navigation-container',\n            contentContainer: 'k-filemanager-content-container',\n            content: 'k-filemanager-content',\n            preview: 'k-filemanager-preview',\n            previewContainer: 'k-filemanager-preview-container',\n            toolbar: 'k-filemanager-toolbar',\n            treeview: 'k-filemanager-treeview',\n            breadcrumb: 'k-filemanager-breadcrumb',\n            grid: 'k-filemanager-grid',\n            list: 'k-filemanager-listview',\n            view: 'k-filemanager-view',\n            upload: 'k-filemanager-upload',\n            uploadDialog: 'k-filemanager-upload-dialog',\n            splitBar: 'k-splitbar',\n            splitBarHorizontal: 'k-splitbar-horizontal k-splitbar-draggable-horizontal',\n            splitBarHover: 'k-splitbar-horizontal-hover',\n            splitBarIcon: 'k-icon k-resize-handle',\n            splitBarNavigation: 'k-filemanager-splitbar-navigation',\n            splitBarPreview: 'k-filemanager-splitbar-preview',\n            resizable: 'k-filemanager-resizable'\n        };\n        var fileManagerTemplateStyles = {\n            fileInfo: 'k-file-info',\n            filePreviewWrapper: 'k-file-preview-wrapper',\n            fileTitleWrapper: 'k-file-title-wrapper',\n            fileTitle: 'k-file-title',\n            fileMetaWrapper: 'k-file-meta-wrapper',\n            metaLabel: 'k-file-meta-label',\n            metaValue: 'k-file-meta-value',\n            extension: 'k-file-type',\n            size: 'k-file-size',\n            created: 'k-file-created',\n            modified: 'k-file-modified'\n        };\n        var viewTypes = {\n            grid: 'grid',\n            list: 'list'\n        };\n        var NO_FILE_PREVIEW_TEMPLATE = '<p>#= messages.noFileSelected #</p>';\n        var SINGLE_FILES_PREVIEW_TEMPLATE = '<div class=\"#=styles.fileInfo#\">' + '<div class=\"#=styles.filePreviewWrapper#\">' + '<span class=\"k-icon k-i-#= !selection[0].isDirectory ? kendo.getFileGroup(selection[0].extension, true) : \"folder\" #\"></span>' + '</div>' + '<div class=\"#=styles.fileTitleWrapper#\">' + '<span class=\"#=styles.fileTitle#\">#=selection[0].name#</span>' + '</div>' + '#if(metaFields){#' + '<dl class=\"#=styles.fileMetaWrapper#\">' + '#for(var i = 0; i < metaFields.length; i+=1){#' + '#var field = metaFields[i]#' + '<dt class=\"#=styles.metaLabel#\">#=messages[field]#: </dt>' + '<dd class=\"#=styles.metaValue# #=styles[field]#\">' + '#if(field == \"size\"){#' + ' #=kendo.getFileSizeMessage(selection[0][field])#' + '#} else if(selection[0][field] instanceof Date) {#' + ' #=kendo.toString(selection[0][field], \"G\")#' + '#} else if(field == \"extension\") {#' + ' #= !selection[0].isDirectory ? kendo.getFileGroup(selection[0].extension) : \"folder\"#' + '#} else {#' + ' #=selection[0][field]#' + '#}#' + '</dd>' + '<dd class=\"line-break\"></dd>' + '# } #' + '</dl>' + '#}#' + '</div>';\n        var MULTIPLE_FILES_PREVIEW_TEMPLATE = '<div class=\"#=styles.fileInfo#\">' + '<div class=\"#=styles.filePreviewWrapper#\">' + '<span class=\"k-icon k-i-file\"></span>' + '</div>' + '<div class=\"#=styles.fileTitleWrapper#\">' + '<span class=\"#=styles.fileTitle#\">' + '#=selection.length# ' + '#=messages.items#' + '</span>' + '</div>' + '</div>';\n        var FileManager = DataBoundWidget.extend({\n            init: function (element, options) {\n                var that = this;\n                DataBoundWidget.fn.init.call(that, element, options);\n                that.options = kendo.deepExtend({}, that.options, options);\n                that.defaultSortOption = {\n                    field: 'name',\n                    dir: 'asc'\n                };\n                that.folderSortOption = {\n                    field: 'isDirectory',\n                    dir: 'desc'\n                };\n                that._dataSource();\n                that._wrapper();\n                that._renderHeader();\n                that._renderContentContainer();\n                that._initContextMenu();\n                that._renderNavigation();\n                that._renderContent();\n                that._renderPreview();\n                that._initUploadDialog();\n                that._resizable();\n                that.resize();\n                kendo.notify(that, kendo.ui);\n            },\n            options: {\n                name: 'FileManager',\n                height: 500,\n                resizable: true,\n                initialView: 'list',\n                toolbar: { resizable: true },\n                contextMenu: {},\n                upload: {},\n                uploadUrl: '',\n                views: {},\n                breadcrumb: {},\n                draggable: true,\n                dialogs: {\n                    upload: { width: 530 },\n                    moveConfirm: {\n                        width: 350,\n                        closable: true\n                    },\n                    deleteConfirm: {\n                        width: 360,\n                        closable: true\n                    },\n                    renamePrompt: {\n                        width: 350,\n                        closable: true\n                    }\n                },\n                previewPane: {\n                    metaFields: [\n                        'extension',\n                        'size',\n                        'created',\n                        'modified'\n                    ],\n                    noFileTemplate: NO_FILE_PREVIEW_TEMPLATE,\n                    singleFileTemplate: SINGLE_FILES_PREVIEW_TEMPLATE,\n                    multipleFilesTemplate: MULTIPLE_FILES_PREVIEW_TEMPLATE\n                },\n                messages: {\n                    toolbar: {\n                        createFolder: 'New Folder',\n                        upload: 'Upload',\n                        sortDirection: 'Sort Direction',\n                        sortDirectionAsc: 'Sort Direction Ascending',\n                        sortDirectionDesc: 'Sort Direction Descending',\n                        sortField: 'Sort By',\n                        nameField: 'Name',\n                        sizeField: 'File Size',\n                        typeField: 'Type',\n                        dateModifiedField: 'Date Modified',\n                        dateCreatedField: 'Date Created',\n                        listView: 'List View',\n                        gridView: 'Grid View',\n                        search: 'Search',\n                        details: 'View Details',\n                        detailsChecked: 'On',\n                        detailsUnchecked: 'Off',\n                        'delete': 'Delete',\n                        rename: 'Rename'\n                    },\n                    views: {\n                        nameField: 'Name',\n                        sizeField: 'File Size',\n                        typeField: 'Type',\n                        dateModifiedField: 'Date Modified',\n                        dateCreatedField: 'Date Created',\n                        items: 'items'\n                    },\n                    dialogs: {\n                        upload: {\n                            title: 'Upload Files',\n                            clear: 'Clear List',\n                            done: 'Done'\n                        },\n                        moveConfirm: {\n                            title: 'Confirm',\n                            content: '<p style=\\'text-align: center;\\'>Do you want to move or copy?</p>',\n                            okText: 'Copy',\n                            cancel: 'Move',\n                            close: 'close'\n                        },\n                        deleteConfirm: {\n                            title: 'Confirm',\n                            content: '<p style=\\'text-align: center;\\'>Are you sure you want to delete the selected file(s)?</br>You cannot undo this action.</p>',\n                            okText: 'Delete',\n                            cancel: 'Cancel',\n                            close: 'close'\n                        },\n                        renamePrompt: {\n                            title: 'Prompt',\n                            content: '<p style=\\'text-align: center;\\'>Enter new name for the file.</p>',\n                            okText: 'Rename',\n                            cancel: 'Cancel',\n                            close: 'close'\n                        }\n                    },\n                    previewPane: {\n                        noFileSelected: 'No File Selected',\n                        extension: 'Type',\n                        size: 'Size',\n                        created: 'Date Created',\n                        createdUtc: 'Date Created UTC',\n                        modified: 'Date Modified',\n                        modifiedUtc: 'Date Modified UTC',\n                        items: 'items'\n                    }\n                }\n            },\n            events: [\n                NAVIGATE,\n                SELECT,\n                OPEN,\n                DATABINDING,\n                DATABOUND,\n                ERROR,\n                DROP,\n                EXECUTE\n            ],\n            _dataSource: function () {\n                var that = this, options = that.options, dataSourceOptions = options.dataSource || {}, typeSortOrder = that.folderSortOption, nameSortOrder = that.defaultSortOption, dataSource;\n                if (!(dataSourceOptions instanceof kendo.data.FileManagerDataSource)) {\n                    if (isArray(dataSourceOptions)) {\n                        dataSource = {\n                            data: dataSourceOptions,\n                            autoSync: false,\n                            sort: [\n                                typeSortOrder,\n                                nameSortOrder\n                            ]\n                        };\n                    } else {\n                        dataSource = extend(true, dataSourceOptions, {\n                            autoSync: false,\n                            sort: [\n                                typeSortOrder,\n                                nameSortOrder\n                            ]\n                        });\n                    }\n                    if (dataSourceOptions && isPlainObject(dataSourceOptions.schema)) {\n                        dataSource.schema = dataSourceOptions.schema;\n                    } else if (isPlainObject(kendo.data.schemas.filemanager)) {\n                        dataSource.schema = kendo.data.schemas.filemanager;\n                    }\n                } else {\n                    dataSource = dataSourceOptions;\n                }\n                if (that.dataSource && that._errorHandler) {\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                } else {\n                    that._errorHandler = proxy(that._error, that);\n                    that._changeHandler = proxy(that._change, that);\n                }\n                that.dataSource = kendo.data.FileManagerDataSource.create(dataSource).bind(ERROR, that._errorHandler).bind(CHANGE, that._changeHandler);\n            },\n            _error: function (ev) {\n                if (!this.trigger(ERROR, ev)) {\n                    throw new Error('Error! The requested URL returned ' + ev.xhr.status + ' - ' + ev.xhr.statusText);\n                }\n            },\n            _wrapper: function () {\n                var that = this, options = that.options, width = options.width, height = options.height;\n                that.wrapper = that.element.addClass(fileManagerStyles.wrapper);\n                if (width) {\n                    that.wrapper.width(width);\n                }\n                if (height) {\n                    that.wrapper.height(height);\n                }\n                that._resizeHandler = kendo.onResize(function () {\n                    that.resize(true);\n                });\n            },\n            _renderHeader: function () {\n                var that = this, options = that.options;\n                if (options.toolbar) {\n                    that.header = $('<div />').addClass(fileManagerStyles.header);\n                    that.header.append(that._initToolbar().element);\n                }\n                that.wrapper.append(that.header);\n            },\n            _renderContentContainer: function () {\n                var that = this, container = $('<div />').addClass(fileManagerStyles.contentContainer);\n                that.contentContainer = container;\n                that.wrapper.append(that.contentContainer);\n            },\n            _initContextMenu: function () {\n                var that = this, options = that.options, menuOptions = extend({}, options.contextMenu, {\n                        filemanager: that,\n                        messages: options.messages.toolbar,\n                        target: that.contentContainer,\n                        filter: '[data-uid]',\n                        action: that.executeCommand.bind(that)\n                    });\n                if (that.options.contextMenu === false || that.dataSource.isLocalBinding) {\n                    return;\n                }\n                that.contextMenu = new ui.filemanager.ContextMenu('<ul></ul>', menuOptions);\n                that.contextMenu.bind(OPEN, proxy(that._cacheFocus, that));\n            },\n            _renderNavigation: function () {\n                var that = this;\n                that.navigation = $('<div />').addClass(fileManagerStyles.navigation);\n                that.navigationContainer = $('<div />').addClass(fileManagerStyles.navigationContainer);\n                that.navigation.append(that.navigationContainer);\n                that.navigationContainer.append(that._initTreeView().element);\n                that.contentContainer.append(that.navigation);\n            },\n            _renderContent: function () {\n                var that = this, options = that.options, toolbar = that.toolbar;\n                that.content = $('<div />').addClass(fileManagerStyles.content);\n                if (options.breadcrumb) {\n                    that.content.append(that._initBreadcrumb().element);\n                }\n                that.content.append(that._initView());\n                if (!toolbar || !toolbar.isToolEnabled(toolbar.defaultTools.upload.name)) {\n                    that.content.append(that._initUpload().wrapper.hide());\n                }\n                that.contentContainer.append(that.content);\n            },\n            _renderPreview: function () {\n                var that = this, enablePreview = that.options.previewPane;\n                if (!enablePreview) {\n                    return;\n                }\n                that.preview = $('<div />').addClass(fileManagerStyles.preview);\n                that.previewContainer = $('<div />').addClass(fileManagerStyles.previewContainer);\n                that.preview.append(that.previewContainer);\n                that._setPreviewPaneContent();\n                that.contentContainer.append(that.preview.hide());\n            },\n            _setPreviewPaneContent: function () {\n                var that = this, options = that.options, previewPaneMessages = options.messages.previewPane, previewPaneOptions = options.previewPane, selection = that.getSelected(), previewTemplate;\n                if (!selection) {\n                    previewTemplate = template(previewPaneOptions.noFileTemplate)({ messages: previewPaneMessages });\n                    that.previewContainer.html(previewTemplate);\n                    return;\n                }\n                previewTemplate = selection.length === 1 ? previewPaneOptions.singleFileTemplate : previewPaneOptions.multipleFilesTemplate;\n                previewTemplate = template(previewTemplate)({\n                    styles: fileManagerTemplateStyles,\n                    messages: previewPaneMessages,\n                    selection: selection,\n                    metaFields: previewPaneOptions.metaFields\n                });\n                that.previewContainer.html(previewTemplate);\n            },\n            _initToolbar: function () {\n                var that = this, options = that.options, toolbarElement = $('<div />').addClass(fileManagerStyles.toolbar), toolbarOptions = extend({}, options.toolbar, {\n                        filemanager: this,\n                        messages: options.messages.toolbar,\n                        action: that.executeCommand.bind(that)\n                    });\n                that.toolbar = new ui.filemanager.ToolBar(toolbarElement, toolbarOptions);\n                return that.toolbar;\n            },\n            _initTreeView: function () {\n                var that = this, treeViewElement = $('<div />').addClass(fileManagerStyles.treeview), options = that.options.views[TREE_TYPE], explicitOptions = extend(true, {}, {\n                        dataSource: that.options.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable,\n                        isLocalBinding: that.dataSource.isLocalBinding\n                    });\n                that.treeView = new ui.filemanager.ViewComponents[TREE_TYPE](treeViewElement, options, explicitOptions);\n                that.treeView.bind(NAVIGATE, proxy(that._navigate, that)).bind(LOAD, proxy(that._load, that)).bind(DROP, proxy(that._drop, that)).bind(KEYDOWNACTION, proxy(that._keydownAction, that));\n                return that.treeView;\n            },\n            _drop: function (ev) {\n                var that = this;\n                if (!that.trigger(DROP, ev) && ev.items.indexOf(ev.target) < 0) {\n                    that._confirm({\n                        type: 'move',\n                        target: ev.target\n                    }).done(function () {\n                        that.executeCommand({\n                            command: 'CopyCommand',\n                            options: ev\n                        });\n                    }).fail(function () {\n                        that.executeCommand({\n                            command: 'MoveCommand',\n                            options: ev\n                        });\n                    });\n                }\n            },\n            _keydownAction: function (ev) {\n                var that = this, keyCode = ev.keyCode, keys = kendo.keys;\n                if (keyCode === keys.DELETE) {\n                    that.executeCommand({\n                        command: 'DeleteCommand',\n                        options: { target: ev.target }\n                    });\n                }\n                if (keyCode === keys.F2 && that._viewType !== viewTypes.grid) {\n                    that.executeCommand({\n                        command: 'RenameCommand',\n                        options: { target: ev.target }\n                    });\n                }\n            },\n            _confirm: function (options) {\n                var that = this, messages = that.options.messages.dialogs[options.type + 'Confirm'];\n                var confirm = $('<div></div>').kendoConfirm(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages\n                }, that.options.dialogs[options.type + 'Confirm'])).data('kendoConfirm');\n                confirm.bind(OPEN, proxy(that._cacheFocus, that));\n                confirm.bind(HIDE, proxy(that._restoreFocus, that, options.target));\n                confirm.open();\n                confirm.wrapper.removeClass('k-confirm');\n                return confirm.result;\n            },\n            _prompt: function (options) {\n                var that = this, messages = this.options.messages.dialogs[options.type + 'Prompt'];\n                var prompt = $('<div></div>').kendoPrompt(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages,\n                    value: options.defaultInput\n                }, this.options.dialogs[options.type + 'Prompt'])).data('kendoPrompt');\n                prompt.bind(OPEN, proxy(that._cacheFocus, that));\n                prompt.bind(CLOSE, proxy(that._restoreFocus, that, options.target));\n                prompt.open();\n                prompt.wrapper.removeClass('k-prompt');\n                return prompt.result;\n            },\n            _cacheFocus: function () {\n                var that = this, activeElement = $(document.activeElement), view = that.view(), treeView = that.treeView.widgetComponent;\n                if (that.contextMenu && that.contextMenu.popup.visible()) {\n                    return;\n                }\n                that.treeView._shouldFocus = false;\n                if (treeView.current() && treeView.current().find('.k-state-focused').length || activeElement.hasClass(fileManagerStyles.treeview)) {\n                    that.treeView._shouldFocus = true;\n                }\n                view._focusElement = activeElement.hasClass(fileManagerStyles[that._viewType]) ? activeElement : null;\n            },\n            _restoreFocus: function (target) {\n                var that = this, view = that.view();\n                if (!target) {\n                    return;\n                }\n                if (view._focusElement) {\n                    view._focusElement.focus();\n                } else if (target.closest(':kendoFocusable').length) {\n                    target.closest(':kendoFocusable').focus();\n                }\n            },\n            _initView: function () {\n                var that = this, viewWrapper = $('<div />').addClass(fileManagerStyles.view), initialView = that.options.initialView;\n                that.viewWrapper = viewWrapper;\n                that.viewWrapper.append(that.view(initialView));\n                return viewWrapper;\n            },\n            _initBreadcrumb: function () {\n                var that = this, options = that.options, breadcrumbElement = $('<nav />').addClass(fileManagerStyles.breadcrumb), breadcrumbOptions = extend({}, {\n                        items: [{\n                                type: 'rootitem',\n                                text: ''\n                            }],\n                        change: proxy(that._breadcrumbChange, that)\n                    }, options.breadcrumb);\n                that.breadcrumb = new ui.Breadcrumb(breadcrumbElement, breadcrumbOptions);\n                return that.breadcrumb;\n            },\n            _breadcrumbChange: function (ev) {\n                this._navigate({ path: ev.value });\n            },\n            _initUploadDialog: function () {\n                var that = this, options = that.options, dialogMessages = options.messages.dialogs.upload, dialogElement = $('<div />'), dialogOptions = extend({}, {\n                        title: dialogMessages.title,\n                        modal: true,\n                        visible: false,\n                        width: 500,\n                        actions: [\n                            {\n                                text: dialogMessages.clear,\n                                action: proxy(that._clearUploadFilesList, that)\n                            },\n                            {\n                                text: dialogMessages.done,\n                                primary: true\n                            }\n                        ],\n                        messages: dialogMessages\n                    }, options.dialogs.upload), uploadInstance;\n                if (!that._shouldInitUpload()) {\n                    return;\n                }\n                uploadInstance = that._initUpload();\n                that.uploadDialog = new ui.Dialog(dialogElement, dialogOptions);\n                that.uploadDialog.wrapper.addClass(fileManagerStyles.uploadDialog);\n                that.uploadDialog.element.append(uploadInstance.wrapper);\n                that.uploadDialog.bind(OPEN, proxy(that._toggleUploadDropZone, that, ''));\n                that.uploadDialog.bind(CLOSE, proxy(that._toggleUploadDropZone, that, that.viewWrapper));\n                return that.uploadDialog;\n            },\n            _shouldInitUpload: function () {\n                var that = this, options = that.options, shouldInit = false;\n                if ((options.uploadUrl || options.upload.async && options.upload.async.saveUrl) && options.upload !== false) {\n                    shouldInit = true;\n                }\n                return shouldInit;\n            },\n            _initUpload: function () {\n                var that = this, options = that.options, uploadElement = $('<input type=\\'file\\' name=\\'file\\'/>').addClass(fileManagerStyles.upload), uploadOptions = extend(true, {\n                        async: {\n                            autoUpload: true,\n                            saveUrl: options.uploadUrl\n                        },\n                        dropZone: that.viewWrapper\n                    }, options.upload);\n                that.upload = new ui.Upload(uploadElement[0], uploadOptions);\n                that.upload.bind(UPLOAD, proxy(that._sendUploadPathParameter, that));\n                that.upload.bind(SUCCESS, proxy(that._success, that));\n                return that.upload;\n            },\n            _sendUploadPathParameter: function (ev) {\n                ev.data = { path: this.path() };\n            },\n            _success: function () {\n                this._view.widgetComponent.dataSource.read();\n            },\n            _clearUploadFilesList: function () {\n                var that = this, upload = that.upload;\n                if (upload) {\n                    upload.clearAllFiles();\n                }\n            },\n            _toggleUploadDropZone: function (zone) {\n                var that = this, upload = that.upload;\n                if (upload) {\n                    upload.setOptions({ dropZone: zone });\n                }\n            },\n            _binding: function (ev) {\n                if (this.trigger(DATABINDING, {\n                        source: 'view',\n                        action: ev.action,\n                        items: ev.items,\n                        index: ev.index\n                    })) {\n                    ev.preventDefault();\n                }\n            },\n            _bound: function () {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n                this.trigger(DATABOUND);\n            },\n            _createResizableSplitBar: function (cssClass) {\n                var splitBar = $('<div />').addClass(fileManagerStyles.splitBar).addClass(fileManagerStyles.splitBarHorizontal).addClass(cssClass), icon = $('<span />').addClass(fileManagerStyles.splitBarIcon);\n                splitBar.append(icon);\n                splitBar.hover(function () {\n                    $(this).toggleClass(fileManagerStyles.splitBarHover);\n                });\n                return splitBar;\n            },\n            _initResizableNavigation: function () {\n                var that = this, wrapper = that.wrapper, splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarNavigation), contentWrapper = wrapper.find(DOT + fileManagerStyles.content), navigationWrapper = wrapper.find(DOT + fileManagerStyles.navigation), contentWrapperWidth, navigationWrapperWidth;\n                splitBar.insertAfter(navigationWrapper);\n                that._resizeDraggable.navigation = that.wrapper.find(splitBar).end().kendoResizable({\n                    handle: DOT + fileManagerStyles.splitBarNavigation,\n                    start: function () {\n                        contentWrapperWidth = contentWrapper.width();\n                        navigationWrapperWidth = navigationWrapper.width();\n                    },\n                    resize: function (e) {\n                        var delta = e.x.initialDelta;\n                        if (kendo.support.isRtl(wrapper)) {\n                            delta *= -1;\n                        }\n                        if (navigationWrapperWidth + delta < -2 || contentWrapperWidth - delta < -2) {\n                            return;\n                        }\n                        navigationWrapper.width(navigationWrapperWidth + delta);\n                    }\n                }).getKendoResizable();\n            },\n            _initResizablePreview: function () {\n                var that = this, wrapper = that.wrapper, splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarPreview), contentWrapper = wrapper.find(DOT + fileManagerStyles.content), previewWrapper = wrapper.find(DOT + fileManagerStyles.preview), contentWrapperWidth, previewWrapperWidth;\n                if (!that.options.previewPane) {\n                    return;\n                }\n                splitBar.insertBefore(previewWrapper).hide();\n                that._resizeDraggable.preview = wrapper.find(splitBar).end().kendoResizable({\n                    handle: DOT + fileManagerStyles.splitBarPreview,\n                    start: function () {\n                        contentWrapperWidth = contentWrapper.width();\n                        previewWrapperWidth = previewWrapper.width();\n                    },\n                    resize: function (e) {\n                        var delta = e.x.initialDelta;\n                        if (kendo.support.isRtl(wrapper)) {\n                            delta *= -1;\n                        }\n                        if (previewWrapperWidth - delta < -2 || contentWrapperWidth + delta < -2) {\n                            return;\n                        }\n                        previewWrapper.width(previewWrapperWidth - delta);\n                    }\n                }).getKendoResizable();\n            },\n            _resizable: function () {\n                var that = this, options = that.options;\n                that._resizeDraggable = {};\n                if (!options.resizable) {\n                    return;\n                }\n                that.wrapper.addClass(fileManagerStyles.resizable);\n                that._initResizableNavigation();\n                that._initResizablePreview();\n            },\n            view: function (type) {\n                var that = this, element = $('<div></div>'), options = that.options.views[type], explicitOptions = extend(true, {}, {\n                        dataSource: that._viewDataSource || that.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable\n                    });\n                if (type === undefined) {\n                    return that._view;\n                }\n                if (!ui.filemanager.ViewComponents[type]) {\n                    throw new Error(kendo.format('There is no {0} ViewComponent registered!', type));\n                }\n                if (that._view && that._view.destroy) {\n                    that._view.destroy();\n                    that.viewWrapper.empty();\n                }\n                that._viewType = type;\n                that._view = new ui.filemanager.ViewComponents[type](element, options, explicitOptions);\n                that._view.bind(SELECT, proxy(that._select, that));\n                that._view.bind(OPEN, proxy(that._open, that));\n                that._view.bind(DATABINDING, proxy(that._binding, that));\n                that._view.bind(DATABOUND, proxy(that._bound, that));\n                that._view.bind(DROP, proxy(that._drop, that));\n                that._view.bind(KEYDOWNACTION, proxy(that._keydownAction, that));\n                that._view.element.addClass(fileManagerStyles[type]);\n                that.viewWrapper.removeClass(Object.keys(ui.filemanager.ViewComponents).map(function (el) {\n                    return fileManagerStyles.view + '-' + el;\n                }).join(' ')).addClass(fileManagerStyles.view + '-' + type);\n                that.viewWrapper.append(that._view.element);\n            },\n            executeCommand: function (args) {\n                var commandName = args.command, commandOptions = extend({ filemanager: this }, isPlainObject(args.options) ? args.options : { value: args.options }), command = new ui.filemanager.commands[commandName](commandOptions);\n                if (!this.trigger(EXECUTE, args)) {\n                    return command.exec();\n                }\n            },\n            _navigate: function (ev) {\n                var that = this, path = ev.path;\n                if (!that.trigger(NAVIGATE, { path: path })) {\n                    that.navigate(path);\n                }\n            },\n            _load: function (ev) {\n                var entry = this.dataSource.get(ev.entryId);\n                entry.load();\n            },\n            _select: function (ev) {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n                this.trigger(SELECT, { entries: ev.entries });\n            },\n            _open: function (ev) {\n                var that = this, entry = ev.entry;\n                that.trigger(OPEN, { entry: entry });\n                if (entry.isDirectory) {\n                    that._navigate({ path: entry.id });\n                }\n            },\n            _change: function (ev) {\n                var that = this, targetDataSource = ev.node ? ev.node.children : that.dataSource;\n                if (that.trigger(DATABINDING, {\n                        source: 'tree',\n                        action: ev.action,\n                        items: ev.items,\n                        index: ev.index\n                    })) {\n                    return;\n                }\n                that.treeView._refreshDataSource(ev);\n                if (ev.action === 'remove' || ev.action === 'itemchange' || ev.action === 'add') {\n                    targetDataSource.sync();\n                }\n                if (ev.action === 'remove' && that._viewDataSource && that._viewDataSource.parent() && ev.items[0] === that._viewDataSource.parent()) {\n                    that._navigateToParent(ev.items[0]);\n                }\n                if (ev.action == 'itemchange' && that._viewDataSource && that._viewDataSource.parent() && that.path().indexOf(ev.items[0].id) >= 0) {\n                    that._navigateToParent(ev.items[0]);\n                }\n                if (ev.action === 'itemchange') {\n                    ev.items[0].loaded(false);\n                }\n            },\n            _navigateToParent: function (item) {\n                var that = this;\n                var parent = item.parentNode();\n                var parentNodePath = parent ? parent.id : '';\n                that._navigate({ path: parentNodePath });\n            },\n            _buildBreadcrumbPath: function (entry) {\n                var that = this, breadcrumb = that.breadcrumb, values = [];\n                while (entry) {\n                    values.push(entry.name);\n                    entry = entry.parentNode();\n                }\n                values.push('');\n                breadcrumb.value(values.reverse().join('/'));\n            },\n            _adjustDimensions: function () {\n                var that = this, wrapper = that.wrapper, gridSelector = DOT + fileManagerStyles.grid, listViewSelector = DOT + fileManagerStyles.list, contentContainer = DOT + fileManagerStyles.contentContainer, totalHeight = wrapper.height(), toolbarHeight = 0, breadcrumbHeight = 0;\n                if (that.toolbar) {\n                    toolbarHeight = outerHeight(that.toolbar.wrapper);\n                }\n                if (that.breadcrumb) {\n                    breadcrumbHeight = outerHeight(that.breadcrumb.wrapper);\n                }\n                if (that.options.height !== 'auto') {\n                    wrapper.find([gridSelector].join(',')).height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n                    wrapper.find(listViewSelector).parent().height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n                    wrapper.find(contentContainer).height(totalHeight - toolbarHeight);\n                }\n            },\n            _resize: function () {\n                this._adjustDimensions();\n                kendo.resize(this.element.children());\n            },\n            setDataSource: function (dataSource) {\n                var that = this;\n                that.options.dataSource = dataSource;\n                that._dataSource();\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                    that.header.empty();\n                    that.header.append(that._initToolbar().element);\n                }\n                if (that.treeView) {\n                    that.treeView.destroy();\n                    that.navigationContainer.empty();\n                    that.navigationContainer.append(that._initTreeView().element);\n                }\n                if (that._view) {\n                    that.view(that._viewType || that.options.initialView);\n                }\n                that._initContextMenu();\n            },\n            refresh: function () {\n                var that = this, dataSource = that._viewDataSource || that.dataSource;\n                dataSource.read();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.wrapper);\n            },\n            getSelected: function () {\n                var that = this, items = that._view.getSelected(), treeView = that.treeView;\n                if (items && items.length) {\n                    return items;\n                }\n                var item = treeView.getSelected();\n                if (item) {\n                    return [that.dataSource.get(item.id)];\n                }\n            },\n            path: function () {\n                return this._path || '';\n            },\n            navigate: function (path) {\n                var that = this, dataSource = that.dataSource, entry = dataSource.get(path.replace(/^\\//, '')), view = that._view, treeView = that.treeView, breadcrumb = that.breadcrumb;\n                that._path = path;\n                if (that.trigger(DATABINDING, {\n                        source: 'navigation',\n                        action: 'rebind',\n                        items: [entry]\n                    })) {\n                    return;\n                }\n                if (breadcrumb) {\n                    that._buildBreadcrumbPath(entry);\n                }\n                if (path === '' || path === '/') {\n                    dataSource.sort([\n                        that.folderSortOption,\n                        that.defaultSortOption\n                    ]);\n                    that._viewDataSource = dataSource;\n                    view.refresh(that._viewDataSource);\n                    treeView.treeView.select($());\n                    if (that.options.previewPane) {\n                        that._setPreviewPaneContent();\n                    }\n                    return;\n                }\n                if (entry.loaded && !entry.loaded()) {\n                    entry.load();\n                }\n                if (view) {\n                    that._viewDataSource = entry.children;\n                    view.refresh(that._viewDataSource);\n                    that._viewDataSource.sort([\n                        that.folderSortOption,\n                        that.defaultSortOption\n                    ]);\n                }\n                if (treeView) {\n                    treeView.refresh(entry.id);\n                }\n                if (that.options.previewPane) {\n                    that._setPreviewPaneContent();\n                }\n            },\n            destroy: function () {\n                var that = this;\n                DataBoundWidget.fn.destroy.call(that);\n                that.dataSource.unbind(ERROR, that._errorHandler).unbind(CHANGE, that._changeHandler);\n                if (that._resizeDraggable.navigation) {\n                    that._resizeDraggable.navigation.destroy();\n                    that._resizeDraggable.navigation = null;\n                }\n                if (that._resizeDraggable.preview) {\n                    that._resizeDraggable.preview.destroy();\n                    that._resizeDraggable.preview = null;\n                }\n                if (that.uploadDialog) {\n                    that.uploadDialog.destroy();\n                    that.uploadDialog = null;\n                }\n                if (that.upload) {\n                    that.upload.destroy();\n                    that.upload = null;\n                }\n                if (that.contextMenu) {\n                    that.contextMenu.destroy();\n                    that.contextMenu = null;\n                }\n                kendo.unbindResize(that._resizeHandler);\n                that.dataSource = null;\n                that._viewDataSource = null;\n                kendo.destroy(that.element);\n            }\n        });\n        ui.plugin(FileManager);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}