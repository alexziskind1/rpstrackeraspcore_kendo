{"version":3,"sources":["kendo.scheduler.dayview.js"],"names":["f","define","$","undefined","toInvariantTime","date","staticDate","Date","setTime","getMilliseconds","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","idx","events","_continuousEvents","lastEvent","length","startDate","getDate","start","getTime","splice","uid","attr","kendo","end","push","getWorkDays","options","workDays","dayIndex","workWeekStart","workWeekEnd","Math","abs","window","ui","browser","support","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","proxy","MS_PER_MINUTE","MS_PER_DAY","CURRENT_TIME_MARKER_CLASS","CURRENT_TIME_MARKER_ARROW_CLASS","INVERSE_COLOR_CLASS","BORDER_SIZE_COEFF","NS","DAY_VIEW_EVENT_TEMPLATE","template","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","ALLDAY_EVENT_WRAPPER_STRING","EVENT_WRAPPER_STRING","MultiDayView","init","that","this","fn","call","title","name","_workDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","currentTimeMarkers","currentContentMarkers","timesTableMarkerWidth","position","timezone","timezoneOffset","groupsCount","firstTimesCell","lastTimesCell","markerWidth","groupIndex","currentGroup","utcCurrentTime","ranges","collection","slotElement","timesTableMarker","markerTopPosition","timesTableMarkerCss","contentMarker","elementHtml","currentTimeMarker","useLocalTimezone","dataSource","schema","offset","convert","getTimezoneOffset","times","find","content","orientation","groups","scrollWidth","msie","edge","_isRtl","left","toUtcTime","timeSlotRanges","slotByStartDate","eq","prependTo","round","innerRect","top","right","addClass","css","height","width","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","_updateResizeHint","event","startTime","endTime","hint","rangeIndex","slotIdx","slot","rect","format","container","multiday","isMultiDay","_removeResizeHint","startSlot","_isGroupedByDate","index","_slots","offsetWidth","clientHeight","offsetTop","_createResizeHint","offsetLeft","_resizeHint","add","innerWidth","outerRect","snap","bottom","appendTo","text","first","toString","toLocalDate","last","_updateMoveHint","distance","eventHint","duration","_removeMoveHint","pop","clientWidth","offsetHeight","_createEventElement","clone","inverseColor","_appendMoveHint","_moveHint","_slotByPosition","x","y","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","resources","groupedResources","byDate","_groupOrientation","_columnCountForLevel","_rowCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","time","rowIndex","cellIndex","rowCount","rowMultiplier","cellMultiplier","cells","timeIndex","interval","_timeSlotInterval","verticalViews","tableRows","floor","children","_addTimeSlotGroup","cell","getTimeSlotCollection","currentDate","_dates","UTC","getFullYear","getMonth","setAttribute","addTimeSlot","_addDaySlotGroup","cellCount","addDaySlot","_daySlotGroups","getDaySlotCollection","view","columnIndex","_addResourceView","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","messages","allDay","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","resourceInfo","parent","hasClass","pageX","pageY","_resourceBySlot","eventInfo","endDate","update","threshold","mobileOS","android","_addUserEvents","UserEvents","filter","useClickAsTap","tap","_scrolling","target","location","_allDayUserEvents","_editUserEvents","eventElement","touchElement","touch","initialTouch","_layout","dates","column","columns","rows","isMobile","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createDateLayout","_createColumnsLayout","_createRowsLayout","_footer","html","isWorkDay","action","after","msMin","msMax","msMajorInterval","msInterval","startDay","msStart","majorTickDivider","isMajorTickRow","isMiddleRow","isLastSlotRow","_content","allDayVerticalGroupRow","appendRow","rowIdx","isVerticalGroupped","dateID","rowLevels","columnLevels","result","dateGroupIndex","dateIndex","groupIdx","_addCellsToContent","append","tmplDate","classes","_isWorkDay","i","day","getDay","_render","allDayHeader","_startDate","_endDate","createLayout","refreshLayout","_allDayHeaderHeight","th","currentTarget","additioanlWidth","additionalHeight","datesHeader","_end","nextDate","nextDay","previousDate","previousDay","destroy","clearInterval","off","remove","inRange","selectionByElement","innerHeight","_timeSlotIndex","eventStartTime","timeSlotInterval","_slotIndex","_dateSlotIndex","slotStart","slotEnd","slots","_positionAllDayEvent","slotRange","rowEvents","j","eventLength","slotWidth","startIndex","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","leftOffset","rightOffset","eventHeight","addEvent","slotIndex","createRows","_arrangeColumns","eventRightOffset","columnEvents","eventElements","slotEvents","columnWidth","calculatedWidth","createColumns","style","_positionEvent","_startTime","_endTime","isOneDayEvent","head","tail","middle","eventStartDate","eventEndDate","data","showDelete","resizable","resize","_time","eventEndTime","eventResources","apply","ns","singleDay","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","firstSlot","lastSlot","_updateAllDayHeaderHeight","allDaySlots","_height","refresh","_renderEvents","isMultiDayEvent","rangeCount","occurrence","newStart","newEnd","dateRange","allDayEventContainer","slotRanges","daySlotRanges","_inverseEventColor","render","eventsByResource","eventsPerDate","Query","sort","field","dir","toArray","_eventsByResource","map","grep","itemIdx","eventsFilteredByResource","resource","_resourceValue","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","collectionIndex","backward","_changeViewPeriod","verticalByDate","endMilliseconds","newDateStart","newDateEnd","_timeSlotCollections","_getCollections","daySlotCollectionCount","_isInRange","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.scheduler.dayview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.dayview', ['kendo.scheduler.view'], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.dayview',\n        name: 'Scheduler Day View',\n        category: 'web',\n        description: 'The Scheduler Day View',\n        depends: ['scheduler.view'],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, browser = kendo.support.browser, setTime = kendo.date.setTime, SchedulerView = ui.SchedulerView, outerWidth = kendo._outerWidth, outerHeight = kendo._outerHeight, extend = $.extend, proxy = $.proxy, getDate = kendo.date.getDate, MS_PER_MINUTE = kendo.date.MS_PER_MINUTE, MS_PER_DAY = kendo.date.MS_PER_DAY, CURRENT_TIME_MARKER_CLASS = 'k-current-time', CURRENT_TIME_MARKER_ARROW_CLASS = 'k-current-time-arrow', INVERSE_COLOR_CLASS = 'k-event-inverse', BORDER_SIZE_COEFF = 0.8666, getMilliseconds = kendo.date.getMilliseconds, NS = '.kendoMultiDayView';\n        var DAY_VIEW_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t} - {1:t}\", start, end)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' + '<div class=\"k-event-template\">${title}</div>' + '</div>'), DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t}\", start)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template\">${title}</div>' + '</div>'), DATA_HEADER_TEMPLATE = kendo.template('#var dateString = isMobile ? kendo.toString(date,\\'ddd\\')[0] : kendo.toString(date,\\'ddd M/dd\\'); #' + '<span class=\\'k-link k-nav-day\\'>#=dateString#</span>'), ALLDAY_EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\"' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' + 'class=\"k-event\"' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-60-left\"></span>' + '#}#' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-non-recurrence\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-reload\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' + '#}#' + '# if(data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-60-right\"></span>' + '#}#' + '</span>' + '#if(resizable && !singleDay && !data.tail && !data.middle){#' + '<span class=\"k-resize-handle k-resize-w\"></span>' + '#}#' + '#if(resizable && !singleDay && !data.head && !data.middle){#' + '<span class=\"k-resize-handle k-resize-e\"></span>' + '#}#' + '</div>', EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\" ' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color #; border-color: #=resources[0].color#\"' + 'class=\"k-event\"' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-non-recurrence\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-reload\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' + '#}#' + '</span>' + '<span class=\"k-event-top-actions\">' + '# if(data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-60-up\"></span>' + '# } #' + '</span>' + '<span class=\"k-event-bottom-actions\">' + '# if(data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-60-down\"></span>' + '# } #' + '</span>' + '# if(resizable && !data.tail && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-n\"></span>' + '# } #' + '# if(resizable && !data.head && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-s\"></span>' + '# } #' + '</div>';\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n        function isInDateRange(value, min, max) {\n            return value >= min && value <= max;\n        }\n        function isInTimeRange(value, min, max, overlaps) {\n            overlaps = overlaps ? value <= max : value < max;\n            return value > min && overlaps;\n        }\n        function addContinuousEvent(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n            var lastEvent = events[events.length - 1];\n            var startDate = getDate(range.start.startDate()).getTime();\n            if (isAllDay && lastEvent && getDate(lastEvent.start.startDate()).getTime() == startDate) {\n                var idx = events.length - 1;\n                for (; idx > -1; idx--) {\n                    if (events[idx].isAllDay || getDate(events[idx].start.startDate()).getTime() < startDate) {\n                        break;\n                    }\n                }\n                events.splice(idx + 1, 0, {\n                    element: element,\n                    isAllDay: true,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            } else {\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            }\n        }\n        function getWorkDays(options) {\n            var workDays = [];\n            var dayIndex = options.workWeekStart % 7;\n            var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n            workDays.push(dayIndex);\n            while (workWeekEnd != dayIndex) {\n                if (dayIndex > 6) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n        var MultiDayView = SchedulerView.extend({\n            init: function (element, options) {\n                var that = this;\n                SchedulerView.fn.init.call(that, element, options);\n                that.title = that.options.title || that.options.name;\n                that._workDays = getWorkDays(that.options);\n                that._templates();\n                that._editable();\n                that.calculateDateRange();\n                that._groups();\n                that._currentTime(true);\n            },\n            _currentTimeMarkerUpdater: function () {\n                this._updateCurrentTimeMarker(new Date());\n            },\n            _updateCurrentTimeMarker: function (currentTime) {\n                var options = this.options, currentTimeMarkers, currentContentMarkers, timesTableMarkerWidth, position, elementHtml = '<div class=\\'' + CURRENT_TIME_MARKER_CLASS + '\\'></div>';\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n                    if (options.dataSource && timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                        currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n                currentTimeMarkers = this.times.find('.' + CURRENT_TIME_MARKER_CLASS);\n                currentContentMarkers = this.content.find('.' + CURRENT_TIME_MARKER_CLASS);\n                var groupsCount = !options.group || options.group.orientation == 'horizontal' ? 1 : this.groups.length;\n                var firstTimesCell = this.times.find('tr:first th:first');\n                var lastTimesCell = this.times.find('tr:first th:last');\n                var markerWidth = this.content[0].scrollWidth;\n                if (browser.msie || browser.edge) {\n                    markerWidth -= 1;\n                }\n                if (this._isRtl) {\n                    position = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                } else {\n                    position = lastTimesCell.position().left;\n                }\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n                    if (!currentGroup) {\n                        return;\n                    }\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n                    if (ranges.length === 0) {\n                        return;\n                    }\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n                    if (slotElement) {\n                        var timesTableMarker = currentTimeMarkers[groupIndex] ? currentTimeMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.times);\n                        var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n                        var timesTableMarkerCss = {};\n                        if (this._isRtl) {\n                            timesTableMarkerCss.right = position;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-left');\n                        } else {\n                            timesTableMarkerCss.left = position;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-right');\n                        }\n                        if (!timesTableMarkerWidth) {\n                            timesTableMarkerWidth = outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2;\n                        }\n                        timesTableMarkerCss.top = markerTopPosition - timesTableMarkerWidth;\n                        timesTableMarker.css(timesTableMarkerCss);\n                        var contentMarker = currentContentMarkers[groupIndex] ? currentContentMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.content);\n                        contentMarker.css({\n                            top: markerTopPosition,\n                            height: '1px',\n                            right: 0,\n                            width: markerWidth,\n                            left: 0\n                        });\n                    }\n                }\n            },\n            _currentTime: function (setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined) {\n                    that._currentTimeMarkerUpdater();\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(proxy(this._currentTimeMarkerUpdater, that), markerOptions.updateInterval);\n                    }\n                }\n            },\n            _updateResizeHint: function (event, groupIndex, startTime, endTime) {\n                var multiday = event.isMultiDay();\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n                var width, height, top, hint;\n                this._removeResizeHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = start.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n                            width = slot.offsetWidth;\n                            height = slot.clientHeight;\n                            top = slot.offsetTop;\n                            hint = SchedulerView.fn._createResizeHint.call(this, slot.offsetLeft, top, width, height);\n                            this._resizeHint = this._resizeHint.add(hint);\n                        }\n                    } else {\n                        width = start.offsetWidth;\n                        height = start.clientHeight;\n                        top = start.offsetTop;\n                        if (multiday) {\n                            width = range.innerWidth();\n                        } else {\n                            var rect = range.outerRect(startTime, endTime, this.options.snap);\n                            top = rect.top;\n                            height = rect.bottom - rect.top;\n                        }\n                        hint = SchedulerView.fn._createResizeHint.call(this, start.offsetLeft, top, width, height);\n                        this._resizeHint = this._resizeHint.add(hint);\n                    }\n                }\n                var format = 't';\n                var container = this.content;\n                if (multiday) {\n                    format = 'M/dd';\n                    container = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div');\n                    if (!container.length) {\n                        container = this.content;\n                    }\n                }\n                this._resizeHint.appendTo(container);\n                this._resizeHint.find('.k-label-top,.k-label-bottom').text('');\n                this._resizeHint.first().addClass('k-first').find('.k-label-top').text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n                this._resizeHint.last().addClass('k-last').find('.k-label-bottom').text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n            _updateMoveHint: function (event, groupIndex, distance) {\n                var multiday = event.isMultiDay();\n                var group = this.groups[groupIndex];\n                var start = kendo.date.toUtcTime(event.start) + distance;\n                var end = start + event.duration();\n                var ranges = group.ranges(start, end, multiday, event.isAllDay);\n                start = kendo.timezone.toLocalDate(start);\n                end = kendo.timezone.toLocalDate(end);\n                this._removeMoveHint(event.uid);\n                if (!multiday && (getMilliseconds(end) === 0 || getMilliseconds(end) < getMilliseconds(this.startTime()))) {\n                    if (ranges.length > 1) {\n                        ranges.pop();\n                    }\n                }\n                var eventHint = $();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var startSlot = range.start;\n                    var hint;\n                    var css = {\n                        left: startSlot.offsetLeft + 2,\n                        top: startSlot.offsetTop\n                    };\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = startSlot.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n                            css.left = this._isRtl ? slot.clientWidth * 0.1 + slot.offsetLeft + 2 : slot.offsetLeft + 2;\n                            css.height = slot.offsetHeight;\n                            css.width = slot.clientWidth * 0.9 - 2;\n                            hint = this._createEventElement(event.clone({\n                                start: start,\n                                end: end\n                            }), !multiday);\n                            if (event.inverseColor) {\n                                hint.addClass(INVERSE_COLOR_CLASS);\n                            }\n                            this._appendMoveHint(hint, css);\n                            eventHint = eventHint.add(hint);\n                        }\n                    } else {\n                        if (this._isRtl) {\n                            css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                        }\n                        if (multiday) {\n                            css.width = range.innerWidth() - 2;\n                        } else {\n                            var rect = range.outerRect(start, end, this.options.snap);\n                            css.top = rect.top;\n                            css.height = rect.bottom - rect.top;\n                            css.width = startSlot.clientWidth * 0.9 - 2;\n                        }\n                        hint = this._createEventElement(event.clone({\n                            start: start,\n                            end: end\n                        }), !multiday);\n                        if (event.inverseColor) {\n                            hint.addClass(INVERSE_COLOR_CLASS);\n                        }\n                        this._appendMoveHint(hint, css);\n                        eventHint = eventHint.add(hint);\n                    }\n                }\n                var content = this.content;\n                if (multiday) {\n                    content = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div');\n                    if (!content.length) {\n                        content = this.content;\n                    }\n                }\n                eventHint.appendTo(content);\n            },\n            _appendMoveHint: function (hint, css) {\n                hint.addClass('k-event-drag-hint');\n                hint.css(css);\n                this._moveHint = this._moveHint.add(hint);\n            },\n            _slotByPosition: function (x, y) {\n                var slot, offset;\n                if (this._isVerticallyGrouped()) {\n                    offset = this.content.offset();\n                    y += this.content[0].scrollTop;\n                    x += this.content[0].scrollLeft;\n                } else {\n                    offset = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day)').find('>div').offset();\n                }\n                if (offset) {\n                    x -= offset.left;\n                    y -= offset.top;\n                }\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                var group;\n                var groupIndex;\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.daySlotByPosition(x, y, this._isGroupedByDate());\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                if (offset) {\n                    x += offset.left;\n                    y += offset.top;\n                }\n                offset = this.content.offset();\n                x -= offset.left;\n                y -= offset.top;\n                if (!this._isVerticallyGrouped()) {\n                    y += this.content[0].scrollTop;\n                    x += this.content[0].scrollLeft;\n                }\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.timeSlotByPosition(x, y);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                return null;\n            },\n            _groupCount: function () {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length - 1);\n                        } else {\n                            return this._rowCountForLevel(resources.length - 1);\n                        }\n                    } else {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length) / this._columnCountForLevel(0);\n                        } else {\n                            return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                        }\n                    }\n                }\n                return 1;\n            },\n            _columnCountInResourceView: function () {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n                if (!resources.length || this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        return this._rowCountForLevel(0);\n                    } else {\n                        return this._columnCountForLevel(0);\n                    }\n                }\n                if (byDate) {\n                    return this._columnCountForLevel(0);\n                } else {\n                    return this._columnOffsetForResource(resources.length);\n                }\n            },\n            _timeSlotGroups: function (groupCount, columnCount) {\n                var interval = this._timeSlotInterval();\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n                var tableRows = this.content.find('tr:not(.k-scheduler-header-all-day)');\n                var group, time, rowIndex, cellIndex;\n                tableRows.attr('role', 'row');\n                var rowCount = tableRows.length;\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    rowCount = Math.floor(rowCount / verticalViews);\n                }\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var cellMultiplier = 0;\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    } else {\n                        cellMultiplier = groupIndex;\n                    }\n                    rowIndex = rowMultiplier * rowCount;\n                    while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                        var cells = tableRows[rowIndex].children;\n                        if (rowIndex % rowCount === 0) {\n                            time = getMilliseconds(new Date(+this.startTime()));\n                        }\n                        var timeIndex = 0;\n                        if (byDate) {\n                            if (this._isVerticallyGrouped()) {\n                                for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                    group = this.groups[cellIndex];\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, groupIndex);\n                                }\n                            } else {\n                                group = this.groups[groupIndex];\n                                for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                    timeIndex++;\n                                }\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                timeIndex++;\n                            }\n                        }\n                        time += interval;\n                        rowIndex++;\n                    }\n                }\n            },\n            _addTimeSlotGroup: function (group, cells, cellIndex, time, interval, timeIndex) {\n                var cell = cells[cellIndex];\n                var collection = group.getTimeSlotCollection(timeIndex);\n                var currentDate = this._dates[timeIndex];\n                if (!currentDate || !cell) {\n                    return;\n                }\n                var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                var start = currentTime + time;\n                var end = start + interval;\n                cell.setAttribute('role', 'gridcell');\n                cell.setAttribute('aria-selected', false);\n                collection.addTimeSlot(cell, start, end);\n            },\n            _addDaySlotGroup: function (collection, cells, cellIndex, columnCount, cellCount) {\n                var cell = cells[cellIndex];\n                var start = this._dates[cellCount];\n                if (!start) {\n                    return;\n                }\n                var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n                cell.setAttribute('role', 'gridcell');\n                cell.setAttribute('aria-selected', false);\n                collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n            },\n            _daySlotGroups: function (groupCount, columnCount) {\n                var tableRows, cellIndex;\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    tableRows = this.element.find('.k-scheduler-header-all-day');\n                } else {\n                    tableRows = this.element.find('.k-scheduler-header-all-day tr');\n                }\n                tableRows.attr('role', 'row');\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group, collection;\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n                    var cells = tableRows[rowMultiplier].children;\n                    var cellMultiplier = 0;\n                    if (!this._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n                    var cellCount = 0;\n                    if (byDate) {\n                        if (this._isVerticallyGrouped()) {\n                            for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                group = this.groups[cellIndex];\n                                collection = group.getDaySlotCollection(0);\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, groupIndex);\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            collection = group.getDaySlotCollection(0);\n                            for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                                cellCount++;\n                            }\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        collection = group.getDaySlotCollection(0);\n                        for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                            cellCount++;\n                        }\n                    }\n                }\n            },\n            _groups: function () {\n                var groupCount = this._groupCount();\n                var columnCount = this._columnCountInResourceView();\n                this.groups = [];\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n                    for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                        if (this._dates[columnIndex]) {\n                            view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                        }\n                    }\n                    if (this.options.allDaySlot) {\n                        view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                    }\n                }\n                this._timeSlotGroups(groupCount, columnCount);\n                if (this.options.allDaySlot) {\n                    this._daySlotGroups(groupCount, columnCount);\n                }\n            },\n            options: {\n                name: 'MultiDayView',\n                selectedDateFormat: '{0:D}',\n                selectedShortDateFormat: '{0:d}',\n                selectedMobileDateFormat: '{0:MMM} {0:dd} - {1:dd}',\n                allDaySlot: true,\n                showWorkHours: false,\n                title: '',\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                minorTickCount: 2,\n                majorTick: 60,\n                majorTimeHeaderTemplate: '<span>#=kendo.toString(date, \\'t\\')#</span>',\n                minorTimeHeaderTemplate: '&\\\\#8203;',\n                groupHeaderTemplate: '#=text#',\n                slotTemplate: '&nbsp;',\n                allDaySlotTemplate: '&nbsp;',\n                eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n                allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                footer: { command: 'workDay' },\n                messages: {\n                    allDay: 'all day',\n                    showFullDay: 'Show full day',\n                    showWorkDay: 'Show business hours'\n                },\n                currentTimeMarker: {\n                    updateInterval: 10000,\n                    useLocalTimezone: true\n                }\n            },\n            events: [\n                'remove',\n                'add',\n                'edit'\n            ],\n            _templates: function () {\n                var options = this.options, settings = extend({}, kendo.Template, options.templateSettings);\n                this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n                this.allDayEventTemplate = this._eventTmpl(options.allDayEventTemplate, ALLDAY_EVENT_WRAPPER_STRING);\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n            _editable: function () {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n            _mouseEditable: function () {\n                var that = this;\n                that.element.on('click' + NS, '.k-event a:has(.k-i-close)', function (e) {\n                    that.trigger('remove', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                    e.preventDefault();\n                });\n                if (that.options.editable.create !== false) {\n                    that.element.on('dblclick' + NS, '.k-scheduler-content > table td', function (e) {\n                        if (!$(this).parent().hasClass('k-scheduler-header-all-day')) {\n                            var slot = that._slotByPosition(e.pageX, e.pageY);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({\n                                        start: slot.startDate(),\n                                        end: slot.endDate()\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    }).on('dblclick' + NS, '.k-scheduler-header-all-day td', function (e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger('add', {\n                                eventInfo: extend({}, {\n                                    isAllDay: true,\n                                    start: kendo.date.getDate(slot.startDate()),\n                                    end: kendo.date.getDate(slot.startDate())\n                                }, resourceInfo)\n                            });\n                        }\n                        e.preventDefault();\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that.element.on('dblclick' + NS, '.k-event', function (e) {\n                        that.trigger('edit', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                        e.preventDefault();\n                    });\n                }\n            },\n            _touchEditable: function () {\n                var that = this;\n                var threshold = 0;\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-content td',\n                        useClickAsTap: !kendo.support.browser.edge,\n                        tap: function (e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            if (!$(e.target).parent().hasClass('k-scheduler-header-all-day')) {\n                                var x = e.x.location !== undefined ? e.x.location : e.x;\n                                var y = e.y.location !== undefined ? e.y.location : e.y;\n                                var slot = that._slotByPosition(x, y);\n                                if (slot) {\n                                    var resourceInfo = that._resourceBySlot(slot);\n                                    that.trigger('add', {\n                                        eventInfo: extend({\n                                            start: slot.startDate(),\n                                            end: slot.endDate()\n                                        }, resourceInfo)\n                                    });\n                                }\n                                e.preventDefault();\n                            }\n                        }\n                    });\n                    that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: '.k-scheduler-header-all-day td',\n                        tap: function (e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var x = e.x.location !== undefined ? e.x.location : e.x;\n                            var y = e.y.location !== undefined ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({}, {\n                                        isAllDay: true,\n                                        start: kendo.date.getDate(slot.startDate()),\n                                        end: kendo.date.getDate(slot.startDate())\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: '.k-event',\n                        tap: function (e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var eventElement = $(e.target).closest('.k-event');\n                            var touchElement = $(e.touch.initialTouch);\n                            if (touchElement.hasClass('k-i-close')) {\n                                that.trigger('remove', { uid: eventElement.attr(kendo.attr('uid')) });\n                            } else if (!eventElement.hasClass('k-event-active')) {\n                                that.trigger('edit', { uid: eventElement.attr(kendo.attr('uid')) });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n            _layout: function (dates) {\n                var columns = [];\n                var rows = [];\n                var options = this.options;\n                var that = this;\n                var byDate = that._isGroupedByDate();\n                for (var idx = 0; idx < dates.length; idx++) {\n                    var column = {};\n                    column.text = that.dateHeaderTemplate({\n                        date: dates[idx],\n                        isMobile: that._isMobile()\n                    });\n                    if (kendo.date.isToday(dates[idx])) {\n                        column.className = 'k-today';\n                    }\n                    columns.push(column);\n                }\n                var resources = this.groupedResources;\n                if (options.allDaySlot) {\n                    rows.push({\n                        text: options.messages.allDay,\n                        allDay: true,\n                        cellContent: function (idx) {\n                            var groupIndex = idx;\n                            idx = resources.length && that._groupOrientation() !== 'vertical' ? idx % dates.length : idx;\n                            return that.allDaySlotTemplate({\n                                date: dates[idx],\n                                resources: function () {\n                                    return that._resourceBySlot({ groupIndex: groupIndex });\n                                }\n                            });\n                        }\n                    });\n                }\n                this._forTimeRange(this.startTime(), this.endTime(), function (date, majorTick, middleRow, lastSlotRow) {\n                    var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n                    var row = {\n                        text: template({ date: date }),\n                        className: lastSlotRow ? 'k-slot-cell' : ''\n                    };\n                    rows.push(row);\n                });\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        if (byDate) {\n                            rows = this._createDateLayout(columns, rows);\n                            columns = this._createColumnsLayout(resources, null, this.groupHeaderTemplate);\n                        } else {\n                            rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                        }\n                    } else {\n                        if (byDate) {\n                            columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                        } else {\n                            columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                        }\n                    }\n                }\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n            _footer: function () {\n                var options = this.options;\n                if (options.footer !== false) {\n                    var html = '<div class=\"k-header k-scheduler-footer\">';\n                    var command = options.footer.command;\n                    if (this._isMobile()) {\n                        html += '<span class=\"k-state-default k-scheduler-today\"><a href=\"#\" class=\"k-link\">';\n                        html += options.messages.today + '</a></span>';\n                    }\n                    if (command && command === 'workDay') {\n                        if (this._isMobile()) {\n                            html += '<span class=\"k-state-default k-scheduler-fullday\"><a href=\"#\" class=\"k-link\">';\n                            html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></span>';\n                        } else {\n                            html += '<ul class=\"k-reset k-header\">';\n                            html += '<li class=\"k-state-default k-scheduler-fullday\"><a href=\"#\" class=\"k-link\"><span class=\"k-icon k-i-clock\"></span>';\n                            html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></li>';\n                            html += '</ul>';\n                        }\n                    } else {\n                        html += '&nbsp;';\n                    }\n                    html += '</div>';\n                    this.footer = $(html).appendTo(this.element);\n                    var that = this;\n                    this.footer.on('click' + NS, '.k-scheduler-fullday', function (e) {\n                        e.preventDefault();\n                        that.trigger('navigate', {\n                            view: that.name || options.name,\n                            date: options.date,\n                            isWorkDay: !options.showWorkHours\n                        });\n                    });\n                    this.footer.on('click' + NS, '.k-scheduler-today', function (e) {\n                        e.preventDefault();\n                        var timezone = that.options.timezone;\n                        var action = 'today';\n                        var currentDate = new Date();\n                        var date;\n                        if (timezone) {\n                            var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                            date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                        } else {\n                            date = currentDate;\n                        }\n                        that.trigger('navigate', {\n                            view: that.name || options.name,\n                            action: action,\n                            date: date\n                        });\n                    });\n                }\n            },\n            _forTimeRange: function (min, max, action, after) {\n                min = toInvariantTime(min);\n                max = toInvariantTime(max);\n                var that = this, msMin = getMilliseconds(min), msMax = getMilliseconds(max), minorTickCount = that.options.minorTickCount, msMajorInterval = that.options.majorTick * MS_PER_MINUTE, msInterval = msMajorInterval / minorTickCount || 1, start = new Date(+min), startDay = start.getDate(), msStart, idx = 0, length, html = '';\n                length = MS_PER_DAY / msInterval;\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n                    length = (msMax - msMin) / msInterval;\n                }\n                length = Math.round(length);\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval), isMajorTickRow = majorTickDivider === 0, isMiddleRow = majorTickDivider < minorTickCount - 1, isLastSlotRow = majorTickDivider === minorTickCount - 1;\n                    html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n                    setTime(start, msInterval, false);\n                }\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n                if (after) {\n                    html += after(start);\n                }\n                return html;\n            },\n            _content: function (dates) {\n                var that = this;\n                var options = that.options;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var columnCount = dates.length;\n                var html = '';\n                var resources = this.groupedResources;\n                var allDaySlotTemplate = this.allDaySlotTemplate;\n                var isVerticalGroupped = false;\n                var allDayVerticalGroupRow;\n                var byDate = that._isGroupedByDate();\n                var dateID = 0;\n                if (resources.length) {\n                    isVerticalGroupped = that._groupOrientation() === 'vertical';\n                    if (isVerticalGroupped) {\n                        rowCount = this._rowCountForLevel(this.rowLevels.length - 2);\n                        if (byDate) {\n                            groupsCount = this._columnCountForLevel(this.columnLevels.length - 1);\n                        }\n                        if (options.allDaySlot) {\n                            allDayVerticalGroupRow = function (groupIndex) {\n                                var result = '<tr class=\"k-scheduler-header-all-day\">';\n                                var dateGroupIndex = byDate ? 0 : groupIndex;\n                                var resources = function () {\n                                    return that._resourceBySlot({ groupIndex: dateGroupIndex });\n                                };\n                                if (byDate) {\n                                    for (; dateGroupIndex < groupsCount; dateGroupIndex++) {\n                                        result += '<td>' + allDaySlotTemplate({\n                                            date: dates[dateID],\n                                            resources: resources\n                                        }) + '</td>';\n                                    }\n                                } else {\n                                    for (var idx = 0; idx < dates.length; idx++) {\n                                        result += '<td>' + allDaySlotTemplate({\n                                            date: dates[idx],\n                                            resources: resources\n                                        }) + '</td>';\n                                    }\n                                }\n                                return result + '</tr>';\n                            };\n                        }\n                    } else {\n                        if (byDate) {\n                            groupsCount = this._columnCountForLevel(this.columnLevels.length - 1) / this._columnCountForLevel(0);\n                        } else {\n                            groupsCount = this._columnCountForLevel(this.columnLevels.length - 2);\n                        }\n                    }\n                }\n                html += '<tbody>';\n                var appendRow = function (date, majorTick, middleRow) {\n                    var content = '';\n                    var groupIdx = 0;\n                    var idx, length;\n                    content = '<tr' + (middleRow ? ' class=\"k-middle-row\"' : '') + '>';\n                    if (byDate) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            for (groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                                var dateIndex = idx;\n                                if (isVerticalGroupped) {\n                                    dateIndex = dateID;\n                                }\n                                content = that._addCellsToContent(content, dates, date, dateIndex, groupIdx, rowIdx);\n                            }\n                            if (isVerticalGroupped) {\n                                break;\n                            }\n                        }\n                    } else {\n                        for (; groupIdx < groupsCount; groupIdx++) {\n                            for (idx = 0, length = columnCount; idx < length; idx++) {\n                                content = that._addCellsToContent(content, dates, date, idx, groupIdx, rowIdx);\n                            }\n                        }\n                    }\n                    content += '</tr>';\n                    return content;\n                };\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += allDayVerticalGroupRow ? allDayVerticalGroupRow(rowIdx) : '';\n                    html += this._forTimeRange(start, end, appendRow);\n                    if (isVerticalGroupped) {\n                        dateID++;\n                    }\n                }\n                html += '</tbody>';\n                this.content.find('table').append(html);\n            },\n            _addCellsToContent: function (content, dates, date, idx, groupIdx, rowIdx) {\n                var that = this;\n                var classes = '';\n                var tmplDate;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGroupped = this._groupOrientation() === 'vertical';\n                var resources = function (groupIndex) {\n                    return function () {\n                        return that._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += 'k-today';\n                }\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(this.options.workDayStart) || kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(this.options.workDayEnd) || !this._isWorkDay(dates[idx])) {\n                    classes += ' k-nonwork-hour';\n                }\n                content += '<td' + (classes !== '' ? ' class=\"' + classes + '\"' : '') + '>';\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n                content += slotTemplate({\n                    date: tmplDate,\n                    resources: resources(isVerticalGroupped && !that._isGroupedByDate() ? rowIdx : groupIdx)\n                });\n                content += '</td>';\n                return content;\n            },\n            _isWorkDay: function (date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _render: function (dates) {\n                var that = this;\n                dates = dates || [];\n                this._dates = dates;\n                this._startDate = dates[0];\n                this._endDate = dates[dates.length - 1 || 0];\n                this.createLayout(this._layout(dates));\n                this._content(dates);\n                this._footer();\n                this.refreshLayout();\n                var allDayHeader = this.element.find('.k-scheduler-header-all-day td');\n                if (allDayHeader.length) {\n                    this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n                }\n                that.element.on('click' + NS, '.k-nav-day', function (e) {\n                    var th = $(e.currentTarget).closest('th');\n                    var offset = th.offset();\n                    var additioanlWidth = 0;\n                    var additionalHeight = outerHeight(th);\n                    if (that._isGroupedByDate()) {\n                        if (that._isVerticallyGrouped()) {\n                            additioanlWidth = outerWidth(that.times);\n                            additionalHeight = 0;\n                        } else {\n                            additionalHeight = outerHeight(that.datesHeader);\n                        }\n                    }\n                    var slot = that._slotByPosition(offset.left + additioanlWidth, offset.top + additionalHeight);\n                    that.trigger('navigate', {\n                        view: 'day',\n                        date: slot.startDate()\n                    });\n                });\n            },\n            startTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n            endTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n            startDate: function () {\n                return this._startDate;\n            },\n            endDate: function () {\n                return this._endDate;\n            },\n            _end: function (isAllDay) {\n                var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n                if (isAllDay) {\n                    time = 0;\n                }\n                return new Date(this._endDate.getTime() + time);\n            },\n            nextDate: function () {\n                return kendo.date.nextDay(this.endDate());\n            },\n            previousDate: function () {\n                return kendo.date.previousDay(this.startDate());\n            },\n            calculateDateRange: function () {\n                this._render([this.options.date]);\n            },\n            destroy: function () {\n                var that = this;\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n                if (that.datesHeader) {\n                    that.datesHeader.off(NS);\n                }\n                if (that.element) {\n                    that.element.off(NS);\n                }\n                if (that.footer) {\n                    that.footer.remove();\n                }\n                SchedulerView.fn.destroy.call(this);\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                        that._allDayUserEvents.destroy();\n                    }\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            },\n            inRange: function (options) {\n                var inRange = SchedulerView.fn.inRange.call(this, options);\n                if (options.isAllDay) {\n                    return inRange;\n                }\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n                var start = getMilliseconds(options.start);\n                var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n                return inRange && startTime <= start && end <= endTime;\n            },\n            selectionByElement: function (cell) {\n                var offset = cell.offset();\n                var height = Math.round(cell.innerHeight()) - 5;\n                return this._slotByPosition(offset.left, offset.top + height);\n            },\n            _timeSlotInterval: function () {\n                var options = this.options;\n                return options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n            },\n            _timeSlotIndex: function (date) {\n                var options = this.options;\n                var eventStartTime = getMilliseconds(date);\n                var startTime = getMilliseconds(this.startTime());\n                var timeSlotInterval = options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n                return (eventStartTime - startTime) / timeSlotInterval;\n            },\n            _slotIndex: function (date, multiday) {\n                if (multiday) {\n                    return this._dateSlotIndex(date);\n                }\n                return this._timeSlotIndex(date);\n            },\n            _dateSlotIndex: function (date, overlaps) {\n                var idx;\n                var length;\n                var slots = this._dates || [];\n                var slotStart;\n                var slotEnd;\n                var offset = 1;\n                for (idx = 0, length = slots.length; idx < length; idx++) {\n                    slotStart = kendo.date.getDate(slots[idx]);\n                    slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n                    if (isInDateRange(date, slotStart, slotEnd)) {\n                        return idx * offset;\n                    }\n                }\n                return -1;\n            },\n            _positionAllDayEvent: function (element, slotRange) {\n                var slotWidth = slotRange.innerWidth();\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n                var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n                var currentColumnCount = this._headerColumnCount || 0;\n                var leftOffset = 2;\n                var rightOffset = startIndex !== endIndex ? 3 : 2;\n                var eventHeight = this._allDayHeaderHeight;\n                var start = slotRange.startSlot();\n                element.css({\n                    left: start.offsetLeft + leftOffset,\n                    width: slotWidth - rightOffset\n                });\n                slotRange.addEvent({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    element: element\n                });\n                allDayEvents.push({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    element: element\n                });\n                var rows = SchedulerView.createRows(allDayEvents);\n                if (rows.length && rows.length > currentColumnCount) {\n                    this._headerColumnCount = rows.length;\n                }\n                var top = slotRange.start.offsetTop;\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        $(rowEvents[j].element).css({ top: top + idx * eventHeight });\n                    }\n                }\n            },\n            _arrangeColumns: function (element, top, height, slotRange) {\n                var startSlot = slotRange.start;\n                element = {\n                    element: element,\n                    slotIndex: startSlot.index,\n                    start: top,\n                    end: top + height\n                };\n                var columns, slotWidth = startSlot.clientWidth, eventRightOffset = slotWidth * 0.1, columnEvents, eventElements = slotRange.events(), slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end);\n                slotRange.addEvent(element);\n                slotEvents.push(element);\n                columns = SchedulerView.createColumns(slotEvents);\n                var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n                for (var idx = 0, length = columns.length; idx < length; idx++) {\n                    columnEvents = columns[idx].events;\n                    for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                        var calculatedWidth = columnWidth - 2;\n                        columnEvents[j].element[0].style.width = (calculatedWidth > 0 ? calculatedWidth : columnWidth) + 'px';\n                        columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + 'px';\n                    }\n                }\n            },\n            _positionEvent: function (event, element, slotRange) {\n                var start = event._startTime || event.start;\n                var end = event._endTime || event.end;\n                var rect = slotRange.innerRect(start, end, false);\n                var height = rect.bottom - rect.top;\n                if (height < 0) {\n                    height = 0;\n                }\n                element.css({\n                    top: rect.top,\n                    height: height\n                });\n                this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n            },\n            _createEventElement: function (event, isOneDayEvent, head, tail) {\n                var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n                var options = this.options;\n                var editable = options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var startDate = getDate(this.startDate());\n                var endDate = getDate(this.endDate());\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var middle;\n                if (startTime >= endTime) {\n                    endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n                }\n                if (!isOneDayEvent && !event.isAllDay) {\n                    endDate = new Date(endDate.getTime() + MS_PER_DAY);\n                }\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n                if (event.isAllDay) {\n                    eventEndDate = getDate(event.end);\n                }\n                if (!isInDateRange(getDate(eventStartDate), startDate, endDate) && !isInDateRange(eventEndDate, startDate, endDate) || isOneDayEvent && eventStartTime < startTime && eventEndTime > endTime) {\n                    middle = true;\n                } else if (getDate(eventStartDate) < startDate || isOneDayEvent && eventStartTime < startTime) {\n                    tail = true;\n                } else if (eventEndDate > endDate && !isOneDayEvent || isOneDayEvent && eventEndTime > endTime) {\n                    head = true;\n                }\n                var resources = this.eventResources(event);\n                if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, 'Etc/UTC');\n                }\n                if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, 'Etc/UTC');\n                }\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    middle: middle,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: false,\n                    messages: options.messages\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n                var element = $(template(data));\n                this.angular('compile', function () {\n                    return {\n                        elements: element,\n                        data: [{ dataItem: data }]\n                    };\n                });\n                return element;\n            },\n            _isInTimeSlot: function (event) {\n                var slotStartTime = this.startTime(), slotEndTime = this.endTime(), startTime = event._startTime || event.start, endTime = event._endTime || event.end;\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n                if (event._date('end') > event._date('start')) {\n                    endTime = +event._date('end') + (MS_PER_DAY - 1);\n                }\n                endTime = event._endTime ? endTime - event._date('end') : getMilliseconds(new Date(endTime));\n                startTime = event._startTime ? startTime - event._date('start') : getMilliseconds(new Date(startTime));\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n                if (slotStartTime === startTime && startTime === endTime) {\n                    return true;\n                }\n                var overlaps = startTime !== slotEndTime;\n                return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) || isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) || isInTimeRange(slotStartTime, startTime, endTime) || isInTimeRange(slotEndTime, startTime, endTime);\n            },\n            _isInDateSlot: function (event) {\n                var groups = this.groups[0];\n                var slotStart = groups.firstSlot().start;\n                var slotEnd = groups.lastSlot().end - 1;\n                var startTime = kendo.date.toUtcTime(event.start);\n                var endTime = kendo.date.toUtcTime(event.end);\n                return (isInDateRange(startTime, slotStart, slotEnd) || isInDateRange(endTime, slotStart, slotEnd) || isInDateRange(slotStart, startTime, endTime) || isInDateRange(slotEnd, startTime, endTime)) && (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay);\n            },\n            _updateAllDayHeaderHeight: function (height) {\n                if (this._height !== height) {\n                    this._height = height;\n                    var allDaySlots = this.element.find('.k-scheduler-header-all-day td');\n                    if (allDaySlots.length) {\n                        allDaySlots.parent().add(this.element.find('.k-scheduler-times-all-day').parent()).height(height);\n                        for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                            this.groups[groupIndex].refresh();\n                        }\n                    }\n                }\n            },\n            _renderEvents: function (events, groupIndex) {\n                var allDayEventContainer = this.datesHeader.find('.k-scheduler-header-wrap > div');\n                var byDate = this._isGroupedByDate();\n                var event;\n                var idx;\n                var length;\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                        var container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n                        var element, ranges, range, start, end, group;\n                        if (!isMultiDayEvent) {\n                            if (this._isInTimeSlot(event)) {\n                                group = this.groups[groupIndex];\n                                if (!group._continuousEvents) {\n                                    group._continuousEvents = [];\n                                }\n                                ranges = group.slotRanges(event);\n                                var rangeCount = ranges.length;\n                                for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                    range = ranges[rangeIndex];\n                                    start = event.start;\n                                    end = event.end;\n                                    if (rangeCount > 1) {\n                                        if (rangeIndex === 0) {\n                                            end = range.end.endDate();\n                                        } else if (rangeIndex == rangeCount - 1) {\n                                            start = range.start.startDate();\n                                        } else {\n                                            start = range.start.startDate();\n                                            end = range.end.endDate();\n                                        }\n                                    }\n                                    var occurrence = event.clone({\n                                        start: start,\n                                        end: end,\n                                        _startTime: event._startTime,\n                                        _endTime: event.endTime\n                                    });\n                                    if (this._isInTimeSlot(occurrence)) {\n                                        var head = range.head;\n                                        element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n                                        element.appendTo(container);\n                                        this._inverseEventColor(element);\n                                        this._positionEvent(occurrence, element, range);\n                                        addContinuousEvent(group, range, element, false);\n                                    }\n                                }\n                            }\n                        } else if (this.options.allDaySlot) {\n                            group = this.groups[groupIndex];\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n                            ranges = group.slotRanges(event);\n                            if (ranges.length) {\n                                range = ranges[0];\n                                var startIndex = range.start.index;\n                                var endIndex = range.end.index;\n                                if (byDate && startIndex !== endIndex) {\n                                    start = range.start.start;\n                                    end = range.end.end;\n                                    var newStart = start;\n                                    var newEnd = start;\n                                    for (var i = range.start.index; i <= range.end.index; i++) {\n                                        element = this._createEventElement(event, !isMultiDayEvent, i !== endIndex, i !== startIndex);\n                                        var dateRange = group.daySlotRanges(newStart, newEnd, true)[0];\n                                        newStart = newEnd += kendo.date.MS_PER_DAY;\n                                        this._positionAllDayEvent(element, dateRange);\n                                        addContinuousEvent(group, dateRange, element, true);\n                                        element.appendTo(container);\n                                        this._inverseEventColor(element);\n                                    }\n                                } else {\n                                    element = this._createEventElement(event, !isMultiDayEvent);\n                                    this._positionAllDayEvent(element, ranges[0]);\n                                    addContinuousEvent(group, ranges[0], element, true);\n                                    element.appendTo(container);\n                                    this._inverseEventColor(element);\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            render: function (events) {\n                this._headerColumnCount = 0;\n                this._groups();\n                this.element.find('.k-event').remove();\n                events = new kendo.data.Query(events).sort([\n                    {\n                        field: 'start',\n                        dir: 'asc'\n                    },\n                    {\n                        field: 'end',\n                        dir: 'desc'\n                    }\n                ]).toArray();\n                var eventsByResource = [];\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n                var eventsPerDate = $.map(this._dates, function (date) {\n                    return Math.max.apply(null, $.map(eventsByResource, function (events) {\n                        return $.grep(events, function (event) {\n                            return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                        }).length;\n                    }));\n                });\n                var height = Math.max.apply(null, eventsPerDate);\n                this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex);\n                }\n                this.refreshLayout();\n                this._currentTime(false);\n                this.trigger('activate');\n            },\n            _eventsByResource: function (events, resources, result) {\n                var resource = resources[0];\n                if (resource) {\n                    var view = resource.dataSource.view();\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({\n                            field: resource.field,\n                            operator: SchedulerView.groupEqFilter(value)\n                        }).toArray();\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n            _columnOffsetForResource: function (index) {\n                return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n            },\n            _columnCountForLevel: function (level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n            _rowCountForLevel: function (level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n            clearSelection: function () {\n                this.content.add(this.datesHeader).find('.k-state-selected').removeAttr('id').attr('aria-selected', false).removeClass('k-state-selected');\n            },\n            _updateDirection: function (selection, ranges, multiple, reverse, vertical) {\n                var isDaySlot = selection.isAllDay;\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                if (multiple) {\n                    if (vertical) {\n                        if (!isDaySlot && startSlot.index === endSlot.index && startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                        }\n                    } else {\n                        if (isDaySlot && startSlot.index === endSlot.index || !isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                        }\n                    }\n                }\n            },\n            _changeViewPeriod: function (selection, reverse, vertical) {\n                if (!vertical) {\n                    var date = reverse ? this.previousDate() : this.nextDate();\n                    var start = selection.start;\n                    var end = selection.end;\n                    var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n                    var group = this.groups[selection.groupIndex];\n                    var collection = reverse ? group._timeSlotCollections : group._getCollections(group.daySlotCollectionCount());\n                    var slots = collection[collection.length - 1]._slots;\n                    var slotIndex = !reverse && !group.daySlotCollectionCount() ? 0 : slots.length - 1;\n                    var endMilliseconds;\n                    var newDateStart, newDateEnd;\n                    newDateStart = new Date(date);\n                    newDateEnd = new Date(date);\n                    if (this._isInRange(newDateStart, newDateEnd)) {\n                        return false;\n                    }\n                    selection.start = newDateStart;\n                    selection.end = newDateEnd;\n                    if (verticalByDate) {\n                        var newStart = new Date(slots[slotIndex].startDate());\n                        var newEnd = new Date(slots[slotIndex].endDate());\n                        endMilliseconds = getMilliseconds(newEnd) ? getMilliseconds(newEnd) : MS_PER_DAY;\n                        setTime(selection.start, getMilliseconds(newStart));\n                        setTime(selection.end, endMilliseconds);\n                        if (group.daySlotCollectionCount()) {\n                            selection.isAllDay = !selection.isAllDay;\n                        }\n                    } else {\n                        endMilliseconds = selection.isAllDay || !getMilliseconds(end) ? MS_PER_DAY : getMilliseconds(end);\n                        setTime(selection.start, getMilliseconds(start));\n                        setTime(selection.end, endMilliseconds);\n                    }\n                    if (!this._isVerticallyGrouped()) {\n                        selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                    }\n                    selection.events = [];\n                    return true;\n                }\n            }\n        });\n        extend(true, ui, {\n            MultiDayView: MultiDayView,\n            DayView: MultiDayView.extend({\n                options: {\n                    name: 'DayView',\n                    title: 'Day',\n                    selectedMobileDateFormat: '{0:MMM d}'\n                },\n                name: 'day'\n            }),\n            WeekView: MultiDayView.extend({\n                options: {\n                    name: 'WeekView',\n                    title: 'Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}'\n                },\n                name: 'week',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), idx, length, dates = [];\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            WorkWeekView: MultiDayView.extend({\n                options: {\n                    name: 'WorkWeekView',\n                    title: 'Work Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}'\n                },\n                name: 'workWeek',\n                nextDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                    return kendo.date.addDays(weekStart, this._workDays[0]);\n                },\n                previousDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    var workDays = this._workDays;\n                    return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n                },\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, dayOfWeek = kendo.date.dayOfWeek, weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), start = dayOfWeek(weekStart, this.options.workWeekStart, 1), end = dayOfWeek(start, this.options.workWeekEnd, 1), dates = [];\n                    while (start <= end) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            })\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}