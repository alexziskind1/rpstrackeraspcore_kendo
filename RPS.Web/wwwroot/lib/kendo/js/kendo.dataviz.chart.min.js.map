{"version":3,"sources":["kendo.dataviz.chart.js"],"names":["f","define","$","normalizeText","text","String","replace","REPLACE_REGEX","SPACE","objectKey","object","key","parts","push","sort","join","hashKey","str","i","hash","length","charCodeAt","zeroSize","width","height","baseline","measureText","style","measureBox","TextMetrics","current","measure","LRUCache","DEFAULT_OPTIONS","defaultMeasureBox","window","kendo","util","Class","extend","init","size","this","_size","_length","_map","put","value","map","entry","_head","_tail","newer","older","get","baselineMarkerSize","document","createElement","cssText","options","_cache","styleKey","cacheKey","cachedResult","baselineMarker","textStr","box","_baselineMarker","cloneNode","textContent","appendChild","body","offsetWidth","offsetHeight","offsetTop","parentNode","removeChild","marker","deepExtend","jQuery","amd","a1","a2","a3","findAxisByName","name","axes","idx","prepareUserOptions","ChartAxis","countNumbers","values","num","count","isNumber","getField","field","row","getter","evalOptions","context","state","dryRun","defaults","depth","needsEval","property","propValue","excluded","MAX_EXPAND_DEPTH","inArray","hasOwnProperty","isFunction","valueOrDefault","isObject","categoriesCount","series","seriesCount","categories","Math","max","data","toGeometryPoint","lintPoint","stepAxis","stepDir","axis","dir","result","GeometryPoint","anyHasZIndex","elements","defined","zIndex","hasGradientOverlay","overlay","gradient","forEach","callback","forEachReverse","areNumbers","hasValue","wrapData","seriesItem","isArray","paneID","ID","appendIfNotNull","array","element","segmentVisible","fields","index","pointVisibility","visible","bindSegments","pointData","points","sum","SeriesBinder","bindPoint","valueFields","isString","parseFloat","abs","total","equalsIgnoreCase","a","b","toLowerCase","filterSeriesByType","types","currentSeries","seriesTypes","concat","type","getDateField","intlService","parseDate","isDateAxis","axisOptions","sampleCategory","dateCategory","Date","DATE","singleItemOrArray","seriesMissingValues","missingValues","AREA_REGEX","test","stack","ZERO","INTERPOLATE","hasValue$1","item","dataviz","convertableToNumber","findNext","ref","pointHasValue","outPoint","start","min","getter$$1","hasItem","createOutOfRangePoints","range","minPoint","maxPoint","hasMinPoint","hasMaxPoint","_outOfRangeMinPoint","_outOfRangeMaxPoint","isSingleAxis","pane","some","vertical","axisGroupBox","axisBox","contentBox","lineBox","wrap","clone","Box","paneAnchor","anchor","isTransparent","color","setValue","fieldName","target","parentObj","indexOf","split","shift","updateAxisOptions","targetOptions","axesOptions","CategoryAxis","categoryAxis","valueAxis","axisIndex","groupSeries","axisIx","grep","s","preventDefault","_defaultPrevented","acceptKey","e","mouseKey","event","accept","ctrlKey","shiftKey","altKey","toChartAxisRanges","axisRanges","axisRange","ranges","createDiv","className","closestHandle","hasClasses","updateAxisOptions$1","yAxis","xAxis","tooltipAlignment","angle","horizontal","radians","rad","sine","round","sin","DEFAULT_PRECISION","cosine","cos","RAD_60","CENTER","RIGHT","LEFT","RAD_30","BOTTOM","TOP","intersection","b1","b2","ua","uat","x","y","ub","Point","xComparer","resolveAxisAliases","alias","aliases","AXIS_NAMES","pointByCategoryName","category","applyAxisDefaults","themeOptions","mapAxisOptions","axisColor","axisDefaults","themeAxisDefaults","axisName","line","labels","title","applySeriesDefaults","seriesType","baseOptions","seriesLength","seriesDefaults","commonDefaults","themeSeriesDefaults","commonThemeDefaults","cleanupNestedSeriesDefaults","tooltip","_defaults","bar","column","rangeColumn","verticalLine","pie","donut","area","verticalArea","scatter","scatterLine","bubble","candlestick","ohlc","boxPlot","bullet","verticalBullet","polarArea","polarLine","radarArea","radarLine","waterfall","sortDates","dates","comparer","dateComparer","uniqueDates","srcDates","last","transpose","rows","rowIx","colCount","colIx","rowCount","clearMissingValues","originalOptions","fieldValue","originalValue","nullValue","DATA_FIELDS","triggerPaneRender","panes","notifyRender","datavizConstants","MAX_VALUE","MIN_VALUE","VALUE","WHITE","CIRCLE","X","Y","BLACK","ARC","ChartElement","alignPathToPixel","setDefaultOptions","eventElement","getTemplate","TextBox","ShapeElement","getSpacing","CurveProcessor","append","styleValue","BoxElement","limitValue","elementStyles","bindEvents","services","unbindEvents","support","drawing","Path","Animation","AnimationFactory","Group","Color","geometry","transform","ChartPane","ChartPlotArea","Aggregates","STD_ERR","STD_DEV","percentRegex","standardDeviationRegex","ErrorRangeCalculator","browser","INITIAL_ANIMATION_DURATION","FADEIN","GLASS","BORDER_BRIGHTNESS","TOOLTIP_OFFSET","START_SCALE","ERROR_LOW_FIELD","ERROR_HIGH_FIELD","X_ERROR_LOW_FIELD","X_ERROR_HIGH_FIELD","Y_ERROR_LOW_FIELD","Y_ERROR_HIGH_FIELD","LINE_MARKER_SIZE","GAP","ABOVE","BELOW","SMOOTH","STEP","AREA","BAR","BOX_PLOT","BUBBLE","BULLET","CANDLESTICK","COLUMN","DONUT","FUNNEL","HORIZONTAL_WATERFALL","LINE","OHLC","PIE","POLAR_AREA","POLAR_LINE","POLAR_SCATTER","RADAR_AREA","RADAR_COLUMN","RADAR_LINE","RANGE_AREA","RANGE_BAR","RANGE_COLUMN","SCATTER","SCATTER_LINE","VERTICAL_AREA","VERTICAL_BOX_PLOT","VERTICAL_BULLET","VERTICAL_LINE","VERTICAL_RANGE_AREA","WATERFALL","EQUALLY_SPACED_SERIES","LEGEND_ITEM_CLICK","LEGEND_ITEM_HOVER","LEGEND_ITEM_LEAVE","SERIES_CLICK","SERIES_HOVER","SERIES_OVER","SERIES_LEAVE","PLOT_AREA_CLICK","PLOT_AREA_HOVER","PLOT_AREA_LEAVE","DRAG","DRAG_END","DRAG_START","ZOOM_START","ZOOM","ZOOM_END","SELECT_START","SELECT","SELECT_END","RENDER","SHOW_TOOLTIP","HIDE_TOOLTIP","PANE_RENDER","LOGARITHMIC","CATEGORY","INSIDE_END","INSIDE_BASE","OUTSIDE_END","MOUSEWHEEL","MOUSEWHEEL_DELAY","constants","DEFAULT_ERROR_BAR_WIDTH","ErrorBarBase","CategoricalErrorBar","CategoricalChart","PointEventsMixin","NoteMixin","LinePoint","LineSegment","StepLineMixin","StepLineSegment","SplineSegment","LineChartMixin","ClipAnimation","ClipAnimationMixin","LineChart","AreaSegment","StepAreaSegment","SplineAreaSegment","AreaChart","AxisGroupRangeTracker","BarLabel","BAR_ALIGN_MIN_WIDTH","Bar","ClusterLayout","StackWrap","BarChart","Candlestick","CandlestickChart","BoxPlot","VerticalBoxPlot","BoxPlotChart","ScatterErrorBar","ScatterChart","Bubble","BubbleChart","Target","Bullet","BulletChart","BaseTooltip","CrosshairTooltip","Crosshair","ChartContainer","Pane","PlotAreaBase","allPaneAxes","PlotAreaEventsMixin","SeriesAggregator","DefaultAggregates","RangeBar","RangeBarChart","RangeLinePoint","AUTO","DEFAULT_FROM_FORMAT","DEFAULT_TO_FORMAT","RangeAreaPoint","RangeAreaSegment","SplineRangeAreaSegment","StepRangeAreaSegment","RangeAreaChart","OHLCPoint","OHLCChart","WaterfallSegment","WaterfallChart","AREA_SERIES","OUT_OF_RANGE_SERIES","CategoricalPlotArea","Highlight","Pannable","ZoomSelection","MousewheelZoom","LegendLayout","LegendItem","HORIZONTAL","POINTER","CUSTOM","Legend","PlotAreaFactory","ZOOM_ACCELERATION","SELECTOR_HEIGHT_ADJUST","Selection","Tooltip","SharedTooltip","BarChartAnimation","BubbleAnimation","FadeInAnimation","PieAnimation","ScatterLineChart","XYPlotArea","PieSegment","PieChartMixin","PIE_SECTOR_ANIM_DELAY","PieChart","PiePlotArea","DonutSegment","DONUT_SECTOR_ANIM_DELAY","DonutChart","DonutPlotArea","DEFAULT_PADDING","PolarPlotAreaBase","PolarScatterChart","PolarLineChart","SplinePolarAreaSegment","PolarAreaSegment","PolarAreaChart","PolarPlotArea","RadarLineChart","SplineRadarAreaSegment","RadarAreaSegment","RadarAreaChart","RadarSegment","RadarClusterLayout","RadarStackLayout","RadarBarChart","RadarPlotArea","FunnelSegment","FunnelChart","FunnelPlotArea","COLOR","FIRST","FROM","MAX","MIN","NOTE_TEXT","SUMMARY_FIELD","TO","MOUSEMOVE","CONTEXTMENU","MOUSELEAVE","MOUSEMOVE_DELAY","Chart","_axis","point","getCategory","getValue","slot","from","to","limit","valueRange","visual","chartsVisual","chartContainer","_pane","plotArea","_plotArea","backgroundVisual","_bgVisual","sumOrNull","avg","first","_valueFields","_otherFields","_nullValue","_undefinedValue","register","otherFields","this$1","_makeValue","undefined","canonicalFields","pointIx","fieldData","srcValueFields","srcPointFields","Array","slice","_bindFromArray","sourceFields","_bindFromObject","initialValue","srcFields","srcFieldName","sourceFieldName","RegExp","errorValue","initGlobalRanges","average","deviation","multiple","errorRange","standardError","deviationMatch","exec","valueGetter","createValueGetter","getAverage","getStandardDeviation","low","high","globalRange","getStandardError","binder","OBJECT","getErrorRange","pointValue","percentValue","Error","sqrt","isSample","squareDifferenceSum","pow","msie","isVertical","chart","fn","call","reflow","targetBox","linePoints","endCaps","getAxis","valueBox","getSlot","centerBox","center","capsWidth","getCapsWidth","capValue","capStart","capEnd","y1","y2","x1","x2","boxSize","floor","createVisual","rect","toRect","sender","getSender","createDefaultVisual","defaultVisual","lineOptions","stroke","dashType","moveTo","lineTo","animation","delay","seriesValueAxis","chartService","seriesCategoryAxis","valueAxisRanges","categoryPoints","seriesPoints","seriesOptions","_evalSeries","render","traverseDataPoints","addValue","bind","pointOptions","seriesIx","pointType","prototype","invertAxes","plotValue","categoryIx","otherValues","categorySum","other","otherStack","isStacked100","group","plotRange","startValue","positive","prevValue","isStackedBar","otherValue","axisCrossingValue","isStacked","STRING","categoryAxisCrossingValue","stackLimits","stackName","pIx","isFinite","updateStackRange","limits","errorTotals","chartSeries","limitsCache","negative","sparseArrayLimits","addErrorBar","errorBars","lowValue","highValue","seriesErrorRanges","addPointErrorBar","stackedErrorRange","errorBar","updateRange","createPoint","owner","noteText","dataItem","evalPointOptions","doEval","namedValueAxes","categorySlots","chartPoints","valueSlot","pointSlot","categorySlot","aboveAxis","stackValue","percentage","reflowPoint","reflowCategories","clip","limitPoints","limitPoint","limittedSlot","limitSlot","equals","reverse","crossingValues","axisCrossingValues","slotX","slotY","seriesIx$1","currentCategory","seriesIx$2","_outOfRangeCallback","categoryAt","_bindPoint","outOfRangePoint","bindCache","_bindCache","formatPointValue","format","auto","click","trigger","eventArgs","hover","over","out","runningTotal","originalEvent","createNote","notes","label","note","Note","tooltipTracking","labelTemplate","labelText","markers","_rendered","createMarker","formatValue","align","vAlign","margin","left","right","markerBorder","background","border","brightness","toHex","rotation","opacity","markerBox","_childBox","childBox","noteTargetBox","reflowLabel","position","alignTo","createHighlight","highlight","defaultColor","shadow","getElement","highlightVisual","highlightVisualArgs","halfSize","paddingBox","Rect","tooltipAnchor","horizontalAlign","verticalAlign","clipBox","showTooltip","overlaps","overlapsBox","unclipElements","noclip","padding","HIGHLIGHT_ZINDEX","toGeometryPoints","customVisual","segmentVisual","fromPoints","closed","close","aliasFor","coords","parent","getNearestPoint","calculateStepPoints","stepPoint","justified","previousPoint","curveProcessor","segments","curve","process","apply","renderSegments","lastSegment","sortedPoints","pointCount","_segments","sortPoints","createSegment","_addSegment","children","unshift","segment","assumeZero","nearestPoint","pointBox","pointDistance","allPoints","nearestPointDistance","distanceTo","setup","_setEnd","step","pos","interpolateValue","topRight","bottomRight","suspend","setX","resume","duration","createAnimation","clipPath","root","getRoot","transitions","fromRect","_setChildrenAnimation","animationPoints","prevSegment","stackPoints","createFill","fill","createStroke","lineCap","strokeSegments","_strokeSegments","createStrokeSegments","segmentsFromPoints","stackSegments","createStackSegments","Segment","hasStackSegment","fillSegments","hasStackSegments","fillToAxes","fillPath","crossingValue","endSlot","firstPoint","lastPoint","end","controlOut","controlIn","previousSegment","_gapStackPoints","stackPoint","_stackPoints","endIdx","pointOffset","currentSeriesIx","gapStackPoint","startIdx","_previousSegmentPoint","_createGapStackPoint","segmentIx","seriesIdx","update","chartAxisRanges","chartRange","reset","query","content","textBox","textOptions","labelBox","top","bottom","alignToClipBox","parentBox","createLabel","rectVisual","createRect","path","strokeOpacity","getBorderColor","lineJoin","createGradientOverlay","baseColor","_brightness","borderColor","rtl","gap","spacing","slots","slotSize","child","currentChild","positionAxis","childrenCount","snapTo","clusterType","stackType","cluster","stackWrap","labelOptions","negativeColor","getStackWrap","stackGroup","wraps","_stackGroup","zeroSlot","stackAxis","childrenLength","_setAnimationOptions","pointVisual","origin","mid","ocSlot","open","lhSlot","realBody","lines","reflowNote","_mainVisual","mainVisual","createOverlay","createBody","createLines","container","set","drawLines","lineStyle","normalColor","valueParts","splitValue","downColor","whiskerSlot","boxSlot","medianSlot","meanSlot","q1","q3","reflowBoxSlot","lower","upper","reflowWhiskerSlot","median","mean","meanPoints","calcMeanPoints","whiskerPoints","calcWhiskerPoints","medianPoints","calcMedianPoints","renderOutliers","outlierValue","markersBorder","shape","outliers","outerFence","extremes","reflowOutliers","move","whiskers","CROSS","filterOutliers","items","seriesAxes","_initFields","xAxisRanges","yAxisRanges","valueErrorField","lowField","highField","createMissingValue","intl","xAxisName","yAxisName","xAxisRange","yAxisRange","namedXAxes","axisX","namedYAxes","axisY","currentSeriesPoints","ref$1","radius","highlightGroup","Circle","createGradient","stops","offset","_maxSize","negativeValues","updateBubblesSize","pointsCount","animationOptions","minSize","maxSize","minR","maxR","minArea","maxArea","areaRange","areaRatio","baseZIndex","PI","targetValueSlot","targetSlotX","targetSlotY","targetSlot","bodyVisual","create","bulletOptions","isNaN","getStyle","pointColor","backgroundColor","font","borderWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","show","tooltipOptions","percBrightness","notify","hide","destroy","crosshair","formatService","initAxisName","showAt","stickyMode","formattedValue","dateFormats","baseUnit","getAnchor","ref_options","bbox","bottomLeft","translate","topLeft","moveLine","lineEnd","getBox","dim","lineStart","pointCategoryIndex","axisLineBox","currentAxis","shouldClip","_clipBox","chartsBox","clipRect","unclipLabels","stackRoot","j","charts","isStackRoot","id","createTitle","titleOptions","Title","buildTitle","appendAxis","appendAxisAt","splice","appendChart","empty","i$1","removeAxis","removeChart","pop","visualStyle","renderComplete","createGridLines","clipRoot","gridLines","altAxis","allAxes","vGridLines","hGridLines","refresh","clear","renderVisual","axisValueField","length$1","idx$1","axis$1","lineBox$1","service","getService","paneIndex","shrinkToFit","initFields","initSeries","legend","crosshairs","createPanes","createCrosshairs","setTitle","currentPane","paneOptions","panesLength","currentCrosshair","removeCrosshairs","hideCrosshairs","findPane","matchingPane","findPointPane","containsPoint","axisToRemove","filteredAxes","chartToRemove","filteredCharts","addToLegend","seriesVisible","itemLabelOptions","markerColor","inactiveItems","inactiveItemsLabels","visibleInLegend","active","groupAxes","paneIx","paneAxes","xAxes","yAxes","any","groupSeriesByPane","seriesByPane","seriesPaneName","filterVisibleSeries","unpad","reflowPanes","detachLabels","reflowAxes","reflowCharts","redraw","panesArray","cleanGradients","crossingAxes","valuesToAdd","defaultValue","alignAxisTo","targetAxis","targetCrossingValue","slotEdge","targetEdge","alignAxes","paneId","anchorCrossings","pane$1","paneId$1","visible$1","anchor$1","anchorCrossings$1","xAnchor","yAnchor","xAnchorCrossings","yAnchorCrossings","leftAnchors","rightAnchors","topAnchors","bottomAnchors","_overlap","_mirrored","mirror","COORD_PRECISION","shrinkAxisWidth","overflowX","shrink","shrinkAxisHeight","shrinked","overflowY","fitAxes","paneBox","offsetY","currentAxis$1","offsetX","reflowPaneAxes","autoRotateAxisLabels","groupedAxes","rotated","autoRotateLabels","chartPane","percents","currentPane$1","i$2","currentPane$2","remainingHeight","remainingPanes","autoHeightPanes","parseInt","backgroundBox","axisA","axisB","axesCount","chartsBoxes","boxes","addBackgroundPaths","multipath","paths","backgroundContainsPoint","bg","MultiPath","appendVisual","pointsByCategoryIndex","categoryIndex","pointsBySeriesIndex","seriesIndex","filterPoints","pointsBySeriesName","findPoint","paneByPoint","detachAxisGroupLabels","labelAxis","labelAxisCount","createLabelAxis","edge","onAxis","END","START","plotBands","reduce","acc","_dispatchEvent","defaultAggregates","fieldAggregate","seriesFields","_seriesFields","rootAggregate","aggregate","_series","_binder","canonicalName","aggregatePoints","srcPoints","srcValues","_bindPoints","firstDataItem","dataItems","_bindField","aggregates","fromOptions","toOptions","labelFrom","_createLabel","labelTo","plotLimits","initLabelsFormat","fromPoint","toPoint","copyFields","fromBox","toBox","positionLabels","fromLabelPosition","toLabelPosition","toPoints","fromSegments","toPath","fromPath","createCurveSegments","segmentType","fromSlot","toSlot","oPoints","cPoints","lhPoints","oSlot","cSlot","createSegments","summary","totalCategories","prevPoint","namedCategoryAxes","valueAxisRangeTracker","stack100","createCategoryAxes","aggregateCategories","createCategoryAxesLabels","createCharts","createValueAxes","paneSeries","visibleSeries","groups","groupIx","groupSeriesByCategoryAxis","createChartGroup","createAreaChart","createRangeAreaChart","createBarChart","createRangeBarChart","createBulletChart","createCandlestickChart","createBoxPlotChart","createOHLCChart","createWaterfallChart","createLineChart","axisPane","dateAxis","srcSeries","processedSeries","_currentPointsCache","_seriesPointsCache","categoryField","aggregateSeries","filterSeries","outOfRangePoints","dataLength","_seriesMax","currentRangeIndices","clearSeriesPointsCache","seriesSourcePoints","srcCategories","srcData","getFn","categoriesHash","mapCategories","totalIndex","aggregator","categoryItem","categoryIdx","totalCount","categoriesToAdd","defaultPaneName","paneName","stackableChartOptions","firstSeries","axisSeries","categoryAxes","unique","barChart","rangeColumnChart","bulletChart","lineChart","areaChart","rangeAreaChart","waterfallChart","axisRequiresRounding","categoryAxisName","categoryAxisIndex","seriesAxis","centeredSeries","aggregatedAxis","createLabels","primaryAxis","definitions","isJustified","DateCategoryAxis","defaultAxisRange","axisType","tracker","defaultRange","roundToMajorUnit","LogarithmicAxis","NumericAxis","eventType","_eventCoordinates","pointPane","_points","arrayPoints","toggleHighlight","hasHighlight","togglePointHighlight","toggleHandler","toggle","isHighlighted","_active","_panAxes","pan","delta","lock","updatedAxes","limitRange","marqueeColor","marquee","_marquee","removeElement","setStyles","styles","zoomPane","_zoomPane","_elementOffset","_zoomPaneClipBox","pageX","pageY","chartElement","elementOffset","_selectionPosition","elementOffset$$1","selectionPosition","_updateAxisRanges","zoom","pointsRange","startLocation","location","updateRanges","zoomRange","legendItem","Layout","lineSpacing","orientation","alignItems","clippedBBox","rectToBox","addVisual","createContainer","FloatElement","markerOptions","cursor","eventSink","_itemOverlay","widget","args","_legendItemHover","pointIndex","_unsetActivePoint","renderChildren","createItems","userAlign","innerElement","hasItems","legendBox","containerCustomReflow","containerReflow","alignTarget","containerBox","_registry","registry","match","observer","_dateAxis","initOptions","createElements","_index","onPane","selection","leftHandle","rightHandle","selectionStyles","leftHandleHeight","rightHandleHeight","wrapper","direction","leftMask","rightMask","borderLeftWidth","borderRightWidth","mousewheel","_mousewheelHandler","_mousewheel","obj","_domEvents","DomEventsBuilder","stopPropagation","_start","_move","_end","tap","_tap","press","_press","gesturestart","_gesturestart","gesturechange","_gesturechange","gestureend","_gestureend","clearTimeout","_mwTimeout","_state","_rangeEventArgs","_value","moveTarget","handle","addClass","oldRange","span","scale","removeClass","rightClick","which","mousewheelDelta","expand","setTimeout","p0","_toModelCoordinates","touches","p1","_slot","rightMaskWidth","distance","leftMaskWidth","fromValue","toValue","zDir","_current","tooltipPoints","_slotAnchor","_defaultAnchor","shared","categoryText","categoryFormat","centerPoint","slotCenter","fromScale","abort","scaleX","scaleY","easing","fadeTo","missingValue","xAxisRangeTracker","yAxisRangeTracker","filteredSeries","createScatterChart","createScatterLineChart","createBubbleChart","createAxes","xAxisOptions","yAxisOptions","createXYAxis","seriesAxisName","firstPointValue","inferredDate","namedAxes","isLog","typeSamples","DateValueAxis","axisPane$1","xAxesOptions","yAxesOptions","currentValue","xValues","yValues","sector","brightnessValue","themeLabels","theme","animationDelay","labelHeight","labelWidth","lp","labelsOptions","labelsDistance","middle","startAngle","innerRadius","endAngle","createSegmentVisual","borderOptions","fallbackFill","userSpace","singleSegment","ShapeBuilder","createRing","midAndle","midPoint","DEFAULT_FONT","createLegendItem","pointVisible","legendOptions","legendItems","colorsCount","anglePerValue","constantAngle","currentAngle","explode","seriesColors","Ring","evalSegmentOptions","segmentOptions","space","minWidth","halfMinWidth","defaultPadding","newBox","newBoxCenter","boxCenter","leftSideLabels","rightSideLabels","seriesConfig","seriesConfigs","setRadius","labelComparator","leftLabelsReflow","rightLabelsReflow","distances","distanceBetweenLabels","distributeLabels","secondBox","lr","firstBox","remaining","_takeDistance","reflowLabels","amount","available","boxX","labelsCount","labelDistance","boxY","hAlignLabel","connectorsColor","connectorLine","sr","crossing","connectors","_connectorLines","pointInCircle","pieCenter","bboxBottom","find","autoFit","reverseValue","second","originalX","sector_center","cx","cy","t","createPieChart","pieChart","totalSize","seriesWithoutSize","holeSize","currentSize","currentSeries$1","createDonutChart","donutChart","createPolarAxis","createValueAxis","polarAxis","axisDefaultRange","valueAxisOptions","RadarLogarithmicAxis","RadarNumericAxis","valueAxisBox","heightDiff","valueRadius","onCircle","_polarAxisCenter","centerSegment","_hasMissingValuesGap","PolarAxis","majorGridLines","minorGridLines","scatterChart","xValue","yValue","slotAngle","slotSector","childSector","RadarCategoryAxis","_hasBarCharts","_isStacked100","chartOptions","chartBox","createPath","labelPadding","dynamicSlopeReflow","totalHeight","lastUpperSide","previousOffset","previousHeight","nextSegment","nextPercentage","firstSegment","maxSegment","dynamicHeight","segmentSpacing","constantSlopeReflow","decreasingWidth","neckRatio","topMostWidth","finalNarrow","dynamicSlope","createFunnelChart","funnelChart","errorLow","errorHigh","userOptions","observers","addObserver","ChartService","_initElement","_originalOptions","_theme","_initTheme","_initHandlers","_initSurface","bindCategories","FontLoader","preloadFonts","fontLoaded","_destroyed","_redraw","_attachEvents","_setElementClass","firstChild","seriesCopies","applyDefaults","applySeriesColors","getSize","chartArea","resize","force","hasSize","_resize","_selections","_destroySelections","_setupSelection","_noTransitionsRedraw","_model","findPaneByName","findPaneByIndex","filter","seriesName","categoryName","togglePointsHighlight","_highlight","_sharedTooltip","_tooltip","hideTooltip","surface","_surfaceWrap","elementSize","renderAs","_destroySurface","Surface","_surfaceMouseenterHandler","_surfaceMouseleaveHandler","model","_getModel","_destroyView","traverse","draw","play","_createTooltip","_createPannable","_createZoomSelection","_createMousewheelZoom","_navState","_cancelDomEvents","exportVisual","exportOptions","currentOptions","pannable","_pannable","zoomable","_zoomSelection","_mousewheelZoom","_toggleDragZoomEvents","allowDrag","requiresHandlers","allowZoom","_dragZoomEnabled","touchAction","_touchAction","_toggleDomEvents","drag","domEvents","toggleDrag","toggleZoom","_createSharedTooltip","seriesColor","colors","_createPlotArea","RootElement","_modelOptions","DEFAULT_WIDTH","DEFAULT_HEIGHT","skipSeries","selections","select","_selectStart","_select","_selectEnd","_clickHandler","_click","_mouseleaveHandler","_mouseleave","_mouseover","_mouseout","_mousemove","throttle","removeObserver","eventNames","isDefaultPrevented","_toDocumentCoordinates","obj$1","_shouldAttachMouseMove","_hoveredPoint","hovered","cancel","_stopChartHandlers","_gestureDistance","suspendTracking","_zooming","resumeTracking","previousGestureDistance","scaleDelta","mousewheelZoom","_drawingChartElement","leave","_startNavigation","_suppressHover","panning","ranges$1","translateRange","_endNavigation","prevented","totalDelta","scaleRange","chartEvent","_getChartElement","eventTarget","closest","coordinates","eventCoordinates","_elementPadding","_padding","clientX","clientY","drawingElement","sharedTooltip","_startHover","_trackSharedTooltip","_propagateClick","handlingTap","activePoint","hoveredPoint","_activePoint","_mouseMoveTrackHandler","_mouseMoveTracking","seriesPoint","overPlotArea","_trackCrosshairs","pointArgs","hoverArgs","_tooltipCategoryIx","_sharedHighlight","hideElements","_deferRedraw","_clearRedrawTimeout","_redrawTimeout","clearInterval","autoBind","bindCategoryAxisFromSeries","dataIx","dataRow","uniqueCategories","HashMap","bindable","_isBindable","transitionsState","updateMouseMoveHandler","applyOptions","setOptions","setDirection","setIntlService","noTransitionsRedraw","unbind","createProxyMember","instance","_instance","arguments","nameTemplate","seriesClone","legacyTemplate","groupNameTemplate","logToConsole","template","_slotCount","_groupIx","_groupValue","normalizeStyle","ChartInstanceObserver","proxyMembers","SeriesVisibilityState","geom","ChartSeries","NS","outerWidth","_outerWidth","outerHeight","_outerHeight","KendoChart","Widget","ui","DataSource","InstanceObserver","proxy","MOUSELEAVE_NS","AXIS_LABEL_CLICK","NOTE_CLICK","NOTE_HOVER","NOTE_LEAVE","CHANGE","DATABOUND","LEAVE","Observable","TOOLTIP_ANIMATION_DURATION","TOOLTIP_SHOW_DELAY","TOOLTIP_INVERSE","SHARED_TOOLTIP_CLASS","RTL","events","UserEvents","global","multiTouch","fastTap","handlerMap","legendItemClick","dataSource","_seriesVisibility","_initDataSource","_bindSeries","_bindCategories","dimensions","_setEvents","_getThemeOptions","_sourceSeries","setDataSource","_hasDataSource","_onDataChanged","_dataChangeHandler","_hasData","fetch","off","_destroyCrosshairTooltips","findSeries","findSeriesByName","_createSeries","findSeriesByIndex","originalChartArea","_seriesOptions","on","relatedTarget","themes","themeName","SASS_THEMES","autoTheme","_initChart","_createChart","_isRtl","_onInit","_initTooltip","tooltips","_crosshairTooltips","_getCrosshairTooltip","_showTooltip","_hideTooltip","_onRender","_copyMembers","names","_events","_tooltipleave","_onLegendItemClick","_legendItemClick","save","_bindData","groupedSeries","view","grouped","seriesVisibility","read","applyByGroup","applyByIndex","seriesData","categoriesData","_bindCategoryAxis","isRtl","css","ExportMixin","PDFMixin","plugin","action","persistSeriesVisibility","saveState","mobileScrollerSelector","useWithBlock","paramName","attr","_mobileScroller","_clearShowTimeout","remove","sharedTemplate","_offset","_ensureElement","stop","animate","showTimeout","_measure","zoomLevel","viewport","scrollTop","pageYOffset","documentElement","scrollLeft","pageXOffset","movable","_fit","toggleClass","_sharedContent","_pointContent","html","_hideElement","nameColumn","colorMarker","colspan","appendTo","contains","fadeOut","always","tooltipTemplate","xLow","xHigh","yLow","yHigh","viewPortSize","output","_chart","_options","_filterPoints","_clearFields","toggleVisibility","hasFilter","_filterData"],"mappings":"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AiBrP,GAASoP,IAC7BpP,GAASqP,IACTH,EAAmBG,EAAeD,KAO1D,QAASI,GAAkBC,GACvB,IAAK,GAAIpR,GAAM,EAAGA,EAAMoR,EAAMvV,OAAQmE,IAClCoR,EAAMpR,GAAKqR,eAvhXtB,GAEOzK,IACA7J,GACAwD,GACA+Q,GACAC,GACAC,GACAC,GACAzF,GACAK,GACAD,GACAF,GACAwF,GACAC,GACAC,GACAC,GACA5F,GACA6F,GACA7L,GACA2F,GACAmG,GACAlP,GACAlC,GACA8C,GACAuO,GACAlF,GACAtE,GACAyJ,GACAC,GACA3Q,GACAE,GACAC,GACAC,GACApC,GACA+Q,GACA6B,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACA9N,GACAgB,GACA+M,GACAnJ,GACAoJ,GACAjH,GACAkH,GACA/I,GACAgJ,GACA7H,GACA8H,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACA9Q,GACA+Q,GACAvT,GA+BAwT,GAUAC,GAkBAC,GA8EApP,GAiHAqP,GACAC,GACAC,GACAC,GACAC,GA2GAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAvO,GACAC,GACAuO,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAaAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAmFAC,GACAC,GAqGAC,GAMA/X,GA2CAgY,GAmdAC,GA6BAC,GAgBAC,GA8QAC,GAm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","file":"kendo.dataviz.chart.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('util/text-metrics', ['kendo.core'], f);\n}(function () {\n    (function ($) {\n        window.kendo.util = window.kendo.util || {};\n        var LRUCache = kendo.Class.extend({\n            init: function (size) {\n                this._size = size;\n                this._length = 0;\n                this._map = {};\n            },\n            put: function (key, value) {\n                var map = this._map;\n                var entry = {\n                    key: key,\n                    value: value\n                };\n                map[key] = entry;\n                if (!this._head) {\n                    this._head = this._tail = entry;\n                } else {\n                    this._tail.newer = entry;\n                    entry.older = this._tail;\n                    this._tail = entry;\n                }\n                if (this._length >= this._size) {\n                    map[this._head.key] = null;\n                    this._head = this._head.newer;\n                    this._head.older = null;\n                } else {\n                    this._length++;\n                }\n            },\n            get: function (key) {\n                var entry = this._map[key];\n                if (entry) {\n                    if (entry === this._head && entry !== this._tail) {\n                        this._head = entry.newer;\n                        this._head.older = null;\n                    }\n                    if (entry !== this._tail) {\n                        if (entry.older) {\n                            entry.older.newer = entry.newer;\n                            entry.newer.older = entry.older;\n                        }\n                        entry.older = this._tail;\n                        entry.newer = null;\n                        this._tail.newer = entry;\n                        this._tail = entry;\n                    }\n                    return entry.value;\n                }\n            }\n        });\n        var REPLACE_REGEX = /\\r?\\n|\\r|\\t/g;\n        var SPACE = ' ';\n        function normalizeText(text) {\n            return String(text).replace(REPLACE_REGEX, SPACE);\n        }\n        function objectKey(object) {\n            var parts = [];\n            for (var key in object) {\n                parts.push(key + object[key]);\n            }\n            return parts.sort().join('');\n        }\n        function hashKey(str) {\n            var hash = 2166136261;\n            for (var i = 0; i < str.length; ++i) {\n                hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n                hash ^= str.charCodeAt(i);\n            }\n            return hash >>> 0;\n        }\n        function zeroSize() {\n            return {\n                width: 0,\n                height: 0,\n                baseline: 0\n            };\n        }\n        var DEFAULT_OPTIONS = { baselineMarkerSize: 1 };\n        var defaultMeasureBox;\n        if (typeof document !== 'undefined') {\n            defaultMeasureBox = document.createElement('div');\n            defaultMeasureBox.style.cssText = 'position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;' + 'padding: 0 !important; margin: 0 !important; border: 0 !important;' + 'line-height: normal !important; visibility: hidden !important; white-space: pre!important;';\n        }\n        var TextMetrics = kendo.Class.extend({\n            init: function (options) {\n                this._cache = new LRUCache(1000);\n                this.options = $.extend({}, DEFAULT_OPTIONS, options);\n            },\n            measure: function (text, style, options) {\n                if (options === void 0) {\n                    options = {};\n                }\n                if (!text) {\n                    return zeroSize();\n                }\n                var styleKey = objectKey(style);\n                var cacheKey = hashKey(text + styleKey);\n                var cachedResult = this._cache.get(cacheKey);\n                if (cachedResult) {\n                    return cachedResult;\n                }\n                var size = zeroSize();\n                var measureBox = options.box || defaultMeasureBox;\n                var baselineMarker = this._baselineMarker().cloneNode(false);\n                for (var key in style) {\n                    var value = style[key];\n                    if (typeof value !== 'undefined') {\n                        measureBox.style[key] = value;\n                    }\n                }\n                var textStr = options.normalizeText !== false ? normalizeText(text) : String(text);\n                measureBox.textContent = textStr;\n                measureBox.appendChild(baselineMarker);\n                document.body.appendChild(measureBox);\n                if (textStr.length) {\n                    size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;\n                    size.height = measureBox.offsetHeight;\n                    size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;\n                }\n                if (size.width > 0 && size.height > 0) {\n                    this._cache.put(cacheKey, size);\n                }\n                measureBox.parentNode.removeChild(measureBox);\n                return size;\n            },\n            _baselineMarker: function () {\n                var marker = document.createElement('div');\n                marker.style.cssText = 'display: inline-block; vertical-align: baseline;width: ' + this.options.baselineMarkerSize + 'px; height: ' + this.options.baselineMarkerSize + 'px;overflow: hidden;';\n                return marker;\n            }\n        });\n        TextMetrics.current = new TextMetrics();\n        function measureText(text, style, measureBox) {\n            return TextMetrics.current.measure(text, style, measureBox);\n        }\n        kendo.deepExtend(kendo.util, {\n            LRUCache: LRUCache,\n            TextMetrics: TextMetrics,\n            measureText: measureText,\n            objectKey: objectKey,\n            hashKey: hashKey,\n            normalizeText: normalizeText\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/kendo-chart', [\n        'kendo.core',\n        'kendo.color',\n        'kendo.drawing',\n        'kendo.dataviz.core'\n    ], f);\n}(function () {\n    (function ($) {\n        window.kendo.dataviz = window.kendo.dataviz || {};\n        var dataviz = kendo.dataviz;\n        var Class = dataviz.Class;\n        var isNumber = dataviz.isNumber;\n        var datavizConstants = dataviz.constants;\n        var MAX_VALUE = datavizConstants.MAX_VALUE;\n        var MIN_VALUE = datavizConstants.MIN_VALUE;\n        var VALUE = datavizConstants.VALUE;\n        var CENTER = datavizConstants.CENTER;\n        var TOP = datavizConstants.TOP;\n        var BOTTOM = datavizConstants.BOTTOM;\n        var LEFT = datavizConstants.LEFT;\n        var WHITE = datavizConstants.WHITE;\n        var CIRCLE = datavizConstants.CIRCLE;\n        var X = datavizConstants.X;\n        var Y = datavizConstants.Y;\n        var RIGHT = datavizConstants.RIGHT;\n        var BLACK = datavizConstants.BLACK;\n        var DATE = datavizConstants.DATE;\n        var DEFAULT_PRECISION = datavizConstants.DEFAULT_PRECISION;\n        var ARC = datavizConstants.ARC;\n        var defined = dataviz.defined;\n        var getter = dataviz.getter;\n        var isArray = dataviz.isArray;\n        var ChartElement = dataviz.ChartElement;\n        var Point = dataviz.Point;\n        var Box = dataviz.Box;\n        var alignPathToPixel = dataviz.alignPathToPixel;\n        var setDefaultOptions = dataviz.setDefaultOptions;\n        var inArray = dataviz.inArray;\n        var isFunction = dataviz.isFunction;\n        var valueOrDefault = dataviz.valueOrDefault;\n        var isObject = dataviz.isObject;\n        var deepExtend = dataviz.deepExtend;\n        var last = dataviz.last;\n        var eventElement = dataviz.eventElement;\n        var getTemplate = dataviz.getTemplate;\n        var TextBox = dataviz.TextBox;\n        var ShapeElement = dataviz.ShapeElement;\n        var getSpacing = dataviz.getSpacing;\n        var CurveProcessor = dataviz.CurveProcessor;\n        var append = dataviz.append;\n        var isString = dataviz.isString;\n        var parseDate = dataviz.parseDate;\n        var styleValue = dataviz.styleValue;\n        var CategoryAxis = dataviz.CategoryAxis;\n        var BoxElement = dataviz.BoxElement;\n        var round = dataviz.round;\n        var limitValue = dataviz.limitValue;\n        var grep = dataviz.grep;\n        var elementStyles = dataviz.elementStyles;\n        var hasClasses = dataviz.hasClasses;\n        var bindEvents = dataviz.bindEvents;\n        var services = dataviz.services;\n        var unbindEvents = dataviz.unbindEvents;\n        var support = kendo.support;\n        var drawing = kendo.drawing;\n        var Path = drawing.Path;\n        var Animation = drawing.Animation;\n        var AnimationFactory = drawing.AnimationFactory;\n        var Group = drawing.Group;\n        var Color = kendo.Color;\n        var geometry = kendo.geometry;\n        var GeometryPoint = geometry.Point;\n        var transform = geometry.transform;\n        var ChartAxis = Class.extend({\n            init: function (axis) {\n                this._axis = axis;\n                this.options = axis.options;\n            },\n            value: function (point) {\n                var axis = this._axis;\n                var value = axis.getCategory ? axis.getCategory(point) : axis.getValue(point);\n                return value;\n            },\n            slot: function (from, to, limit) {\n                if (limit === void 0) {\n                    limit = true;\n                }\n                return this._axis.slot(from, to, limit);\n            },\n            range: function () {\n                return this._axis.range();\n            },\n            valueRange: function () {\n                return this._axis.valueRange();\n            }\n        });\n        function findAxisByName(name, axes) {\n            for (var idx = 0; idx < axes.length; idx++) {\n                if (axes[idx].options.name === name) {\n                    axes[idx].prepareUserOptions();\n                    return new ChartAxis(axes[idx]);\n                }\n            }\n        }\n        var ChartPane = kendo.Class.extend({\n            init: function (pane) {\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n                this._pane = pane;\n            },\n            findAxisByName: function (name) {\n                return findAxisByName(name, this._pane.axes);\n            }\n        });\n        var ChartPlotArea = Class.extend({\n            init: function (plotArea) {\n                this._plotArea = plotArea;\n                this.visual = plotArea.visual;\n                this.backgroundVisual = plotArea._bgVisual;\n            }\n        });\n        function countNumbers(values) {\n            var length = values.length;\n            var count = 0;\n            for (var i = 0; i < length; i++) {\n                var num = values[i];\n                if (isNumber(num)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n        var Aggregates = {\n            min: function (values) {\n                var length = values.length;\n                var min = MAX_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        min = Math.min(min, value);\n                    }\n                }\n                return min === MAX_VALUE ? values[0] : min;\n            },\n            max: function (values) {\n                var length = values.length;\n                var max = MIN_VALUE;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        max = Math.max(max, value);\n                    }\n                }\n                return max === MIN_VALUE ? values[0] : max;\n            },\n            sum: function (values) {\n                var length = values.length;\n                var sum = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (isNumber(value)) {\n                        sum += value;\n                    }\n                }\n                return sum;\n            },\n            sumOrNull: function (values) {\n                var result = null;\n                if (countNumbers(values)) {\n                    result = Aggregates.sum(values);\n                }\n                return result;\n            },\n            count: function (values) {\n                var length = values.length;\n                var count = 0;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        count++;\n                    }\n                }\n                return count;\n            },\n            avg: function (values) {\n                var count = countNumbers(values);\n                var result = values[0];\n                if (count > 0) {\n                    result = Aggregates.sum(values) / count;\n                }\n                return result;\n            },\n            first: function (values) {\n                var length = values.length;\n                for (var i = 0; i < length; i++) {\n                    var value = values[i];\n                    if (value !== null && defined(value)) {\n                        return value;\n                    }\n                }\n                return values[0];\n            }\n        };\n        function getField(field, row) {\n            if (row === null) {\n                return row;\n            }\n            var get = getter(field, true);\n            return get(row);\n        }\n        var SeriesBinder = Class.extend({\n            init: function () {\n                this._valueFields = {};\n                this._otherFields = {};\n                this._nullValue = {};\n                this._undefinedValue = {};\n            },\n            register: function (seriesTypes, valueFields, otherFields) {\n                var this$1 = this;\n                if (valueFields === void 0) {\n                    valueFields = [VALUE];\n                }\n                if (otherFields === void 0) {\n                    otherFields = {};\n                }\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    var type = seriesTypes[i];\n                    this$1._valueFields[type] = valueFields;\n                    this$1._otherFields[type] = otherFields;\n                    this$1._nullValue[type] = this$1._makeValue(valueFields, null);\n                    this$1._undefinedValue[type] = this$1._makeValue(valueFields, undefined);\n                }\n            },\n            canonicalFields: function (series) {\n                return this.valueFields(series).concat(this.otherFields(series));\n            },\n            valueFields: function (series) {\n                return this._valueFields[series.type] || [VALUE];\n            },\n            otherFields: function (series) {\n                return this._otherFields[series.type] || [VALUE];\n            },\n            bindPoint: function (series, pointIx, item) {\n                var data = series.data;\n                var pointData = defined(item) ? item : data[pointIx];\n                var result = { valueFields: { value: pointData } };\n                var valueFields = this.valueFields(series);\n                var otherFields = this._otherFields[series.type];\n                var fields, value;\n                if (pointData === null) {\n                    value = this._nullValue[series.type];\n                } else if (!defined(pointData)) {\n                    value = this._undefinedValue[series.type];\n                } else if (Array.isArray(pointData)) {\n                    var fieldData = pointData.slice(valueFields.length);\n                    value = this._bindFromArray(pointData, valueFields);\n                    fields = this._bindFromArray(fieldData, otherFields);\n                } else if (typeof pointData === 'object') {\n                    var srcValueFields = this.sourceFields(series, valueFields);\n                    var srcPointFields = this.sourceFields(series, otherFields);\n                    value = this._bindFromObject(pointData, valueFields, srcValueFields);\n                    fields = this._bindFromObject(pointData, otherFields, srcPointFields);\n                }\n                if (defined(value)) {\n                    if (valueFields.length === 1) {\n                        result.valueFields.value = value[valueFields[0]];\n                    } else {\n                        result.valueFields = value;\n                    }\n                }\n                result.fields = fields || {};\n                return result;\n            },\n            _makeValue: function (fields, initialValue) {\n                var value = {};\n                var length = fields.length;\n                for (var i = 0; i < length; i++) {\n                    var fieldName = fields[i];\n                    value[fieldName] = initialValue;\n                }\n                return value;\n            },\n            _bindFromArray: function (array, fields) {\n                var value = {};\n                if (fields) {\n                    var length = Math.min(fields.length, array.length);\n                    for (var i = 0; i < length; i++) {\n                        value[fields[i]] = array[i];\n                    }\n                }\n                return value;\n            },\n            _bindFromObject: function (object, fields, srcFields) {\n                if (srcFields === void 0) {\n                    srcFields = fields;\n                }\n                var value = {};\n                if (fields) {\n                    var length = fields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = fields[i];\n                        var srcFieldName = srcFields[i];\n                        if (srcFieldName !== null) {\n                            value[fieldName] = getField(srcFieldName, object);\n                        }\n                    }\n                }\n                return value;\n            },\n            sourceFields: function (series, canonicalFields) {\n                var sourceFields = [];\n                if (canonicalFields) {\n                    var length = canonicalFields.length;\n                    for (var i = 0; i < length; i++) {\n                        var fieldName = canonicalFields[i];\n                        var sourceFieldName = fieldName === VALUE ? 'field' : fieldName + 'Field';\n                        sourceFields.push(series[sourceFieldName] !== null ? series[sourceFieldName] || fieldName : null);\n                    }\n                }\n                return sourceFields;\n            }\n        });\n        SeriesBinder.current = new SeriesBinder();\n        var STD_ERR = 'stderr';\n        var STD_DEV = 'stddev';\n        var percentRegex = /percent(?:\\w*)\\((\\d+)\\)/;\n        var standardDeviationRegex = new RegExp('^' + STD_DEV + '(?:\\\\((\\\\d+(?:\\\\.\\\\d+)?)\\\\))?$');\n        var ErrorRangeCalculator = Class.extend({\n            init: function (errorValue, series, field) {\n                this.initGlobalRanges(errorValue, series, field);\n            },\n            initGlobalRanges: function (errorValue, series, field) {\n                var data = series.data;\n                var deviationMatch = standardDeviationRegex.exec(errorValue);\n                if (deviationMatch) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var average = this.getAverage(data);\n                    var deviation = this.getStandardDeviation(data, average, false);\n                    var multiple = deviationMatch[1] ? parseFloat(deviationMatch[1]) : 1;\n                    var errorRange = {\n                        low: average.value - deviation * multiple,\n                        high: average.value + deviation * multiple\n                    };\n                    this.globalRange = function () {\n                        return errorRange;\n                    };\n                } else if (errorValue.indexOf && errorValue.indexOf(STD_ERR) >= 0) {\n                    this.valueGetter = this.createValueGetter(series, field);\n                    var standardError = this.getStandardError(data, this.getAverage(data));\n                    this.globalRange = function (value) {\n                        return {\n                            low: value - standardError,\n                            high: value + standardError\n                        };\n                    };\n                }\n            },\n            createValueGetter: function (series, field) {\n                var data = series.data;\n                var binder = SeriesBinder.current;\n                var valueFields = binder.valueFields(series);\n                var item = defined(data[0]) ? data[0] : {};\n                var valueGetter;\n                if (isArray(item)) {\n                    var index = field ? valueFields.indexOf(field) : 0;\n                    valueGetter = getter('[' + index + ']');\n                } else if (isNumber(item)) {\n                    valueGetter = getter();\n                } else if (typeof item === datavizConstants.OBJECT) {\n                    var srcValueFields = binder.sourceFields(series, valueFields);\n                    valueGetter = getter(srcValueFields[valueFields.indexOf(field)]);\n                }\n                return valueGetter;\n            },\n            getErrorRange: function (pointValue, errorValue) {\n                var low, high, value;\n                if (!defined(errorValue)) {\n                    return null;\n                }\n                if (this.globalRange) {\n                    return this.globalRange(pointValue);\n                }\n                if (isArray(errorValue)) {\n                    low = pointValue - errorValue[0];\n                    high = pointValue + errorValue[1];\n                } else if (isNumber(value = parseFloat(errorValue))) {\n                    low = pointValue - value;\n                    high = pointValue + value;\n                } else if (value = percentRegex.exec(errorValue)) {\n                    var percentValue = pointValue * (parseFloat(value[1]) / 100);\n                    low = pointValue - Math.abs(percentValue);\n                    high = pointValue + Math.abs(percentValue);\n                } else {\n                    throw new Error('Invalid ErrorBar value: ' + errorValue);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            getStandardError: function (data, average) {\n                return this.getStandardDeviation(data, average, true) / Math.sqrt(average.count);\n            },\n            getStandardDeviation: function (data, average, isSample) {\n                var this$1 = this;\n                var length = data.length;\n                var total = isSample ? average.count - 1 : average.count;\n                var squareDifferenceSum = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        squareDifferenceSum += Math.pow(value - average.value, 2);\n                    }\n                }\n                return Math.sqrt(squareDifferenceSum / total);\n            },\n            getAverage: function (data) {\n                var this$1 = this;\n                var length = data.length;\n                var sum = 0;\n                var count = 0;\n                for (var idx = 0; idx < length; idx++) {\n                    var value = this$1.valueGetter(data[idx]);\n                    if (isNumber(value)) {\n                        sum += value;\n                        count++;\n                    }\n                }\n                return {\n                    value: sum / count,\n                    count: count\n                };\n            }\n        });\n        var browser = support.browser || {};\n        var INITIAL_ANIMATION_DURATION = 600;\n        var FADEIN = 'fadeIn';\n        var GLASS = 'glass';\n        var BORDER_BRIGHTNESS = 0.8;\n        var TOOLTIP_OFFSET = 5;\n        var START_SCALE = browser.msie ? 0.001 : 0;\n        var ERROR_LOW_FIELD = 'errorLow';\n        var ERROR_HIGH_FIELD = 'errorHigh';\n        var X_ERROR_LOW_FIELD = 'xErrorLow';\n        var X_ERROR_HIGH_FIELD = 'xErrorHigh';\n        var Y_ERROR_LOW_FIELD = 'yErrorLow';\n        var Y_ERROR_HIGH_FIELD = 'yErrorHigh';\n        var LINE_MARKER_SIZE = 8;\n        var ZERO = 'zero';\n        var INTERPOLATE = 'interpolate';\n        var GAP = 'gap';\n        var ABOVE = 'above';\n        var BELOW = 'below';\n        var SMOOTH = 'smooth';\n        var STEP = 'step';\n        var AREA = 'area';\n        var BAR = 'bar';\n        var BOX_PLOT = 'boxPlot';\n        var BUBBLE = 'bubble';\n        var BULLET = 'bullet';\n        var CANDLESTICK = 'candlestick';\n        var COLUMN = 'column';\n        var DONUT = 'donut';\n        var FUNNEL = 'funnel';\n        var HORIZONTAL_WATERFALL = 'horizontalWaterfall';\n        var LINE = 'line';\n        var OHLC = 'ohlc';\n        var PIE = 'pie';\n        var POLAR_AREA = 'polarArea';\n        var POLAR_LINE = 'polarLine';\n        var POLAR_SCATTER = 'polarScatter';\n        var RADAR_AREA = 'radarArea';\n        var RADAR_COLUMN = 'radarColumn';\n        var RADAR_LINE = 'radarLine';\n        var RANGE_AREA = 'rangeArea';\n        var RANGE_BAR = 'rangeBar';\n        var RANGE_COLUMN = 'rangeColumn';\n        var SCATTER = 'scatter';\n        var SCATTER_LINE = 'scatterLine';\n        var VERTICAL_AREA = 'verticalArea';\n        var VERTICAL_BOX_PLOT = 'verticalBoxPlot';\n        var VERTICAL_BULLET = 'verticalBullet';\n        var VERTICAL_LINE = 'verticalLine';\n        var VERTICAL_RANGE_AREA = 'verticalRangeArea';\n        var WATERFALL = 'waterfall';\n        var EQUALLY_SPACED_SERIES = [\n            BAR,\n            COLUMN,\n            OHLC,\n            CANDLESTICK,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            BULLET,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ];\n        var LEGEND_ITEM_CLICK = 'legendItemClick';\n        var LEGEND_ITEM_HOVER = 'legendItemHover';\n        var LEGEND_ITEM_LEAVE = 'legendItemLeave';\n        var SERIES_CLICK = 'seriesClick';\n        var SERIES_HOVER = 'seriesHover';\n        var SERIES_OVER = 'seriesOver';\n        var SERIES_LEAVE = 'seriesLeave';\n        var PLOT_AREA_CLICK = 'plotAreaClick';\n        var PLOT_AREA_HOVER = 'plotAreaHover';\n        var PLOT_AREA_LEAVE = 'plotAreaLeave';\n        var DRAG = 'drag';\n        var DRAG_END = 'dragEnd';\n        var DRAG_START = 'dragStart';\n        var ZOOM_START = 'zoomStart';\n        var ZOOM = 'zoom';\n        var ZOOM_END = 'zoomEnd';\n        var SELECT_START = 'selectStart';\n        var SELECT = 'select';\n        var SELECT_END = 'selectEnd';\n        var RENDER = 'render';\n        var SHOW_TOOLTIP = 'showTooltip';\n        var HIDE_TOOLTIP = 'hideTooltip';\n        var PANE_RENDER = 'paneRender';\n        var LOGARITHMIC = 'log';\n        var CATEGORY = 'category';\n        var INSIDE_END = 'insideEnd';\n        var INSIDE_BASE = 'insideBase';\n        var OUTSIDE_END = 'outsideEnd';\n        var MOUSEWHEEL = 'DOMMouseScroll mousewheel';\n        var MOUSEWHEEL_DELAY = 150;\n        var constants = {\n            INITIAL_ANIMATION_DURATION: INITIAL_ANIMATION_DURATION,\n            FADEIN: FADEIN,\n            LEGEND_ITEM_CLICK: LEGEND_ITEM_CLICK,\n            LEGEND_ITEM_HOVER: LEGEND_ITEM_HOVER,\n            LEGEND_ITEM_LEAVE: LEGEND_ITEM_LEAVE,\n            SERIES_CLICK: SERIES_CLICK,\n            SERIES_HOVER: SERIES_HOVER,\n            SERIES_OVER: SERIES_OVER,\n            SERIES_LEAVE: SERIES_LEAVE,\n            GLASS: GLASS,\n            BORDER_BRIGHTNESS: BORDER_BRIGHTNESS,\n            TOOLTIP_OFFSET: TOOLTIP_OFFSET,\n            START_SCALE: START_SCALE,\n            ERROR_LOW_FIELD: ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD: ERROR_HIGH_FIELD,\n            X_ERROR_LOW_FIELD: X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD: X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD: Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD: Y_ERROR_HIGH_FIELD,\n            LINE_MARKER_SIZE: LINE_MARKER_SIZE,\n            INTERPOLATE: INTERPOLATE,\n            ZERO: ZERO,\n            SMOOTH: SMOOTH,\n            STEP: STEP,\n            CATEGORY: CATEGORY,\n            FUNNEL: FUNNEL,\n            BAR: BAR,\n            CANDLESTICK: CANDLESTICK,\n            PIE: PIE,\n            COLUMN: COLUMN,\n            AREA: AREA,\n            VERTICAL_BULLET: VERTICAL_BULLET,\n            BOX_PLOT: BOX_PLOT,\n            OHLC: OHLC,\n            WATERFALL: WATERFALL,\n            LINE: LINE,\n            BULLET: BULLET,\n            VERTICAL_LINE: VERTICAL_LINE,\n            VERTICAL_AREA: VERTICAL_AREA,\n            RANGE_AREA: RANGE_AREA,\n            VERTICAL_RANGE_AREA: VERTICAL_RANGE_AREA,\n            RANGE_COLUMN: RANGE_COLUMN,\n            VERTICAL_BOX_PLOT: VERTICAL_BOX_PLOT,\n            RANGE_BAR: RANGE_BAR,\n            HORIZONTAL_WATERFALL: HORIZONTAL_WATERFALL,\n            SCATTER: SCATTER,\n            SCATTER_LINE: SCATTER_LINE,\n            BUBBLE: BUBBLE,\n            RADAR_AREA: RADAR_AREA,\n            RADAR_LINE: RADAR_LINE,\n            RADAR_COLUMN: RADAR_COLUMN,\n            POLAR_LINE: POLAR_LINE,\n            POLAR_AREA: POLAR_AREA,\n            POLAR_SCATTER: POLAR_SCATTER,\n            RENDER: RENDER,\n            PLOT_AREA_CLICK: PLOT_AREA_CLICK,\n            PLOT_AREA_HOVER: PLOT_AREA_HOVER,\n            PLOT_AREA_LEAVE: PLOT_AREA_LEAVE,\n            LOGARITHMIC: LOGARITHMIC,\n            DRAG: DRAG,\n            DRAG_START: DRAG_START,\n            DRAG_END: DRAG_END,\n            ZOOM_START: ZOOM_START,\n            ZOOM: ZOOM,\n            ZOOM_END: ZOOM_END,\n            SELECT_START: SELECT_START,\n            SELECT: SELECT,\n            SELECT_END: SELECT_END,\n            PANE_RENDER: PANE_RENDER,\n            GAP: GAP,\n            DONUT: DONUT,\n            INSIDE_END: INSIDE_END,\n            INSIDE_BASE: INSIDE_BASE,\n            OUTSIDE_END: OUTSIDE_END,\n            MOUSEWHEEL: MOUSEWHEEL,\n            MOUSEWHEEL_DELAY: MOUSEWHEEL_DELAY,\n            SHOW_TOOLTIP: SHOW_TOOLTIP,\n            HIDE_TOOLTIP: HIDE_TOOLTIP,\n            EQUALLY_SPACED_SERIES: EQUALLY_SPACED_SERIES,\n            ABOVE: ABOVE,\n            BELOW: BELOW\n        };\n        var DEFAULT_ERROR_BAR_WIDTH = 4;\n        var ErrorBarBase = ChartElement.extend({\n            init: function (low, high, isVertical, chart, series, options) {\n                ChartElement.fn.init.call(this, options);\n                this.low = low;\n                this.high = high;\n                this.isVertical = isVertical;\n                this.chart = chart;\n                this.series = series;\n            },\n            reflow: function (targetBox) {\n                var endCaps = this.options.endCaps;\n                var isVertical = this.isVertical;\n                var axis = this.getAxis();\n                var valueBox = axis.getSlot(this.low, this.high);\n                var centerBox = targetBox.center();\n                var capsWidth = this.getCapsWidth(targetBox, isVertical);\n                var capValue = isVertical ? centerBox.x : centerBox.y;\n                var capStart = capValue - capsWidth;\n                var capEnd = capValue + capsWidth;\n                var linePoints;\n                if (isVertical) {\n                    linePoints = [\n                        new Point(centerBox.x, valueBox.y1),\n                        new Point(centerBox.x, valueBox.y2)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(capStart, valueBox.y1), new Point(capEnd, valueBox.y1), new Point(capStart, valueBox.y2), new Point(capEnd, valueBox.y2));\n                    }\n                    this.box = new Box(capStart, valueBox.y1, capEnd, valueBox.y2);\n                } else {\n                    linePoints = [\n                        new Point(valueBox.x1, centerBox.y),\n                        new Point(valueBox.x2, centerBox.y)\n                    ];\n                    if (endCaps) {\n                        linePoints.push(new Point(valueBox.x1, capStart), new Point(valueBox.x1, capEnd), new Point(valueBox.x2, capStart), new Point(valueBox.x2, capEnd));\n                    }\n                    this.box = new Box(valueBox.x1, capStart, valueBox.x2, capEnd);\n                }\n                this.linePoints = linePoints;\n            },\n            getCapsWidth: function (box, isVertical) {\n                var boxSize = isVertical ? box.width() : box.height();\n                var capsWidth = Math.min(Math.floor(boxSize / 2), DEFAULT_ERROR_BAR_WIDTH) || DEFAULT_ERROR_BAR_WIDTH;\n                return capsWidth;\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual = options.visual;\n                if (visual) {\n                    this.visual = visual({\n                        low: this.low,\n                        high: this.high,\n                        rect: this.box.toRect(),\n                        sender: this.getSender(),\n                        options: {\n                            endCaps: options.endCaps,\n                            color: options.color,\n                            line: options.line\n                        },\n                        createVisual: function () {\n                            this$1.createDefaultVisual();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                } else {\n                    this.createDefaultVisual();\n                }\n            },\n            createDefaultVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var linePoints = ref.linePoints;\n                var lineOptions = {\n                    stroke: {\n                        color: options.color,\n                        width: options.line.width,\n                        dashType: options.line.dashType\n                    }\n                };\n                ChartElement.fn.createVisual.call(this);\n                for (var idx = 0; idx < linePoints.length; idx += 2) {\n                    var line = new Path(lineOptions).moveTo(linePoints[idx].x, linePoints[idx].y).lineTo(linePoints[idx + 1].x, linePoints[idx + 1].y);\n                    alignPathToPixel(line);\n                    this$1.visual.append(line);\n                }\n            }\n        });\n        setDefaultOptions(ErrorBarBase, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            endCaps: true,\n            line: { width: 2 },\n            zIndex: 1\n        });\n        var CategoricalErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axis = this.chart.seriesValueAxis(this.series);\n                return axis;\n            }\n        });\n        var MAX_EXPAND_DEPTH = 5;\n        function evalOptions(options, context, state, dryRun) {\n            if (state === void 0) {\n                state = {};\n            }\n            if (dryRun === void 0) {\n                dryRun = false;\n            }\n            var defaults = state.defaults = state.defaults || {};\n            var depth = state.depth = state.depth || 0;\n            var needsEval = false;\n            state.excluded = state.excluded || [];\n            if (depth > MAX_EXPAND_DEPTH) {\n                return null;\n            }\n            for (var property in options) {\n                if (!inArray(property, state.excluded) && options.hasOwnProperty(property)) {\n                    var propValue = options[property];\n                    if (isFunction(propValue)) {\n                        needsEval = true;\n                        if (!dryRun) {\n                            options[property] = valueOrDefault(propValue(context), defaults[property]);\n                        }\n                    } else if (isObject(propValue)) {\n                        if (!dryRun) {\n                            state.defaults = defaults[property];\n                        }\n                        state.depth++;\n                        needsEval = evalOptions(propValue, context, state, dryRun) || needsEval;\n                        state.depth--;\n                    }\n                }\n            }\n            return needsEval;\n        }\n        function categoriesCount(series) {\n            var seriesCount = series.length;\n            var categories = 0;\n            for (var i = 0; i < seriesCount; i++) {\n                categories = Math.max(categories, series[i].data.length);\n            }\n            return categories;\n        }\n        var CategoricalChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.categoryAxis = plotArea.seriesCategoryAxis(options.series[0]);\n                this.valueAxisRanges = {};\n                this.points = [];\n                this.categoryPoints = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, { vertical: !this.options.invertAxes }, series);\n                }\n                return options;\n            },\n            plotValue: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                if (this.options.isStacked100 && isNumber(point.value)) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    var otherValues = [];\n                    var categorySum = 0;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (other) {\n                            var stack = point.series.stack;\n                            var otherStack = other.series.stack;\n                            if (stack && otherStack && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                            if (isNumber(other.value)) {\n                                categorySum += Math.abs(other.value);\n                                otherValues.push(Math.abs(other.value));\n                            }\n                        }\n                    }\n                    if (categorySum > 0) {\n                        return point.value / categorySum;\n                    }\n                }\n                return point.value;\n            },\n            plotRange: function (point, startValue) {\n                var this$1 = this;\n                if (startValue === void 0) {\n                    startValue = 0;\n                }\n                var categoryPoints = this.categoryPoints[point.categoryIx];\n                if (this.options.isStacked) {\n                    var plotValue = this.plotValue(point);\n                    var positive = plotValue >= 0;\n                    var prevValue = startValue;\n                    var isStackedBar = false;\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        var stack = point.series.stack;\n                        var otherStack = other.series.stack;\n                        if (stack && otherStack) {\n                            if (typeof stack === datavizConstants.STRING && stack !== otherStack) {\n                                continue;\n                            }\n                            if (stack.group && stack.group !== otherStack.group) {\n                                continue;\n                            }\n                        }\n                        var otherValue = this$1.plotValue(other);\n                        if (otherValue >= 0 && positive || otherValue < 0 && !positive) {\n                            prevValue += otherValue;\n                            plotValue += otherValue;\n                            isStackedBar = true;\n                            if (this$1.options.isStacked100) {\n                                plotValue = Math.min(plotValue, 1);\n                            }\n                        }\n                    }\n                    if (isStackedBar) {\n                        prevValue -= startValue;\n                    }\n                    return [\n                        prevValue,\n                        plotValue\n                    ];\n                }\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    dataviz.convertableToNumber(point.value) ? point.value : axisCrossingValue\n                ];\n            },\n            stackLimits: function (axisName, stackName) {\n                var this$1 = this;\n                var min = MAX_VALUE;\n                var max = MIN_VALUE;\n                for (var i = 0; i < this.categoryPoints.length; i++) {\n                    var categoryPoints = this$1.categoryPoints[i];\n                    if (!categoryPoints) {\n                        continue;\n                    }\n                    for (var pIx = 0; pIx < categoryPoints.length; pIx++) {\n                        var point = categoryPoints[pIx];\n                        if (point) {\n                            if (point.series.stack === stackName || point.series.axis === axisName) {\n                                var to = this$1.plotRange(point, 0)[1];\n                                if (defined(to) && isFinite(to)) {\n                                    max = Math.max(max, to);\n                                    min = Math.min(min, to);\n                                }\n                            }\n                        }\n                    }\n                }\n                return {\n                    min: min,\n                    max: max\n                };\n            },\n            updateStackRange: function () {\n                var this$1 = this;\n                var ref = this.options;\n                var isStacked = ref.isStacked;\n                var chartSeries = ref.series;\n                var limitsCache = {};\n                if (isStacked) {\n                    for (var i = 0; i < chartSeries.length; i++) {\n                        var series = chartSeries[i];\n                        var axisName = series.axis;\n                        var key = axisName + series.stack;\n                        var limits = limitsCache[key];\n                        if (!limits) {\n                            limits = this$1.stackLimits(axisName, series.stack);\n                            var errorTotals = this$1.errorTotals;\n                            if (errorTotals) {\n                                if (errorTotals.negative.length) {\n                                    limits.min = Math.min(limits.min, dataviz.sparseArrayLimits(errorTotals.negative).min);\n                                }\n                                if (errorTotals.positive.length) {\n                                    limits.max = Math.max(limits.max, dataviz.sparseArrayLimits(errorTotals.positive).max);\n                                }\n                            }\n                            if (limits.min !== MAX_VALUE || limits.max !== MIN_VALUE) {\n                                limitsCache[key] = limits;\n                            } else {\n                                limits = null;\n                            }\n                        }\n                        if (limits) {\n                            this$1.valueAxisRanges[axisName] = limits;\n                        }\n                    }\n                }\n            },\n            addErrorBar: function (point, data, categoryIx) {\n                var value = point.value;\n                var series = point.series;\n                var seriesIx = point.seriesIx;\n                var errorBars = point.options.errorBars;\n                var lowValue = data.fields[ERROR_LOW_FIELD];\n                var highValue = data.fields[ERROR_HIGH_FIELD];\n                var errorRange;\n                if (isNumber(lowValue) && isNumber(highValue)) {\n                    errorRange = {\n                        low: lowValue,\n                        high: highValue\n                    };\n                } else if (errorBars && defined(errorBars.value)) {\n                    this.seriesErrorRanges = this.seriesErrorRanges || [];\n                    this.seriesErrorRanges[seriesIx] = this.seriesErrorRanges[seriesIx] || new ErrorRangeCalculator(errorBars.value, series, VALUE);\n                    errorRange = this.seriesErrorRanges[seriesIx].getErrorRange(value, errorBars.value);\n                }\n                if (errorRange) {\n                    point.low = errorRange.low;\n                    point.high = errorRange.high;\n                    this.addPointErrorBar(point, categoryIx);\n                }\n            },\n            addPointErrorBar: function (point, categoryIx) {\n                var isVertical = !this.options.invertAxes;\n                var options = point.options.errorBars;\n                var series = point.series;\n                var low = point.low;\n                var high = point.high;\n                if (this.options.isStacked) {\n                    var stackedErrorRange = this.stackedErrorRange(point, categoryIx);\n                    low = stackedErrorRange.low;\n                    high = stackedErrorRange.high;\n                } else {\n                    var fields = {\n                        categoryIx: categoryIx,\n                        series: series\n                    };\n                    this.updateRange({ value: low }, fields);\n                    this.updateRange({ value: high }, fields);\n                }\n                var errorBar = new CategoricalErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars = [errorBar];\n                point.append(errorBar);\n            },\n            stackedErrorRange: function (point, categoryIx) {\n                var plotValue = this.plotRange(point, 0)[1] - point.value;\n                var low = point.low + plotValue;\n                var high = point.high + plotValue;\n                this.errorTotals = this.errorTotals || {\n                    positive: [],\n                    negative: []\n                };\n                if (low < 0) {\n                    this.errorTotals.negative[categoryIx] = Math.min(this.errorTotals.negative[categoryIx] || 0, low);\n                }\n                if (high > 0) {\n                    this.errorTotals.positive[categoryIx] = Math.max(this.errorTotals.positive[categoryIx] || 0, high);\n                }\n                return {\n                    low: low,\n                    high: high\n                };\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var categoryPoints = this.categoryPoints[categoryIx];\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                var seriesPoints = this.seriesPoints[seriesIx];\n                if (!seriesPoints) {\n                    this.seriesPoints[seriesIx] = seriesPoints = [];\n                }\n                var point = this.createPoint(data, fields);\n                if (point) {\n                    $.extend(point, fields);\n                    point.owner = this;\n                    point.noteText = data.fields.noteText;\n                    if (!defined(point.dataItem)) {\n                        point.dataItem = series.data[categoryIx];\n                    }\n                    this.addErrorBar(point, data, categoryIx);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n                categoryPoints.push(point);\n                this.updateRange(data.valueFields, fields);\n            },\n            evalPointOptions: function (options, value, category, categoryIx, series, seriesIx) {\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'aggregate',\n                        '_events',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, pointOptions);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        category: category,\n                        index: categoryIx,\n                        series: series,\n                        dataItem: series.data[categoryIx]\n                    }, state);\n                }\n                return pointOptions;\n            },\n            updateRange: function (data, fields) {\n                var axisName = fields.series.axis;\n                var value = data.value;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (isFinite(value) && value !== null) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, value);\n                    axisRange.max = Math.max(axisRange.max, value);\n                }\n            },\n            seriesValueAxis: function (series) {\n                var plotArea = this.plotArea;\n                var axisName = series.axis;\n                var axis = axisName ? plotArea.namedValueAxes[axisName] : plotArea.valueAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate value axis with name ' + axisName);\n                }\n                return axis;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var categorySlots = this.categorySlots = [];\n                var chartPoints = this.points;\n                var categoryAxis = this.categoryAxis;\n                var pointIx = 0;\n                this.traverseDataPoints(function (data, fields) {\n                    var categoryIx = fields.categoryIx;\n                    var currentSeries = fields.series;\n                    var valueAxis = this$1.seriesValueAxis(currentSeries);\n                    var point = chartPoints[pointIx++];\n                    var categorySlot = categorySlots[categoryIx];\n                    if (!categorySlot) {\n                        categorySlots[categoryIx] = categorySlot = this$1.categorySlot(categoryAxis, categoryIx, valueAxis);\n                    }\n                    if (point) {\n                        var plotRange = this$1.plotRange(point, valueAxis.startValue());\n                        var valueSlot = this$1.valueSlot(valueAxis, plotRange);\n                        if (valueSlot) {\n                            var pointSlot = this$1.pointSlot(categorySlot, valueSlot);\n                            point.aboveAxis = this$1.aboveAxis(point, valueAxis);\n                            point.stackValue = plotRange[1];\n                            if (this$1.options.isStacked100) {\n                                point.percentage = this$1.plotValue(point);\n                            }\n                            this$1.reflowPoint(point, pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.reflowCategories(categorySlots);\n                if (!this.options.clip && this.options.limitPoints && this.points.length) {\n                    this.limitPoints();\n                }\n                this.box = targetBox;\n            },\n            valueSlot: function (valueAxis, plotRange) {\n                return valueAxis.getSlot(plotRange[0], plotRange[1], !this.options.clip);\n            },\n            limitPoints: function () {\n                var this$1 = this;\n                var categoryPoints = this.categoryPoints;\n                var points = categoryPoints[0].concat(last(categoryPoints));\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx]) {\n                        this$1.limitPoint(points[idx]);\n                    }\n                }\n            },\n            limitPoint: function (point) {\n                var limittedSlot = this.categoryAxis.limitSlot(point.box);\n                if (!limittedSlot.equals(point.box)) {\n                    point.reflow(limittedSlot);\n                }\n            },\n            aboveAxis: function (point, valueAxis) {\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                var value = point.value;\n                return valueAxis.options.reverse ? value < axisCrossingValue : value >= axisCrossingValue;\n            },\n            categoryAxisCrossingValue: function (valueAxis) {\n                var categoryAxis = this.categoryAxis;\n                var options = valueAxis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                return crossingValues[categoryAxis.axisIndex || 0] || 0;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.reflow(pointSlot);\n            },\n            reflowCategories: function () {\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var options = this.options;\n                var invertAxes = options.invertAxes;\n                var slotX = invertAxes ? valueSlot : categorySlot;\n                var slotY = invertAxes ? categorySlot : valueSlot;\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var series = this.options.series;\n                var count = categoriesCount(series);\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    this$1._outOfRangeCallback(series[seriesIx], '_outOfRangeMinPoint', seriesIx, callback);\n                }\n                for (var categoryIx = 0; categoryIx < count; categoryIx++) {\n                    for (var seriesIx$1 = 0; seriesIx$1 < seriesCount; seriesIx$1++) {\n                        var currentSeries = series[seriesIx$1];\n                        var currentCategory = this$1.categoryAxis.categoryAt(categoryIx);\n                        var pointData = this$1._bindPoint(currentSeries, seriesIx$1, categoryIx);\n                        callback(pointData, {\n                            category: currentCategory,\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx$1\n                        });\n                    }\n                }\n                for (var seriesIx$2 = 0; seriesIx$2 < seriesCount; seriesIx$2++) {\n                    this$1._outOfRangeCallback(series[seriesIx$2], '_outOfRangeMaxPoint', seriesIx$2, callback);\n                }\n            },\n            _outOfRangeCallback: function (series, field, seriesIx, callback) {\n                var outOfRangePoint = series[field];\n                if (outOfRangePoint) {\n                    var categoryIx = outOfRangePoint.categoryIx;\n                    var pointData = this._bindPoint(series, seriesIx, categoryIx, outOfRangePoint.item);\n                    callback(pointData, {\n                        category: outOfRangePoint.category,\n                        categoryIx: categoryIx,\n                        series: series,\n                        seriesIx: seriesIx,\n                        dataItem: outOfRangePoint.item\n                    });\n                }\n            },\n            _bindPoint: function (series, seriesIx, categoryIx, item) {\n                if (!this._bindCache) {\n                    this._bindCache = [];\n                }\n                var bindCache = this._bindCache[seriesIx];\n                if (!bindCache) {\n                    bindCache = this._bindCache[seriesIx] = [];\n                }\n                var data = bindCache[categoryIx];\n                if (!data) {\n                    data = bindCache[categoryIx] = SeriesBinder.current.bindPoint(series, categoryIx, item);\n                }\n                return data;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value);\n            },\n            pointValue: function (data) {\n                return data.valueFields.value;\n            }\n        });\n        setDefaultOptions(CategoricalChart, {\n            series: [],\n            invertAxes: false,\n            isStacked: false,\n            clip: true,\n            limitPoints: true\n        });\n        var PointEventsMixin = {\n            click: function (chart, e) {\n                return chart.trigger(SERIES_CLICK, this.eventArgs(e));\n            },\n            hover: function (chart, e) {\n                return chart.trigger(SERIES_HOVER, this.eventArgs(e));\n            },\n            over: function (chart, e) {\n                return chart.trigger(SERIES_OVER, this.eventArgs(e));\n            },\n            out: function (chart, e) {\n                return chart.trigger(SERIES_LEAVE, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                return {\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    category: this.category,\n                    series: this.series,\n                    dataItem: this.dataItem,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    element: eventElement(e),\n                    originalEvent: e,\n                    point: this\n                };\n            }\n        };\n        var NoteMixin = {\n            createNote: function () {\n                var options = this.options.notes;\n                var text = this.noteText || options.label.text;\n                if (options.visible !== false && defined(text) && text !== null) {\n                    this.note = new dataviz.Note({\n                        value: this.value,\n                        text: text,\n                        dataItem: this.dataItem,\n                        category: this.category,\n                        series: this.series\n                    }, this.options.notes, this.owner.chartService);\n                    this.append(this.note);\n                }\n            }\n        };\n        var LinePoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.value = value;\n                this.options = options;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.tooltipTracking = true;\n            },\n            render: function () {\n                var ref = this.options;\n                var markers = ref.markers;\n                var labels = ref.labels;\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                if (markers.visible && markers.size) {\n                    this.marker = this.createMarker();\n                    this.append(this.marker);\n                }\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    var pointData = this.pointData();\n                    var labelText = this.value;\n                    if (labelTemplate) {\n                        labelText = labelTemplate(pointData);\n                    } else if (labels.format) {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new TextBox(labelText, deepExtend({\n                        align: CENTER,\n                        vAlign: CENTER,\n                        margin: {\n                            left: 5,\n                            right: 5\n                        },\n                        zIndex: valueOrDefault(labels.zIndex, this.series.zIndex)\n                    }, labels), pointData);\n                    this.append(this.label);\n                }\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            markerBorder: function () {\n                var options = this.options.markers;\n                var background = options.background;\n                var border = deepExtend({ color: this.color }, options.border);\n                if (!defined(border.color)) {\n                    border.color = new Color(background).brightness(BORDER_BRIGHTNESS).toHex();\n                }\n                return border;\n            },\n            createVisual: function () {\n            },\n            createMarker: function () {\n                var options = this.options.markers;\n                var marker = new ShapeElement({\n                    type: options.type,\n                    width: options.size,\n                    height: options.size,\n                    rotation: options.rotation,\n                    background: options.background,\n                    border: this.markerBorder(),\n                    opacity: options.opacity,\n                    zIndex: valueOrDefault(options.zIndex, this.series.zIndex),\n                    animation: options.animation,\n                    visual: options.visual\n                }, {\n                    dataItem: this.dataItem,\n                    value: this.value,\n                    series: this.series,\n                    category: this.category\n                });\n                return marker;\n            },\n            markerBox: function () {\n                if (!this.marker) {\n                    this.marker = this.createMarker();\n                    this.marker.reflow(this._childBox);\n                }\n                return this.marker.box;\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var aboveAxis = ref.aboveAxis;\n                var vertical = options.vertical;\n                this.render();\n                this.box = targetBox;\n                var childBox = targetBox.clone();\n                if (vertical) {\n                    if (aboveAxis) {\n                        childBox.y1 -= childBox.height();\n                    } else {\n                        childBox.y2 += childBox.height();\n                    }\n                } else {\n                    if (aboveAxis) {\n                        childBox.x1 += childBox.width();\n                    } else {\n                        childBox.x2 -= childBox.width();\n                    }\n                }\n                this._childBox = childBox;\n                if (this.marker) {\n                    this.marker.reflow(childBox);\n                }\n                this.reflowLabel(childBox);\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(childBox);\n                    }\n                }\n                if (this.note) {\n                    var noteTargetBox = this.markerBox();\n                    if (!(options.markers.visible && options.markers.size)) {\n                        var center = noteTargetBox.center();\n                        noteTargetBox = new Box(center.x, center.y, center.x, center.y);\n                    }\n                    this.note.reflow(noteTargetBox);\n                }\n            },\n            reflowLabel: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var label = ref.label;\n                var anchor = options.labels.position;\n                if (label) {\n                    anchor = anchor === ABOVE ? TOP : anchor;\n                    anchor = anchor === BELOW ? BOTTOM : anchor;\n                    label.reflow(box);\n                    label.box.alignTo(this.markerBox(), anchor);\n                    label.reflow(label.box);\n                }\n            },\n            createHighlight: function () {\n                var markers = this.options.highlight.markers;\n                var defaultColor = this.markerBorder().color;\n                var options = this.options.markers;\n                var size = options.size + (options.border.width || 0) + (markers.border.width || 0);\n                var shadow = new ShapeElement({\n                    type: options.type,\n                    width: size,\n                    height: size,\n                    rotation: options.rotation,\n                    background: markers.color || defaultColor,\n                    border: {\n                        color: markers.border.color,\n                        width: markers.border.width,\n                        opacity: valueOrDefault(markers.border.opacity, 1)\n                    },\n                    opacity: valueOrDefault(markers.opacity, 1)\n                });\n                shadow.reflow(this._childBox);\n                return shadow.getElement();\n            },\n            highlightVisual: function () {\n                return (this.marker || {}).visual;\n            },\n            highlightVisualArgs: function () {\n                var marker = this.marker;\n                var visual, rect;\n                if (marker) {\n                    rect = marker.paddingBox.toRect();\n                    visual = marker.visual;\n                } else {\n                    var size = this.options.markers.size;\n                    var halfSize = size / 2;\n                    var center = this.box.center();\n                    rect = new geometry.Rect([\n                        center.x - halfSize,\n                        center.y - halfSize\n                    ], [\n                        size,\n                        size\n                    ]);\n                }\n                return {\n                    options: this.options,\n                    rect: rect,\n                    visual: visual\n                };\n            },\n            tooltipAnchor: function () {\n                var markerBox = this.markerBox();\n                var clipBox = this.owner.pane.clipBox();\n                var showTooltip = !clipBox || clipBox.overlaps(markerBox);\n                if (showTooltip) {\n                    var x = markerBox.x2 + TOOLTIP_OFFSET;\n                    var horizontalAlign = LEFT;\n                    var y, verticalAlign;\n                    if (this.aboveAxis) {\n                        y = markerBox.y1;\n                        verticalAlign = BOTTOM;\n                    } else {\n                        y = markerBox.y2;\n                        verticalAlign = TOP;\n                    }\n                    return {\n                        point: new Point(x, y),\n                        align: {\n                            horizontal: horizontalAlign,\n                            vertical: verticalAlign\n                        }\n                    };\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                var markerBox = this.markerBox();\n                return markerBox.overlaps(box);\n            },\n            unclipElements: function () {\n                if (this.label) {\n                    this.label.options.noclip = true;\n                }\n                if (this.note) {\n                    this.note.options.noclip = true;\n                }\n            },\n            pointData: function () {\n                return {\n                    dataItem: this.dataItem,\n                    category: this.category,\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    series: this.series\n                };\n            }\n        });\n        LinePoint.prototype.defaults = {\n            vertical: true,\n            markers: {\n                visible: true,\n                background: WHITE,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                border: { width: 2 },\n                opacity: 1\n            },\n            labels: {\n                visible: false,\n                position: ABOVE,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                }\n            },\n            notes: { label: {} },\n            highlight: {\n                markers: {\n                    border: {\n                        color: '#fff',\n                        width: 2\n                    }\n                },\n                zIndex: datavizConstants.HIGHLIGHT_ZINDEX\n            },\n            errorBars: { line: { width: 1 } }\n        };\n        deepExtend(LinePoint.prototype, PointEventsMixin);\n        deepExtend(LinePoint.prototype, NoteMixin);\n        var LineSegment = ChartElement.extend({\n            init: function (linePoints, series, seriesIx) {\n                ChartElement.fn.init.call(this);\n                this.linePoints = linePoints;\n                this.series = series;\n                this.seriesIx = seriesIx;\n            },\n            points: function () {\n                return this.toGeometryPoints(this.linePoints);\n            },\n            toGeometryPoints: function (points) {\n                var result = [];\n                for (var i = 0, length = points.length; i < length; i++) {\n                    if (points[i] && points[i].visible !== false) {\n                        result.push(points[i]._childBox.toRect().center());\n                    }\n                }\n                return result;\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var customVisual = this.series.visual;\n                if (customVisual) {\n                    this.visual = customVisual({\n                        points: this.toGeometryPoints(this.linePoints),\n                        series: this.series,\n                        sender: this.getSender(),\n                        createVisual: function () {\n                            this$1.segmentVisual();\n                            return this$1.visual;\n                        }\n                    });\n                    if (this.visual && !defined(this.visual.options.zIndex)) {\n                        this.visual.options.zIndex = this.series.zIndex;\n                    }\n                } else {\n                    this.segmentVisual();\n                }\n            },\n            segmentVisual: function () {\n                var ref = this;\n                var options = ref.options;\n                var series = ref.series;\n                var color = series.color;\n                var defaults = series._defaults;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var line = Path.fromPoints(this.points(), {\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                if (options.closed) {\n                    line.close();\n                }\n                this.visual = line;\n            },\n            aliasFor: function (e, coords) {\n                return this.parent.getNearestPoint(coords.x, coords.y, this.seriesIx);\n            }\n        });\n        setDefaultOptions(LineSegment, { closed: false });\n        var StepLineMixin = {\n            calculateStepPoints: function (points) {\n                var categoryAxis = this.parent.plotArea.seriesCategoryAxis(this.series);\n                var ref = categoryAxis.options;\n                var justified = ref.justified;\n                var vertical = ref.vertical;\n                var reverse = ref.reverse;\n                var stepAxis = vertical ? X : Y;\n                var axis = vertical ? Y : X;\n                var stepDir = reverse ? 2 : 1;\n                var dir = stepDir;\n                var previousPoint = toGeometryPoint(points[0], stepAxis, stepDir, axis, dir);\n                var result = [previousPoint];\n                for (var idx = 1; idx < points.length; idx++) {\n                    var point = toGeometryPoint(points[idx], stepAxis, stepDir, axis, dir);\n                    if (previousPoint[stepAxis] !== point[stepAxis]) {\n                        var stepPoint = new GeometryPoint();\n                        stepPoint[stepAxis] = previousPoint[stepAxis];\n                        stepPoint[axis] = point[axis];\n                        result.push(stepPoint, point);\n                    }\n                    previousPoint = point;\n                }\n                if (!justified) {\n                    result.push(toGeometryPoint(last(points), stepAxis, stepDir, axis, reverse ? 1 : 2));\n                } else if (previousPoint !== last(result)) {\n                    result.push(previousPoint);\n                }\n                return result;\n            }\n        };\n        function toGeometryPoint(lintPoint, stepAxis, stepDir, axis, dir) {\n            var box = lintPoint.box;\n            var result = new GeometryPoint();\n            result[stepAxis] = box[stepAxis + stepDir];\n            result[axis] = box[axis + dir];\n            return result;\n        }\n        var StepLineSegment = LineSegment.extend({\n            points: function () {\n                return this.calculateStepPoints(this.linePoints);\n            }\n        });\n        deepExtend(StepLineSegment.prototype, StepLineMixin);\n        var SplineSegment = LineSegment.extend({\n            segmentVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                var curveProcessor = new CurveProcessor(this.options.closed);\n                var segments = curveProcessor.process(this.points());\n                var curve = new Path({\n                    stroke: {\n                        color: color,\n                        width: series.width,\n                        opacity: series.opacity,\n                        dashType: series.dashType\n                    },\n                    zIndex: series.zIndex\n                });\n                curve.segments.push.apply(curve.segments, segments);\n                this.visual = curve;\n            }\n        });\n        var LineChartMixin = {\n            renderSegments: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesPoints = ref.seriesPoints;\n                var series = options.series;\n                var seriesCount = seriesPoints.length;\n                var lastSegment;\n                this._segments = [];\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var sortedPoints = this$1.sortPoints(seriesPoints[seriesIx]);\n                    var pointCount = sortedPoints.length;\n                    var linePoints = [];\n                    for (var pointIx = 0; pointIx < pointCount; pointIx++) {\n                        var point = sortedPoints[pointIx];\n                        if (point) {\n                            linePoints.push(point);\n                        } else if (this$1.seriesMissingValues(currentSeries) !== INTERPOLATE) {\n                            if (linePoints.length > 1) {\n                                lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                                this$1._addSegment(lastSegment);\n                            }\n                            linePoints = [];\n                        }\n                    }\n                    if (linePoints.length > 1) {\n                        lastSegment = this$1.createSegment(linePoints, currentSeries, seriesIx, lastSegment);\n                        this$1._addSegment(lastSegment);\n                    }\n                }\n                this.children.unshift.apply(this.children, this._segments);\n            },\n            _addSegment: function (segment) {\n                this._segments.push(segment);\n                segment.parent = this;\n            },\n            sortPoints: function (points) {\n                return points;\n            },\n            seriesMissingValues: function (series) {\n                var missingValues = series.missingValues;\n                var assumeZero = !missingValues && this.options.isStacked;\n                return assumeZero ? ZERO : missingValues || INTERPOLATE;\n            },\n            getNearestPoint: function (x, y, seriesIx) {\n                var target = new Point(x, y);\n                var allPoints = this.seriesPoints[seriesIx];\n                var nearestPointDistance = MAX_VALUE;\n                var nearestPoint;\n                for (var i = 0; i < allPoints.length; i++) {\n                    var point = allPoints[i];\n                    if (point && defined(point.value) && point.value !== null && point.visible !== false) {\n                        var pointBox = point.box;\n                        var pointDistance = pointBox.center().distanceTo(target);\n                        if (pointDistance < nearestPointDistance) {\n                            nearestPoint = point;\n                            nearestPointDistance = pointDistance;\n                        }\n                    }\n                }\n                return nearestPoint;\n            }\n        };\n        var ClipAnimation = Animation.extend({\n            setup: function () {\n                this._setEnd(this.options.box.x1);\n            },\n            step: function (pos) {\n                var box = this.options.box;\n                this._setEnd(dataviz.interpolateValue(box.x1, box.x2, pos));\n            },\n            _setEnd: function (x) {\n                var element = this.element;\n                var segments = element.segments;\n                var topRight = segments[1].anchor();\n                var bottomRight = segments[2].anchor();\n                element.suspend();\n                topRight.setX(x);\n                element.resume();\n                bottomRight.setX(x);\n            }\n        });\n        setDefaultOptions(ClipAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register('clip', ClipAnimation);\n        function anyHasZIndex(elements) {\n            for (var idx = 0; idx < elements.length; idx++) {\n                if (defined(elements[idx].zIndex)) {\n                    return true;\n                }\n            }\n        }\n        var ClipAnimationMixin = {\n            createAnimation: function () {\n                var root = this.getRoot();\n                if (root && (root.options || {}).transitions !== false) {\n                    var box = root.size();\n                    var clipPath = Path.fromRect(box.toRect());\n                    this.visual.clip(clipPath);\n                    this.animation = new ClipAnimation(clipPath, { box: box });\n                    if (anyHasZIndex(this.options.series)) {\n                        this._setChildrenAnimation(clipPath);\n                    }\n                }\n            },\n            _setChildrenAnimation: function (clipPath) {\n                var points = this.animationPoints();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    if (point && point.visual && defined(point.visual.options.zIndex)) {\n                        point.visual.clip(clipPath);\n                    }\n                }\n            }\n        };\n        var LineChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n                this.renderSegments();\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var missingValues = this.seriesMissingValues(series);\n                var value = data.valueFields.value;\n                if (!defined(value) || value === null) {\n                    if (missingValues === ZERO) {\n                        value = 0;\n                    } else {\n                        return null;\n                    }\n                }\n                var pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            plotRange: function (point) {\n                var this$1 = this;\n                var plotValue = this.plotValue(point);\n                if (this.options.isStacked) {\n                    var categoryIx = point.categoryIx;\n                    var categoryPoints = this.categoryPoints[categoryIx];\n                    for (var i = 0; i < categoryPoints.length; i++) {\n                        var other = categoryPoints[i];\n                        if (point === other) {\n                            break;\n                        }\n                        plotValue += this$1.plotValue(other);\n                        if (this$1.options.isStacked100) {\n                            plotValue = Math.min(plotValue, 1);\n                        }\n                    }\n                }\n                return [\n                    plotValue,\n                    plotValue\n                ];\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepLineSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(LineChart.prototype, LineChartMixin, ClipAnimationMixin);\n        var AreaSegment = LineSegment.extend({\n            init: function (linePoints, currentSeries, seriesIx, prevSegment, stackPoints) {\n                LineSegment.fn.init.call(this, linePoints, currentSeries, seriesIx);\n                this.prevSegment = prevSegment;\n                this.stackPoints = stackPoints;\n            },\n            createVisual: function () {\n                var series = this.series;\n                var defaults = series._defaults;\n                var lineOptions = series.line || {};\n                var color = series.color;\n                if (isFunction(color) && defaults) {\n                    color = defaults.color;\n                }\n                this.visual = new Group({ zIndex: series.zIndex });\n                this.createFill({\n                    fill: {\n                        color: color,\n                        opacity: series.opacity\n                    },\n                    stroke: null\n                });\n                if (lineOptions.width > 0 && lineOptions.visible !== false) {\n                    this.createStroke({\n                        stroke: deepExtend({\n                            color: color,\n                            opacity: series.opacity,\n                            lineCap: 'butt'\n                        }, lineOptions)\n                    });\n                }\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    segments = this._strokeSegments = this.createStrokeSegments();\n                }\n                return segments;\n            },\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.points());\n            },\n            stackSegments: function () {\n                if (this.prevSegment) {\n                    return this.prevSegment.createStackSegments(this.stackPoints);\n                }\n                return this.createStackSegments(this.stackPoints);\n            },\n            createStackSegments: function (stackPoints) {\n                return this.segmentsFromPoints(this.toGeometryPoints(stackPoints)).reverse();\n            },\n            segmentsFromPoints: function (points) {\n                return points.map(function (point) {\n                    return new geometry.Segment(point);\n                });\n            },\n            createStroke: function (style) {\n                var stroke = new Path(style);\n                stroke.segments.push.apply(stroke.segments, this.strokeSegments());\n                this.visual.append(stroke);\n            },\n            hasStackSegment: function () {\n                return this.prevSegment || this.stackPoints && this.stackPoints.length;\n            },\n            createFill: function (style) {\n                var strokeSegments = this.strokeSegments();\n                var fillSegments = strokeSegments.slice(0);\n                var hasStackSegments = this.hasStackSegment();\n                if (hasStackSegments) {\n                    var stackSegments = this.stackSegments();\n                    append(fillSegments, stackSegments);\n                }\n                var fill = new Path(style);\n                fill.segments.push.apply(fill.segments, fillSegments);\n                if (!hasStackSegments && strokeSegments.length > 1) {\n                    this.fillToAxes(fill);\n                }\n                this.visual.append(fill);\n            },\n            fillToAxes: function (fillPath) {\n                var chart = this.parent;\n                var invertAxes = chart.options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.series);\n                var crossingValue = chart.categoryAxisCrossingValue(valueAxis);\n                var endSlot = valueAxis.getSlot(crossingValue, crossingValue, true);\n                var segments = this.strokeSegments();\n                var firstPoint = segments[0].anchor();\n                var lastPoint = last(segments).anchor();\n                var end = invertAxes ? endSlot.x1 : endSlot.y1;\n                if (invertAxes) {\n                    fillPath.lineTo(end, lastPoint.y).lineTo(end, firstPoint.y);\n                } else {\n                    fillPath.lineTo(lastPoint.x, end).lineTo(firstPoint.x, end);\n                }\n            }\n        });\n        var StepAreaSegment = AreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.calculateStepPoints(this.linePoints));\n            },\n            createStackSegments: function (stackPoints) {\n                return this.segmentsFromPoints(this.calculateStepPoints(stackPoints)).reverse();\n            }\n        });\n        deepExtend(StepAreaSegment.prototype, StepLineMixin);\n        var SplineAreaSegment = AreaSegment.extend({\n            createStrokeSegments: function () {\n                var curveProcessor = new CurveProcessor(this.options.closed);\n                var linePoints = this.points();\n                return curveProcessor.process(linePoints);\n            },\n            createStackSegments: function () {\n                var strokeSegments = this.strokeSegments();\n                var stackSegments = [];\n                for (var idx = strokeSegments.length - 1; idx >= 0; idx--) {\n                    var segment = strokeSegments[idx];\n                    stackSegments.push(new geometry.Segment(segment.anchor(), segment.controlOut(), segment.controlIn()));\n                }\n                return stackSegments;\n            }\n        });\n        var AreaChart = LineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var previousSegment;\n                var stackPoints;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    var missingValues = this.seriesMissingValues(currentSeries);\n                    if (missingValues !== 'gap') {\n                        stackPoints = prevSegment.linePoints;\n                        previousSegment = prevSegment;\n                    } else {\n                        stackPoints = this._gapStackPoints(linePoints, seriesIx, style);\n                    }\n                }\n                var pointType;\n                if (style === STEP) {\n                    pointType = StepAreaSegment;\n                } else if (style === SMOOTH) {\n                    pointType = SplineAreaSegment;\n                } else {\n                    pointType = AreaSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                LineChart.fn.reflow.call(this, targetBox);\n                var stackPoints = this._stackPoints;\n                if (stackPoints) {\n                    for (var idx = 0; idx < stackPoints.length; idx++) {\n                        var stackPoint = stackPoints[idx];\n                        var pointSlot = this$1.categoryAxis.getSlot(stackPoint.categoryIx);\n                        stackPoint.reflow(pointSlot);\n                    }\n                }\n            },\n            _gapStackPoints: function (linePoints, seriesIx, style) {\n                var this$1 = this;\n                var seriesPoints = this.seriesPoints;\n                var startIdx = linePoints[0].categoryIx;\n                var length = linePoints.length;\n                if (startIdx < 0) {\n                    startIdx = 0;\n                    length--;\n                }\n                var endIdx = startIdx + length;\n                var pointOffset = this.seriesOptions[0]._outOfRangeMinPoint ? 1 : 0;\n                var stackPoints = [];\n                this._stackPoints = this._stackPoints || [];\n                for (var categoryIx = startIdx; categoryIx < endIdx; categoryIx++) {\n                    var pointIx = categoryIx + pointOffset;\n                    var currentSeriesIx = seriesIx;\n                    var point = void 0;\n                    do {\n                        currentSeriesIx--;\n                        point = seriesPoints[currentSeriesIx][pointIx];\n                    } while (currentSeriesIx > 0 && !point);\n                    if (point) {\n                        if (style !== STEP && categoryIx > startIdx && !seriesPoints[currentSeriesIx][pointIx - 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx - 1, currentSeriesIx));\n                        }\n                        stackPoints.push(point);\n                        if (style !== STEP && categoryIx + 1 < endIdx && !seriesPoints[currentSeriesIx][pointIx + 1]) {\n                            stackPoints.push(this$1._previousSegmentPoint(categoryIx, pointIx, pointIx + 1, currentSeriesIx));\n                        }\n                    } else {\n                        var gapStackPoint = this$1._createGapStackPoint(categoryIx);\n                        this$1._stackPoints.push(gapStackPoint);\n                        stackPoints.push(gapStackPoint);\n                    }\n                }\n                return stackPoints;\n            },\n            _previousSegmentPoint: function (categoryIx, pointIx, segmentIx, seriesIdx) {\n                var seriesPoints = this.seriesPoints;\n                var index = seriesIdx;\n                var point;\n                while (index > 0 && !point) {\n                    index--;\n                    point = seriesPoints[index][segmentIx];\n                }\n                if (!point) {\n                    point = this._createGapStackPoint(categoryIx);\n                    this._stackPoints.push(point);\n                } else {\n                    point = seriesPoints[index][pointIx];\n                }\n                return point;\n            },\n            _createGapStackPoint: function (categoryIx) {\n                var options = this.pointOptions({}, 0);\n                var point = new LinePoint(0, options);\n                point.categoryIx = categoryIx;\n                point.series = {};\n                return point;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var AxisGroupRangeTracker = Class.extend({\n            init: function () {\n                this.axisRanges = {};\n            },\n            update: function (chartAxisRanges) {\n                var axisRanges = this.axisRanges;\n                for (var axisName in chartAxisRanges) {\n                    var chartRange = chartAxisRanges[axisName];\n                    var range = axisRanges[axisName];\n                    axisRanges[axisName] = range = range || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    range.min = Math.min(range.min, chartRange.min);\n                    range.max = Math.max(range.max, chartRange.max);\n                }\n            },\n            reset: function (axisName) {\n                this.axisRanges[axisName] = undefined;\n            },\n            query: function (axisName) {\n                return this.axisRanges[axisName];\n            }\n        });\n        var BarLabel = ChartElement.extend({\n            init: function (content, options, pointData) {\n                ChartElement.fn.init.call(this, options);\n                this.textBox = new TextBox(content, this.options, pointData);\n                this.append(this.textBox);\n            },\n            createVisual: function () {\n                this.textBox.options.noclip = this.options.noclip;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var vertical = options.vertical;\n                var aboveAxis = options.aboveAxis;\n                var text = this.children[0];\n                var textOptions = text.options;\n                var box = text.box;\n                var padding = text.options.padding;\n                var labelBox = targetBox;\n                textOptions.align = vertical ? CENTER : LEFT;\n                textOptions.vAlign = vertical ? TOP : CENTER;\n                if (options.position === INSIDE_END) {\n                    if (vertical) {\n                        textOptions.vAlign = TOP;\n                        if (!aboveAxis && box.height() < targetBox.height()) {\n                            textOptions.vAlign = BOTTOM;\n                        }\n                    } else {\n                        textOptions.align = aboveAxis ? RIGHT : LEFT;\n                    }\n                } else if (options.position === CENTER) {\n                    textOptions.vAlign = CENTER;\n                    textOptions.align = CENTER;\n                } else if (options.position === INSIDE_BASE) {\n                    if (vertical) {\n                        textOptions.vAlign = aboveAxis ? BOTTOM : TOP;\n                    } else {\n                        textOptions.align = aboveAxis ? LEFT : RIGHT;\n                    }\n                } else if (options.position === OUTSIDE_END) {\n                    if (vertical) {\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x1, targetBox.y1 - box.height(), targetBox.x2, targetBox.y1);\n                        } else {\n                            labelBox = new Box(targetBox.x1, targetBox.y2, targetBox.x2, targetBox.y2 + box.height());\n                        }\n                    } else {\n                        textOptions.align = CENTER;\n                        if (aboveAxis) {\n                            labelBox = new Box(targetBox.x2, targetBox.y1, targetBox.x2 + box.width(), targetBox.y2);\n                        } else {\n                            labelBox = new Box(targetBox.x1 - box.width(), targetBox.y1, targetBox.x1, targetBox.y2);\n                        }\n                    }\n                }\n                if (!options.rotation) {\n                    if (vertical) {\n                        padding.left = padding.right = (labelBox.width() - text.contentBox.width()) / 2;\n                    } else {\n                        padding.top = padding.bottom = (labelBox.height() - text.contentBox.height()) / 2;\n                    }\n                }\n                text.reflow(labelBox);\n            },\n            alignToClipBox: function (clipBox) {\n                var vertical = this.options.vertical;\n                var field = vertical ? Y : X;\n                var start = field + '1';\n                var end = field + '2';\n                var text = this.children[0];\n                var parentBox = this.parent.box;\n                if (parentBox[start] < clipBox[start] || clipBox[end] < parentBox[end]) {\n                    var targetBox = text.paddingBox.clone();\n                    targetBox[start] = Math.max(parentBox[start], clipBox[start]);\n                    targetBox[end] = Math.min(parentBox[end], clipBox[end]);\n                    this.reflow(targetBox);\n                }\n            }\n        });\n        setDefaultOptions(BarLabel, {\n            position: OUTSIDE_END,\n            margin: getSpacing(3),\n            padding: getSpacing(4),\n            color: BLACK,\n            background: '',\n            border: {\n                width: 1,\n                color: ''\n            },\n            aboveAxis: true,\n            vertical: false,\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            },\n            zIndex: 2\n        });\n        function hasGradientOverlay(options) {\n            var overlay = options.overlay;\n            return overlay && overlay.gradient && overlay.gradient !== 'none';\n        }\n        var BAR_ALIGN_MIN_WIDTH = 6;\n        var Bar = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.options = options;\n                this.color = options.color || WHITE;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.value = value;\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                this.createLabel();\n                this.createNote();\n                if (this.errorBar) {\n                    this.append(this.errorBar);\n                }\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labels = options.labels;\n                if (labels.visible) {\n                    var pointData = this.pointData();\n                    var labelTemplate = getTemplate(labels);\n                    var labelText;\n                    if (labelTemplate) {\n                        labelText = labelTemplate(pointData);\n                    } else {\n                        labelText = this.formatValue(labels.format);\n                    }\n                    this.label = new BarLabel(labelText, deepExtend({ vertical: options.vertical }, labels), pointData);\n                    this.append(this.label);\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                this.render();\n                var label = this.label;\n                this.box = targetBox;\n                if (label) {\n                    label.options.aboveAxis = this.aboveAxis;\n                    label.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n                if (this.errorBars) {\n                    for (var i = 0; i < this.errorBars.length; i++) {\n                        this$1.errorBars[i].reflow(targetBox);\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var box = ref.box;\n                var options = ref.options;\n                var customVisual = options.visual;\n                if (this.visible !== false) {\n                    ChartElement.fn.createVisual.call(this);\n                    if (customVisual) {\n                        var visual = this.rectVisual = customVisual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            sender: this.getSender(),\n                            series: this.series,\n                            percentage: this.percentage,\n                            stackValue: this.stackValue,\n                            runningTotal: this.runningTotal,\n                            total: this.total,\n                            rect: box.toRect(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createRect(group);\n                                return group;\n                            },\n                            options: options\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else if (box.width() > 0 && box.height() > 0) {\n                        this.createRect(this.visual);\n                    }\n                }\n            },\n            createRect: function (visual) {\n                var options = this.options;\n                var border = options.border;\n                var strokeOpacity = defined(border.opacity) ? border.opacity : options.opacity;\n                var rect = this.box.toRect();\n                rect.size.width = Math.round(rect.size.width);\n                var path = this.rectVisual = Path.fromRect(rect, {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: this.getBorderColor(),\n                        width: border.width,\n                        opacity: strokeOpacity,\n                        dashType: border.dashType\n                    }\n                });\n                var width = this.box.width();\n                var height = this.box.height();\n                var size = options.vertical ? width : height;\n                if (size > BAR_ALIGN_MIN_WIDTH) {\n                    alignPathToPixel(path);\n                    if (width < 1 || height < 1) {\n                        path.options.stroke.lineJoin = 'round';\n                    }\n                }\n                visual.append(path);\n                if (hasGradientOverlay(options)) {\n                    var overlay = this.createGradientOverlay(path, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay));\n                    visual.append(overlay);\n                }\n            },\n            createHighlight: function (style) {\n                var highlight = Path.fromRect(this.box.toRect(), style);\n                return alignPathToPixel(highlight);\n            },\n            highlightVisual: function () {\n                return this.rectVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this.rectVisual\n                };\n            },\n            getBorderColor: function () {\n                var color = this.color;\n                var border = this.options.border;\n                var brightness = border._brightness || BORDER_BRIGHTNESS;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(color).brightness(brightness).toHex();\n                }\n                return borderColor;\n            },\n            tooltipAnchor: function () {\n                var ref = this;\n                var options = ref.options;\n                var box = ref.box;\n                var aboveAxis = ref.aboveAxis;\n                var clipBox = this.owner.pane.clipBox() || box;\n                var horizontalAlign = LEFT;\n                var verticalAlign = TOP;\n                var x, y;\n                if (options.vertical) {\n                    x = Math.min(box.x2, clipBox.x2) + TOOLTIP_OFFSET;\n                    if (aboveAxis) {\n                        y = Math.max(box.y1, clipBox.y1);\n                    } else {\n                        y = Math.min(box.y2, clipBox.y2);\n                        verticalAlign = BOTTOM;\n                    }\n                } else {\n                    var x1 = Math.max(box.x1, clipBox.x1);\n                    var x2 = Math.min(box.x2, clipBox.x2);\n                    if (options.isStacked) {\n                        verticalAlign = BOTTOM;\n                        if (aboveAxis) {\n                            horizontalAlign = RIGHT;\n                            x = x2;\n                        } else {\n                            x = x1;\n                        }\n                        y = Math.max(box.y1, clipBox.y1) - TOOLTIP_OFFSET;\n                    } else {\n                        if (aboveAxis) {\n                            x = x2 + TOOLTIP_OFFSET;\n                        } else {\n                            x = x1 - TOOLTIP_OFFSET;\n                            horizontalAlign = RIGHT;\n                        }\n                        y = Math.max(box.y1, clipBox.y1);\n                    }\n                }\n                return {\n                    point: new Point(x, y),\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            },\n            pointData: function () {\n                return {\n                    dataItem: this.dataItem,\n                    category: this.category,\n                    value: this.value,\n                    percentage: this.percentage,\n                    stackValue: this.stackValue,\n                    runningTotal: this.runningTotal,\n                    total: this.total,\n                    series: this.series\n                };\n            }\n        });\n        deepExtend(Bar.prototype, PointEventsMixin);\n        deepExtend(Bar.prototype, NoteMixin);\n        Bar.prototype.defaults = {\n            border: { width: 1 },\n            vertical: true,\n            overlay: { gradient: 'glass' },\n            labels: {\n                visible: false,\n                format: '{0}'\n            },\n            opacity: 1,\n            notes: { label: {} }\n        };\n        function forEach(elements, callback) {\n            elements.forEach(callback);\n        }\n        function forEachReverse(elements, callback) {\n            var length = elements.length;\n            for (var idx = length - 1; idx >= 0; idx--) {\n                callback(elements[idx], idx - length - 1);\n            }\n        }\n        var ClusterLayout = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.forEach = options.rtl ? forEachReverse : forEach;\n            },\n            reflow: function (box) {\n                var ref = this.options;\n                var vertical = ref.vertical;\n                var gap = ref.gap;\n                var spacing = ref.spacing;\n                var children = this.children;\n                var count = children.length;\n                var axis = vertical ? Y : X;\n                var slots = count + gap + spacing * (count - 1);\n                var slotSize = (vertical ? box.height() : box.width()) / slots;\n                var position = box[axis + 1] + slotSize * (gap / 2);\n                this.forEach(children, function (child, idx) {\n                    var childBox = (child.box || box).clone();\n                    childBox[axis + 1] = position;\n                    childBox[axis + 2] = position + slotSize;\n                    child.reflow(childBox);\n                    if (idx < count - 1) {\n                        position += slotSize * spacing;\n                    }\n                    position += slotSize;\n                });\n            }\n        });\n        setDefaultOptions(ClusterLayout, {\n            vertical: false,\n            gap: 0,\n            spacing: 0\n        });\n        var StackWrap = ChartElement.extend({\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var positionAxis = this.options.vertical ? X : Y;\n                var children = this.children;\n                var childrenCount = children.length;\n                var box = this.box = new Box();\n                for (var i = 0; i < childrenCount; i++) {\n                    var currentChild = children[i];\n                    if (currentChild.visible !== false) {\n                        var childBox = currentChild.box.clone();\n                        childBox.snapTo(targetBox, positionAxis);\n                        if (i === 0) {\n                            box = this$1.box = childBox.clone();\n                        }\n                        currentChild.reflow(childBox);\n                        box.wrap(childBox);\n                    }\n                }\n            }\n        });\n        setDefaultOptions(StackWrap, { vertical: true });\n        var BarChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.updateStackRange();\n            },\n            pointType: function () {\n                return Bar;\n            },\n            clusterType: function () {\n                return ClusterLayout;\n            },\n            stackType: function () {\n                return StackWrap;\n            },\n            stackLimits: function (axisName, stackName) {\n                var limits = CategoricalChart.fn.stackLimits.call(this, axisName, stackName);\n                return limits;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var isStacked = options.isStacked;\n                var value = this.pointValue(data);\n                var pointOptions = this.pointOptions(series, seriesIx);\n                var labelOptions = pointOptions.labels;\n                if (isStacked) {\n                    if (labelOptions.position === OUTSIDE_END) {\n                        labelOptions.position = INSIDE_END;\n                    }\n                }\n                pointOptions.isStacked = isStacked;\n                var color = data.fields.color || series.color;\n                if (value < 0 && pointOptions.negativeColor) {\n                    color = pointOptions.negativeColor;\n                }\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var pointType = this.pointType();\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    var clusterType = this.clusterType();\n                    cluster = new clusterType({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                if (isStacked) {\n                    var stackWrap = this.getStackWrap(series, cluster);\n                    stackWrap.append(point);\n                } else {\n                    cluster.append(point);\n                }\n                return point;\n            },\n            getStackWrap: function (series, cluster) {\n                var stack = series.stack;\n                var stackGroup = stack ? stack.group || stack : stack;\n                var wraps = cluster.children;\n                var stackWrap;\n                if (typeof stackGroup === datavizConstants.STRING) {\n                    for (var i = 0; i < wraps.length; i++) {\n                        if (wraps[i]._stackGroup === stackGroup) {\n                            stackWrap = wraps[i];\n                            break;\n                        }\n                    }\n                } else {\n                    stackWrap = wraps[0];\n                }\n                if (!stackWrap) {\n                    var stackType = this.stackType();\n                    stackWrap = new stackType({ vertical: !this.options.invertAxes });\n                    stackWrap._stackGroup = stackGroup;\n                    cluster.append(stackWrap);\n                }\n                return stackWrap;\n            },\n            categorySlot: function (categoryAxis, categoryIx, valueAxis) {\n                var options = this.options;\n                var categorySlot = categoryAxis.getSlot(categoryIx);\n                var startValue = valueAxis.startValue();\n                if (options.isStacked) {\n                    var zeroSlot = valueAxis.getSlot(startValue, startValue, true);\n                    var stackAxis = options.invertAxes ? X : Y;\n                    categorySlot[stackAxis + 1] = categorySlot[stackAxis + 2] = zeroSlot[stackAxis + 1];\n                }\n                return categorySlot;\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            createAnimation: function () {\n                this._setAnimationOptions();\n                CategoricalChart.fn.createAnimation.call(this);\n                if (anyHasZIndex(this.options.series)) {\n                    this._setChildrenAnimation();\n                }\n            },\n            _setChildrenAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    var pointVisual = point.visual;\n                    if (pointVisual && defined(pointVisual.options.zIndex)) {\n                        point.options.animation = this$1.options.animation;\n                        point.createAnimation();\n                    }\n                }\n            },\n            _setAnimationOptions: function () {\n                var options = this.options;\n                var animation = options.animation || {};\n                var origin;\n                if (options.isStacked) {\n                    var valueAxis = this.seriesValueAxis(options.series[0]);\n                    origin = valueAxis.getSlot(valueAxis.startValue());\n                } else {\n                    origin = this.categoryAxis.getSlot(0);\n                }\n                animation.origin = new GeometryPoint(origin.x1, origin.y1);\n                animation.vertical = !options.invertAxes;\n            }\n        });\n        setDefaultOptions(BarChart, { animation: { type: BAR } });\n        var Candlestick = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var ocSlot = valueAxis.getSlot(value.open, value.close);\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                ocSlot.x1 = lhSlot.x1 = box.x1;\n                ocSlot.x2 = lhSlot.x2 = box.x2;\n                this.realBody = ocSlot;\n                var mid = lhSlot.center().x;\n                var points = [];\n                points.push([\n                    [\n                        mid,\n                        lhSlot.y1\n                    ],\n                    [\n                        mid,\n                        ocSlot.y1\n                    ]\n                ]);\n                points.push([\n                    [\n                        mid,\n                        ocSlot.y2\n                    ],\n                    [\n                        mid,\n                        lhSlot.y2\n                    ]\n                ]);\n                this.lines = points;\n                this.box = lhSlot.clone().wrap(ocSlot);\n                if (!this._rendered) {\n                    this._rendered = true;\n                    this.createNote();\n                }\n                this.reflowNote();\n            },\n            reflowNote: function () {\n                if (this.note) {\n                    this.note.reflow(this.box);\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                this._mainVisual = this.mainVisual(this.options);\n                this.visual.append(this._mainVisual);\n                this.createOverlay();\n            },\n            mainVisual: function (options) {\n                var group = new Group();\n                this.createBody(group, options);\n                this.createLines(group, options);\n                return group;\n            },\n            createBody: function (container, options) {\n                var body = Path.fromRect(this.realBody.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: this.getBorderColor(),\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                alignPathToPixel(body);\n                container.append(body);\n                if (hasGradientOverlay(options)) {\n                    container.append(this.createGradientOverlay(body, { baseColor: this.color }, deepExtend({\n                        end: !options.vertical ? [\n                            0,\n                            1\n                        ] : undefined\n                    }, options.overlay)));\n                }\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.lines, options.line);\n            },\n            drawLines: function (container, options, lines, lineOptions) {\n                if (!lines) {\n                    return;\n                }\n                var lineStyle = {\n                    stroke: {\n                        color: lineOptions.color || this.color,\n                        opacity: valueOrDefault(lineOptions.opacity, options.opacity),\n                        width: lineOptions.width,\n                        dashType: lineOptions.dashType,\n                        lineCap: 'butt'\n                    }\n                };\n                for (var i = 0; i < lines.length; i++) {\n                    var line = Path.fromPoints(lines[i], lineStyle);\n                    alignPathToPixel(line);\n                    container.append(line);\n                }\n            },\n            getBorderColor: function () {\n                var border = this.options.border;\n                var borderColor = border.color;\n                if (!defined(borderColor)) {\n                    borderColor = new Color(this.color).brightness(border._brightness).toHex();\n                }\n                return borderColor;\n            },\n            createOverlay: function () {\n                var overlay = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null\n                });\n                this.visual.append(overlay);\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var normalColor = this.color;\n                this.color = highlight.color || this.color;\n                var overlay = this.mainVisual(deepExtend({}, this.options, { line: { color: this.getBorderColor() } }, highlight));\n                this.color = normalColor;\n                return overlay;\n            },\n            highlightVisual: function () {\n                return this._mainVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    rect: this.box.toRect(),\n                    visual: this._mainVisual\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                var clipBox = this.owner.pane.clipBox() || box;\n                return {\n                    point: new Point(box.x2 + TOOLTIP_OFFSET, Math.max(box.y1, clipBox.y1) + TOOLTIP_OFFSET),\n                    align: {\n                        horizontal: LEFT,\n                        vertical: TOP\n                    }\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            }\n        });\n        setDefaultOptions(Candlestick, {\n            vertical: true,\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{4:d}</th></tr>' + '<tr><td>Open:</td><td>{0:C}</td></tr>' + '<tr><td>High:</td><td>{1:C}</td></tr>' + '<tr><td>Low:</td><td>{2:C}</td></tr>' + '<tr><td>Close:</td><td>{3:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            }\n        });\n        deepExtend(Candlestick.prototype, PointEventsMixin);\n        deepExtend(Candlestick.prototype, NoteMixin);\n        function areNumbers(values) {\n            return countNumbers(values) === values.length;\n        }\n        var CandlestickChart = CategoricalChart.extend({\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                    point.noteText = data.fields.noteText;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                return Candlestick;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var pointType = this.pointType();\n                var value = data.valueFields;\n                var pointOptions = deepExtend({}, series);\n                var color = data.fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                if (series.type === CANDLESTICK) {\n                    if (value.open > value.close) {\n                        color = data.fields.downColor || series.downColor || series.color;\n                    }\n                }\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.vertical = !this.options.invertAxes;\n                var point = new pointType(value, pointOptions);\n                point.color = color;\n                return point;\n            },\n            splitValue: function (value) {\n                return [\n                    value.low,\n                    value.open,\n                    value.close,\n                    value.high\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var parts = this.splitValue(value);\n                var axisRange = this.valueAxisRanges[axisName];\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.open, value.high, value.low, value.close, point.category);\n            },\n            animationPoints: function () {\n                return this.points;\n            }\n        });\n        deepExtend(CandlestickChart.prototype, ClipAnimationMixin);\n        var BoxPlot = Candlestick.extend({\n            init: function (value, options) {\n                Candlestick.fn.init.call(this, value, options);\n                this.createNote();\n            },\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var whiskerSlot, boxSlot;\n                this.boxSlot = boxSlot = valueAxis.getSlot(value.q1, value.q3);\n                this.realBody = boxSlot;\n                this.reflowBoxSlot(box);\n                this.whiskerSlot = whiskerSlot = valueAxis.getSlot(value.lower, value.upper);\n                this.reflowWhiskerSlot(box);\n                var medianSlot = valueAxis.getSlot(value.median);\n                if (value.mean) {\n                    var meanSlot = valueAxis.getSlot(value.mean);\n                    this.meanPoints = this.calcMeanPoints(box, meanSlot);\n                }\n                this.whiskerPoints = this.calcWhiskerPoints(boxSlot, whiskerSlot);\n                this.medianPoints = this.calcMedianPoints(box, medianSlot);\n                this.box = whiskerSlot.clone().wrap(boxSlot);\n                this.reflowNote();\n            },\n            reflowBoxSlot: function (box) {\n                this.boxSlot.x1 = box.x1;\n                this.boxSlot.x2 = box.x2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.x1 = box.x1;\n                this.whiskerSlot.x2 = box.x2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            box.x1,\n                            meanSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            meanSlot.y1\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().x;\n                return [\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y1\n                        ],\n                        [\n                            mid,\n                            boxSlot.y1\n                        ]\n                    ],\n                    [\n                        [\n                            mid - 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid + 5,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            whiskerSlot.y2\n                        ],\n                        [\n                            mid,\n                            boxSlot.y2\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            box.x1,\n                            medianSlot.y1\n                        ],\n                        [\n                            box.x2,\n                            medianSlot.y1\n                        ]\n                    ]];\n            },\n            renderOutliers: function (options) {\n                var this$1 = this;\n                var value = this.value;\n                var outliers = value.outliers || [];\n                var outerFence = Math.abs(value.q3 - value.q1) * 3;\n                var elements = [];\n                var markers = options.markers || {};\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i];\n                    if (outlierValue < value.q3 + outerFence && outlierValue > value.q1 - outerFence) {\n                        markers = options.outliers;\n                    } else {\n                        markers = options.extremes;\n                    }\n                    var markersBorder = deepExtend({}, markers.border);\n                    if (!defined(markersBorder.color)) {\n                        if (defined(this$1.color)) {\n                            markersBorder.color = this$1.color;\n                        } else {\n                            markersBorder.color = new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex();\n                        }\n                    }\n                    var shape = new ShapeElement({\n                        type: markers.type,\n                        width: markers.size,\n                        height: markers.size,\n                        rotation: markers.rotation,\n                        background: markers.background,\n                        border: markersBorder,\n                        opacity: markers.opacity\n                    });\n                    shape.value = outlierValue;\n                    elements.push(shape);\n                }\n                this.reflowOutliers(elements);\n                return elements;\n            },\n            reflowOutliers: function (outliers) {\n                var this$1 = this;\n                var valueAxis = this.owner.seriesValueAxis(this.options);\n                var center = this.box.center();\n                for (var i = 0; i < outliers.length; i++) {\n                    var outlierValue = outliers[i].value;\n                    var markerBox = valueAxis.getSlot(outlierValue);\n                    if (this$1.options.vertical) {\n                        markerBox.move(center.x);\n                    } else {\n                        markerBox.move(undefined, center.y);\n                    }\n                    this$1.box = this$1.box.wrap(markerBox);\n                    outliers[i].reflow(markerBox);\n                }\n            },\n            mainVisual: function (options) {\n                var group = Candlestick.fn.mainVisual.call(this, options);\n                var outliers = this.renderOutliers(options);\n                for (var i = 0; i < outliers.length; i++) {\n                    var element = outliers[i].getElement();\n                    if (element) {\n                        group.append(element);\n                    }\n                }\n                return group;\n            },\n            createLines: function (container, options) {\n                this.drawLines(container, options, this.whiskerPoints, options.whiskers);\n                this.drawLines(container, options, this.medianPoints, options.median);\n                this.drawLines(container, options, this.meanPoints, options.mean);\n            },\n            getBorderColor: function () {\n                if ((this.options.border || {}).color) {\n                    return this.options.border.color;\n                }\n                if (this.color) {\n                    return this.color;\n                }\n                return Candlestick.fn.getBorderColor.call(this);\n            }\n        });\n        setDefaultOptions(BoxPlot, {\n            border: { _brightness: 0.8 },\n            line: { width: 2 },\n            median: { color: '#f6f6f6' },\n            mean: {\n                width: 2,\n                dashType: 'dash',\n                color: '#f6f6f6'\n            },\n            overlay: { gradient: 'glass' },\n            tooltip: { format: '<table>' + '<tr><th colspan=\\'2\\'>{6:d}</th></tr>' + '<tr><td>Lower:</td><td>{0:C}</td></tr>' + '<tr><td>Q1:</td><td>{1:C}</td></tr>' + '<tr><td>Median:</td><td>{2:C}</td></tr>' + '<tr><td>Mean:</td><td>{5:C}</td></tr>' + '<tr><td>Q3:</td><td>{3:C}</td></tr>' + '<tr><td>Upper:</td><td>{4:C}</td></tr>' + '</table>' },\n            highlight: {\n                opacity: 1,\n                border: {\n                    width: 1,\n                    opacity: 1\n                },\n                line: {\n                    width: 1,\n                    opacity: 1\n                }\n            },\n            notes: {\n                visible: true,\n                label: {}\n            },\n            outliers: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: datavizConstants.CROSS,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            },\n            extremes: {\n                visible: true,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                background: WHITE,\n                border: {\n                    width: 2,\n                    opacity: 1\n                },\n                opacity: 0\n            }\n        });\n        deepExtend(BoxPlot.prototype, PointEventsMixin);\n        var VerticalBoxPlot = BoxPlot.extend({\n            reflowBoxSlot: function (box) {\n                this.boxSlot.y1 = box.y1;\n                this.boxSlot.y2 = box.y2;\n            },\n            reflowWhiskerSlot: function (box) {\n                this.whiskerSlot.y1 = box.y1;\n                this.whiskerSlot.y2 = box.y2;\n            },\n            calcMeanPoints: function (box, meanSlot) {\n                return [[\n                        [\n                            meanSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            meanSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            },\n            calcWhiskerPoints: function (boxSlot, whiskerSlot) {\n                var mid = whiskerSlot.center().y;\n                return [\n                    [\n                        [\n                            whiskerSlot.x1,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x1,\n                            mid\n                        ],\n                        [\n                            boxSlot.x1,\n                            mid\n                        ]\n                    ],\n                    [\n                        [\n                            whiskerSlot.x2,\n                            mid - 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid + 5\n                        ],\n                        [\n                            whiskerSlot.x2,\n                            mid\n                        ],\n                        [\n                            boxSlot.x2,\n                            mid\n                        ]\n                    ]\n                ];\n            },\n            calcMedianPoints: function (box, medianSlot) {\n                return [[\n                        [\n                            medianSlot.x1,\n                            box.y1\n                        ],\n                        [\n                            medianSlot.x1,\n                            box.y2\n                        ]\n                    ]];\n            }\n        });\n        var BoxPlotChart = CandlestickChart.extend({\n            addValue: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var value = data.valueFields;\n                var valueParts = this.splitValue(value);\n                var hasValue = areNumbers(valueParts);\n                var dataItem = series.data[categoryIx];\n                var categoryPoints = this.categoryPoints[categoryIx];\n                var point;\n                if (!categoryPoints) {\n                    this.categoryPoints[categoryIx] = categoryPoints = [];\n                }\n                if (hasValue) {\n                    point = this.createPoint(data, fields);\n                }\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                if (point) {\n                    this.updateRange(value, fields);\n                    cluster.append(point);\n                    point.categoryIx = categoryIx;\n                    point.category = category;\n                    point.series = series;\n                    point.seriesIx = seriesIx;\n                    point.owner = this;\n                    point.dataItem = dataItem;\n                }\n                this.points.push(point);\n                categoryPoints.push(point);\n            },\n            pointType: function () {\n                if (this.options.invertAxes) {\n                    return VerticalBoxPlot;\n                }\n                return BoxPlot;\n            },\n            splitValue: function (value) {\n                return [\n                    value.lower,\n                    value.q1,\n                    value.median,\n                    value.q3,\n                    value.upper\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                var parts = this.splitValue(value).concat(this.filterOutliers(value.outliers));\n                if (defined(value.mean)) {\n                    parts = parts.concat(value.mean);\n                }\n                axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                    min: MAX_VALUE,\n                    max: MIN_VALUE\n                };\n                axisRange = this.valueAxisRanges[axisName] = {\n                    min: Math.min.apply(Math, parts.concat([axisRange.min])),\n                    max: Math.max.apply(Math, parts.concat([axisRange.max]))\n                };\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.lower, value.q1, value.median, value.q3, value.upper, value.mean, point.category);\n            },\n            filterOutliers: function (items) {\n                var length = (items || []).length;\n                var result = [];\n                for (var i = 0; i < length; i++) {\n                    var item = items[i];\n                    if (defined(item) && item !== null) {\n                        result.push(item);\n                    }\n                }\n                return result;\n            }\n        });\n        var ScatterErrorBar = ErrorBarBase.extend({\n            getAxis: function () {\n                var axes = this.chart.seriesAxes(this.series);\n                var axis = this.isVertical ? axes.y : axes.x;\n                return axis;\n            }\n        });\n        function hasValue(value) {\n            return defined(value) && value !== null;\n        }\n        var ScatterChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this._initFields();\n                this.render();\n            },\n            _initFields: function () {\n                this.xAxisRanges = {};\n                this.yAxisRanges = {};\n                this.points = [];\n                this.seriesPoints = [];\n                this.seriesOptions = [];\n                this._evalSeries = [];\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            addErrorBar: function (point, field, fields) {\n                var value = point.value[field];\n                var valueErrorField = field + 'Value';\n                var lowField = field + 'ErrorLow';\n                var highField = field + 'ErrorHigh';\n                var seriesIx = fields.seriesIx;\n                var series = fields.series;\n                var errorBars = point.options.errorBars;\n                var lowValue = fields[lowField];\n                var highValue = fields[highField];\n                if (isNumber(value)) {\n                    var errorRange;\n                    if (isNumber(lowValue) && isNumber(highValue)) {\n                        errorRange = {\n                            low: lowValue,\n                            high: highValue\n                        };\n                    }\n                    if (errorBars && defined(errorBars[valueErrorField])) {\n                        this.seriesErrorRanges = this.seriesErrorRanges || {\n                            x: [],\n                            y: []\n                        };\n                        this.seriesErrorRanges[field][seriesIx] = this.seriesErrorRanges[field][seriesIx] || new ErrorRangeCalculator(errorBars[valueErrorField], series, field);\n                        errorRange = this.seriesErrorRanges[field][seriesIx].getErrorRange(value, errorBars[valueErrorField]);\n                    }\n                    if (errorRange) {\n                        this.addPointErrorBar(errorRange, point, field);\n                    }\n                }\n            },\n            addPointErrorBar: function (errorRange, point, field) {\n                var low = errorRange.low;\n                var high = errorRange.high;\n                var series = point.series;\n                var options = point.options.errorBars;\n                var isVertical = field === Y;\n                var item = {};\n                point[field + 'Low'] = low;\n                point[field + 'High'] = high;\n                point.errorBars = point.errorBars || [];\n                var errorBar = new ScatterErrorBar(low, high, isVertical, this, series, options);\n                point.errorBars.push(errorBar);\n                point.append(errorBar);\n                item[field] = low;\n                this.updateRange(item, series);\n                item[field] = high;\n                this.updateRange(item, series);\n            },\n            addValue: function (value, fields) {\n                var x = value.x;\n                var y = value.y;\n                var seriesIx = fields.seriesIx;\n                var series = this.options.series[seriesIx];\n                var missingValues = this.seriesMissingValues(series);\n                var seriesPoints = this.seriesPoints[seriesIx];\n                var pointValue = value;\n                if (!(hasValue(x) && hasValue(y))) {\n                    pointValue = this.createMissingValue(pointValue, missingValues);\n                }\n                var point;\n                if (pointValue) {\n                    point = this.createPoint(pointValue, fields);\n                    if (point) {\n                        $.extend(point, fields);\n                        this.addErrorBar(point, X, fields);\n                        this.addErrorBar(point, Y, fields);\n                    }\n                    this.updateRange(pointValue, fields.series);\n                }\n                this.points.push(point);\n                seriesPoints.push(point);\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues;\n            },\n            createMissingValue: function () {\n            },\n            updateRange: function (value, series) {\n                var intlService = this.chartService.intl;\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var x = value.x;\n                var y = value.y;\n                var xAxisRange = this.xAxisRanges[xAxisName];\n                var yAxisRange = this.yAxisRanges[yAxisName];\n                if (hasValue(x)) {\n                    xAxisRange = this.xAxisRanges[xAxisName] = xAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(x)) {\n                        x = parseDate(intlService, x);\n                    }\n                    xAxisRange.min = Math.min(xAxisRange.min, x);\n                    xAxisRange.max = Math.max(xAxisRange.max, x);\n                }\n                if (hasValue(y)) {\n                    yAxisRange = this.yAxisRanges[yAxisName] = yAxisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    if (isString(y)) {\n                        y = parseDate(intlService, y);\n                    }\n                    yAxisRange.min = Math.min(yAxisRange.min, y);\n                    yAxisRange.max = Math.max(yAxisRange.max, y);\n                }\n            },\n            evalPointOptions: function (options, value, fields) {\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var state = {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'tooltip',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle',\n                        '_outOfRangeMinPoint',\n                        '_outOfRangeMaxPoint'\n                    ]\n                };\n                var doEval = this._evalSeries[seriesIx];\n                if (!defined(doEval)) {\n                    this._evalSeries[seriesIx] = doEval = evalOptions(options, {}, state, true);\n                }\n                var pointOptions = options;\n                if (doEval) {\n                    pointOptions = deepExtend({}, options);\n                    evalOptions(pointOptions, {\n                        value: value,\n                        series: series,\n                        dataItem: fields.dataItem\n                    }, state);\n                }\n                return pointOptions;\n            },\n            pointType: function () {\n                return LinePoint;\n            },\n            pointOptions: function (series, seriesIx) {\n                var options = this.seriesOptions[seriesIx];\n                if (!options) {\n                    var defaults = this.pointType().prototype.defaults;\n                    this.seriesOptions[seriesIx] = options = deepExtend({}, defaults, {\n                        markers: { opacity: series.opacity },\n                        tooltip: { format: this.options.tooltip.format },\n                        labels: { format: this.options.labels.format }\n                    }, series);\n                }\n                return options;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointOptions = this.pointOptions(series, fields.seriesIx);\n                var color = fields.color || series.color;\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new LinePoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            seriesAxes: function (series) {\n                var xAxisName = series.xAxis;\n                var yAxisName = series.yAxis;\n                var plotArea = this.plotArea;\n                var xAxis = xAxisName ? plotArea.namedXAxes[xAxisName] : plotArea.axisX;\n                var yAxis = yAxisName ? plotArea.namedYAxes[yAxisName] : plotArea.axisY;\n                if (!xAxis) {\n                    throw new Error('Unable to locate X axis with name ' + xAxisName);\n                }\n                if (!yAxis) {\n                    throw new Error('Unable to locate Y axis with name ' + yAxisName);\n                }\n                return {\n                    x: xAxis,\n                    y: yAxis\n                };\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var chartPoints = this.points;\n                var limit = !this.options.clip;\n                var pointIx = 0;\n                this.traverseDataPoints(function (value, fields) {\n                    var point = chartPoints[pointIx++];\n                    var seriesAxes = this$1.seriesAxes(fields.series);\n                    var slotX = seriesAxes.x.getSlot(value.x, value.x, limit);\n                    var slotY = seriesAxes.y.getSlot(value.y, value.y, limit);\n                    if (point) {\n                        if (slotX && slotY) {\n                            var pointSlot = this$1.pointSlot(slotX, slotY);\n                            point.reflow(pointSlot);\n                        } else {\n                            point.visible = false;\n                        }\n                    }\n                });\n                this.box = targetBox;\n            },\n            pointSlot: function (slotX, slotY) {\n                return new Box(slotX.x1, slotY.y1, slotX.x2, slotY.y2);\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var seriesPoints = ref.seriesPoints;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var currentSeriesPoints = seriesPoints[seriesIx];\n                    if (!currentSeriesPoints) {\n                        seriesPoints[seriesIx] = [];\n                    }\n                    for (var pointIx = 0; pointIx < currentSeries.data.length; pointIx++) {\n                        var ref$1 = this$1._bindPoint(currentSeries, seriesIx, pointIx);\n                        var value = ref$1.valueFields;\n                        var fields = ref$1.fields;\n                        callback(value, deepExtend({\n                            pointIx: pointIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: currentSeries.data[pointIx],\n                            owner: this$1\n                        }, fields));\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    result.push((points[idx] || {}).marker);\n                }\n                return result;\n            }\n        });\n        setDefaultOptions(ScatterChart, {\n            series: [],\n            tooltip: { format: '{0}, {1}' },\n            labels: { format: '{0}, {1}' },\n            clip: true\n        });\n        deepExtend(ScatterChart.prototype, ClipAnimationMixin, { _bindPoint: CategoricalChart.prototype._bindPoint });\n        var Bubble = LinePoint.extend({\n            init: function (value, options) {\n                LinePoint.fn.init.call(this, value, options);\n                this.category = value.category;\n            },\n            createHighlight: function () {\n                var highlight = this.options.highlight;\n                var border = highlight.border;\n                var markers = this.options.markers;\n                var center = this.box.center();\n                var radius = (markers.size + markers.border.width + border.width) / 2;\n                var highlightGroup = new Group();\n                var shadow = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y + radius / 5 + border.width / 2\n                ], radius + border.width / 2), {\n                    stroke: { color: 'none' },\n                    fill: this.createGradient({\n                        gradient: 'bubbleShadow',\n                        color: markers.background,\n                        stops: [\n                            {\n                                offset: 0,\n                                color: markers.background,\n                                opacity: 0.3\n                            },\n                            {\n                                offset: 1,\n                                color: markers.background,\n                                opacity: 0\n                            }\n                        ]\n                    })\n                });\n                var overlay = new drawing.Circle(new geometry.Circle([\n                    center.x,\n                    center.y\n                ], radius), {\n                    stroke: {\n                        color: border.color || new Color(markers.background).brightness(BORDER_BRIGHTNESS).toHex(),\n                        width: border.width,\n                        opacity: border.opacity\n                    },\n                    fill: {\n                        color: markers.background,\n                        opacity: highlight.opacity\n                    }\n                });\n                highlightGroup.append(shadow, overlay);\n                return highlightGroup;\n            }\n        });\n        Bubble.prototype.defaults = deepExtend({}, Bubble.prototype.defaults, {\n            labels: { position: CENTER },\n            highlight: {\n                opacity: 1,\n                border: {\n                    color: '#fff',\n                    width: 2,\n                    opacity: 1\n                }\n            }\n        });\n        Bubble.prototype.defaults.highlight.zIndex = undefined;\n        var BubbleChart = ScatterChart.extend({\n            _initFields: function () {\n                this._maxSize = MIN_VALUE;\n                ScatterChart.fn._initFields.call(this);\n            },\n            addValue: function (value, fields) {\n                if (value.size !== null && (value.size > 0 || value.size < 0 && fields.series.negativeValues.visible)) {\n                    this._maxSize = Math.max(this._maxSize, Math.abs(value.size));\n                    ScatterChart.fn.addValue.call(this, value, fields);\n                } else {\n                    this.points.push(null);\n                    this.seriesPoints[fields.seriesIx].push(null);\n                }\n            },\n            reflow: function (box) {\n                this.updateBubblesSize(box);\n                ScatterChart.fn.reflow.call(this, box);\n            },\n            pointType: function () {\n                return Bubble;\n            },\n            createPoint: function (value, fields) {\n                var series = fields.series;\n                var pointsCount = series.data.length;\n                var delay = fields.pointIx * (INITIAL_ANIMATION_DURATION / pointsCount);\n                var animationOptions = {\n                    delay: delay,\n                    duration: INITIAL_ANIMATION_DURATION - delay,\n                    type: BUBBLE\n                };\n                var color = fields.color || series.color;\n                if (value.size < 0 && series.negativeValues.visible) {\n                    color = valueOrDefault(series.negativeValues.color, color);\n                }\n                var pointOptions = deepExtend({\n                    labels: {\n                        animation: {\n                            delay: delay,\n                            duration: INITIAL_ANIMATION_DURATION - delay\n                        }\n                    }\n                }, this.pointOptions(series, fields.seriesIx), {\n                    markers: {\n                        type: CIRCLE,\n                        border: series.border,\n                        opacity: series.opacity,\n                        animation: animationOptions\n                    }\n                });\n                pointOptions = this.evalPointOptions(pointOptions, value, fields);\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                pointOptions.markers.background = color;\n                var point = new Bubble(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            updateBubblesSize: function (box) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref.options.series;\n                var boxSize = Math.min(box.width(), box.height());\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesPoints = this$1.seriesPoints[seriesIx];\n                    var minSize = currentSeries.minSize || Math.max(boxSize * 0.02, 10);\n                    var maxSize = currentSeries.maxSize || boxSize * 0.2;\n                    var minR = minSize / 2;\n                    var maxR = maxSize / 2;\n                    var minArea = Math.PI * minR * minR;\n                    var maxArea = Math.PI * maxR * maxR;\n                    var areaRange = maxArea - minArea;\n                    var areaRatio = areaRange / this$1._maxSize;\n                    for (var pointIx = 0; pointIx < seriesPoints.length; pointIx++) {\n                        var point = seriesPoints[pointIx];\n                        if (point) {\n                            var area = Math.abs(point.value.size) * areaRatio;\n                            var radius = Math.sqrt((minArea + area) / Math.PI);\n                            var baseZIndex = valueOrDefault(point.options.zIndex, 0);\n                            var zIndex = baseZIndex + (1 - radius / maxR);\n                            deepExtend(point.options, {\n                                zIndex: zIndex,\n                                markers: {\n                                    size: radius * 2,\n                                    zIndex: zIndex\n                                },\n                                labels: { zIndex: zIndex + 1 }\n                            });\n                        }\n                    }\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.x, value.y, value.size, point.category);\n            },\n            createAnimation: function () {\n            },\n            createVisual: function () {\n            }\n        });\n        setDefaultOptions(BubbleChart, {\n            tooltip: { format: '{3}' },\n            labels: { format: '{3}' }\n        });\n        var Target = ShapeElement.extend({});\n        deepExtend(Target.prototype, PointEventsMixin);\n        var Bullet = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this, options);\n                this.aboveAxis = this.options.aboveAxis;\n                this.color = options.color || WHITE;\n                this.value = value;\n            },\n            render: function () {\n                var options = this.options;\n                if (!this._rendered) {\n                    this._rendered = true;\n                    if (defined(this.value.target)) {\n                        this.target = new Target({\n                            type: options.target.shape,\n                            background: options.target.color || this.color,\n                            opacity: options.opacity,\n                            zIndex: options.zIndex,\n                            border: options.target.border,\n                            vAlign: TOP,\n                            align: RIGHT\n                        });\n                        this.target.value = this.value;\n                        this.target.dataItem = this.dataItem;\n                        this.target.series = this.series;\n                        this.append(this.target);\n                    }\n                    this.createNote();\n                }\n            },\n            reflow: function (box) {\n                this.render();\n                var ref = this;\n                var options = ref.options;\n                var target = ref.target;\n                var chart = ref.owner;\n                var invertAxes = options.invertAxes;\n                var valueAxis = chart.seriesValueAxis(this.options);\n                var categorySlot = chart.categorySlot(chart.categoryAxis, options.categoryIx, valueAxis);\n                var targetValueSlot = valueAxis.getSlot(this.value.target);\n                var targetSlotX = invertAxes ? targetValueSlot : categorySlot;\n                var targetSlotY = invertAxes ? categorySlot : targetValueSlot;\n                if (target) {\n                    var targetSlot = new Box(targetSlotX.x1, targetSlotY.y1, targetSlotX.x2, targetSlotY.y2);\n                    target.options.height = invertAxes ? targetSlot.height() : options.target.line.width;\n                    target.options.width = invertAxes ? options.target.line.width : targetSlot.width();\n                    target.reflow(targetSlot);\n                }\n                if (this.note) {\n                    this.note.reflow(box);\n                }\n                this.box = box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                var body = Path.fromRect(this.box.toRect(), {\n                    fill: {\n                        color: this.color,\n                        opacity: options.opacity\n                    },\n                    stroke: null\n                });\n                if (options.border.width > 0) {\n                    body.options.set('stroke', {\n                        color: options.border.color || this.color,\n                        width: options.border.width,\n                        dashType: options.border.dashType,\n                        opacity: valueOrDefault(options.border.opacity, options.opacity)\n                    });\n                }\n                this.bodyVisual = body;\n                alignPathToPixel(body);\n                this.visual.append(body);\n            },\n            createAnimation: function () {\n                if (this.bodyVisual) {\n                    this.animation = Animation.create(this.bodyVisual, this.options.animation);\n                }\n            },\n            createHighlight: function (style) {\n                return Path.fromRect(this.box.toRect(), style);\n            },\n            highlightVisual: function () {\n                return this.bodyVisual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    rect: this.box.toRect(),\n                    visual: this.bodyVisual,\n                    options: this.options\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            }\n        });\n        Bullet.prototype.tooltipAnchor = Bar.prototype.tooltipAnchor;\n        setDefaultOptions(Bullet, {\n            border: { width: 1 },\n            vertical: false,\n            opacity: 1,\n            target: {\n                shape: '',\n                border: {\n                    width: 0,\n                    color: 'green'\n                },\n                line: { width: 2 }\n            },\n            tooltip: { format: 'Current: {0}<br />Target: {1}' }\n        });\n        deepExtend(Bullet.prototype, PointEventsMixin);\n        deepExtend(Bullet.prototype, NoteMixin);\n        var BulletChart = CategoricalChart.extend({\n            init: function (plotArea, options) {\n                wrapData(options);\n                CategoricalChart.fn.init.call(this, plotArea, options);\n            },\n            reflowCategories: function (categorySlots) {\n                var children = this.children;\n                var childrenLength = children.length;\n                for (var i = 0; i < childrenLength; i++) {\n                    children[i].reflow(categorySlots[i]);\n                }\n            },\n            plotRange: function (point) {\n                var series = point.series;\n                var valueAxis = this.seriesValueAxis(series);\n                var axisCrossingValue = this.categoryAxisCrossingValue(valueAxis);\n                return [\n                    axisCrossingValue,\n                    point.value.current || axisCrossingValue\n                ];\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var value = data.valueFields;\n                var bulletOptions = deepExtend({\n                    vertical: !options.invertAxes,\n                    overlay: series.overlay,\n                    categoryIx: categoryIx,\n                    invertAxes: options.invertAxes\n                }, series);\n                var color = data.fields.color || series.color;\n                bulletOptions = this.evalPointOptions(bulletOptions, value, category, categoryIx, series, seriesIx);\n                if (isFunction(series.color)) {\n                    color = bulletOptions.color;\n                }\n                var bullet = new Bullet(value, bulletOptions);\n                bullet.color = color;\n                var cluster = children[categoryIx];\n                if (!cluster) {\n                    cluster = new ClusterLayout({\n                        vertical: options.invertAxes,\n                        gap: options.gap,\n                        spacing: options.spacing,\n                        rtl: !options.invertAxes && (this.chartService || {}).rtl\n                    });\n                    this.append(cluster);\n                }\n                cluster.append(bullet);\n                return bullet;\n            },\n            updateRange: function (value, fields) {\n                var current = value.current;\n                var target = value.target;\n                var axisName = fields.series.axis;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (defined(current) && !isNaN(current) && defined(target && !isNaN(target))) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, current, target);\n                    axisRange.max = Math.max(axisRange.max, current, target);\n                }\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value.current, point.value.target);\n            },\n            pointValue: function (data) {\n                return data.valueFields.current;\n            },\n            aboveAxis: function (point) {\n                var value = point.value.current;\n                return value > 0;\n            },\n            createAnimation: function () {\n                var this$1 = this;\n                var points = this.points;\n                this._setAnimationOptions();\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    point.options.animation = this$1.options.animation;\n                    point.createAnimation();\n                }\n            }\n        });\n        BulletChart.prototype._setAnimationOptions = BarChart.prototype._setAnimationOptions;\n        setDefaultOptions(BulletChart, { animation: { type: BAR } });\n        function wrapData(options) {\n            var series = options.series;\n            for (var i = 0; i < series.length; i++) {\n                var seriesItem = series[i];\n                var data = seriesItem.data;\n                if (data && !isArray(data[0]) && !isObject(data[0])) {\n                    seriesItem.data = [data];\n                }\n            }\n        }\n        var BaseTooltip = Class.extend({\n            init: function (chartService, options) {\n                this.chartService = chartService;\n                this.options = deepExtend({}, this.options, options);\n            },\n            getStyle: function (options, point) {\n                var background = options.background;\n                var border = options.border.color;\n                if (point) {\n                    var pointColor = point.color || point.options.color;\n                    background = valueOrDefault(background, pointColor);\n                    border = valueOrDefault(border, pointColor);\n                }\n                var padding = getSpacing(options.padding || {}, 'auto');\n                return {\n                    backgroundColor: background,\n                    borderColor: border,\n                    font: options.font,\n                    color: options.color,\n                    opacity: options.opacity,\n                    borderWidth: styleValue(options.border.width),\n                    paddingTop: styleValue(padding.top),\n                    paddingBottom: styleValue(padding.bottom),\n                    paddingLeft: styleValue(padding.left),\n                    paddingRight: styleValue(padding.right)\n                };\n            },\n            show: function (options, tooltipOptions, point) {\n                options.format = tooltipOptions.format;\n                var style = this.getStyle(tooltipOptions, point);\n                options.style = style;\n                if (!defined(tooltipOptions.color) && new Color(style.backgroundColor).percBrightness() > 180) {\n                    options.className = 'k-chart-tooltip-inverse';\n                }\n                this.chartService.notify(SHOW_TOOLTIP, options);\n                this.visible = true;\n            },\n            hide: function () {\n                if (this.chartService) {\n                    this.chartService.notify(HIDE_TOOLTIP);\n                }\n                this.visible = false;\n            },\n            destroy: function () {\n                delete this.chartService;\n            }\n        });\n        setDefaultOptions(BaseTooltip, {\n            border: { width: 1 },\n            opacity: 1\n        });\n        var CrosshairTooltip = BaseTooltip.extend({\n            init: function (chartService, crosshair, options) {\n                BaseTooltip.fn.init.call(this, chartService, options);\n                this.crosshair = crosshair;\n                this.formatService = chartService.format;\n                this.initAxisName();\n            },\n            initAxisName: function () {\n                var axis = this.crosshair.axis;\n                var plotArea = axis.plotArea;\n                var name;\n                if (plotArea.categoryAxis) {\n                    name = axis.getCategory ? 'categoryAxis' : 'valueAxis';\n                } else {\n                    name = axis.options.vertical ? 'yAxis' : 'xAxis';\n                }\n                this.axisName = name;\n            },\n            showAt: function (point) {\n                var ref = this;\n                var axis = ref.crosshair.axis;\n                var options = ref.options;\n                var value = axis[options.stickyMode ? 'getCategory' : 'getValue'](point);\n                var formattedValue = value;\n                if (options.format) {\n                    formattedValue = this.formatService.auto(options.format, value);\n                } else if (axis.options.type === DATE) {\n                    formattedValue = this.formatService.auto(axis.options.labels.dateFormats[axis.options.baseUnit], value);\n                }\n                this.show({\n                    point: point,\n                    anchor: this.getAnchor(),\n                    crosshair: this.crosshair,\n                    value: formattedValue,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                }, this.options);\n            },\n            hide: function () {\n                this.chartService.notify(HIDE_TOOLTIP, {\n                    crosshair: this.crosshair,\n                    axisName: this.axisName,\n                    axisIndex: this.crosshair.axis.axisIndex\n                });\n            },\n            getAnchor: function () {\n                var ref = this;\n                var crosshair = ref.crosshair;\n                var ref_options = ref.options;\n                var position = ref_options.position;\n                var padding = ref_options.padding;\n                var vertical = !crosshair.axis.options.vertical;\n                var lineBox = crosshair.line.bbox();\n                var horizontalAlign, verticalAlign, point;\n                if (vertical) {\n                    horizontalAlign = CENTER;\n                    if (position === BOTTOM) {\n                        verticalAlign = TOP;\n                        point = lineBox.bottomLeft().translate(0, padding);\n                    } else {\n                        verticalAlign = BOTTOM;\n                        point = lineBox.topLeft().translate(0, -padding);\n                    }\n                } else {\n                    verticalAlign = CENTER;\n                    if (position === LEFT) {\n                        horizontalAlign = RIGHT;\n                        point = lineBox.topLeft().translate(-padding, 0);\n                    } else {\n                        horizontalAlign = LEFT;\n                        point = lineBox.topRight().translate(padding, 0);\n                    }\n                }\n                return {\n                    point: point,\n                    align: {\n                        horizontal: horizontalAlign,\n                        vertical: verticalAlign\n                    }\n                };\n            }\n        });\n        setDefaultOptions(CrosshairTooltip, { padding: 10 });\n        var Crosshair = ChartElement.extend({\n            init: function (chartService, axis, options) {\n                ChartElement.fn.init.call(this, options);\n                this.axis = axis;\n                this.stickyMode = axis instanceof CategoryAxis;\n                var tooltipOptions = this.options.tooltip;\n                if (tooltipOptions.visible) {\n                    this.tooltip = new CrosshairTooltip(chartService, this, deepExtend({}, tooltipOptions, { stickyMode: this.stickyMode }));\n                }\n            },\n            showAt: function (point) {\n                this.point = point;\n                this.moveLine();\n                this.line.visible(true);\n                if (this.tooltip) {\n                    this.tooltip.showAt(point);\n                }\n            },\n            hide: function () {\n                this.line.visible(false);\n                if (this.tooltip) {\n                    this.tooltip.hide();\n                }\n            },\n            moveLine: function () {\n                var ref = this;\n                var axis = ref.axis;\n                var point = ref.point;\n                var vertical = axis.options.vertical;\n                var box = this.getBox();\n                var dim = vertical ? Y : X;\n                var lineStart = new GeometryPoint(box.x1, box.y1);\n                var lineEnd;\n                if (vertical) {\n                    lineEnd = new GeometryPoint(box.x2, box.y1);\n                } else {\n                    lineEnd = new GeometryPoint(box.x1, box.y2);\n                }\n                if (point) {\n                    if (this.stickyMode) {\n                        var slot = axis.getSlot(axis.pointCategoryIndex(point));\n                        lineStart[dim] = lineEnd[dim] = slot.center()[dim];\n                    } else {\n                        lineStart[dim] = lineEnd[dim] = point[dim];\n                    }\n                }\n                this.box = box;\n                this.line.moveTo(lineStart).lineTo(lineEnd);\n            },\n            getBox: function () {\n                var axis = this.axis;\n                var axes = axis.pane.axes;\n                var length = axes.length;\n                var vertical = axis.options.vertical;\n                var box = axis.lineBox().clone();\n                var dim = vertical ? X : Y;\n                var axisLineBox;\n                for (var i = 0; i < length; i++) {\n                    var currentAxis = axes[i];\n                    if (currentAxis.options.vertical !== vertical) {\n                        if (!axisLineBox) {\n                            axisLineBox = currentAxis.lineBox().clone();\n                        } else {\n                            axisLineBox.wrap(currentAxis.lineBox());\n                        }\n                    }\n                }\n                box[dim + 1] = axisLineBox[dim + 1];\n                box[dim + 2] = axisLineBox[dim + 2];\n                return box;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options;\n                this.line = new Path({\n                    stroke: {\n                        color: options.color,\n                        width: options.width,\n                        opacity: options.opacity,\n                        dashType: options.dashType\n                    },\n                    visible: false\n                });\n                this.moveLine();\n                this.visual.append(this.line);\n            },\n            destroy: function () {\n                if (this.tooltip) {\n                    this.tooltip.destroy();\n                }\n                ChartElement.fn.destroy.call(this);\n            }\n        });\n        setDefaultOptions(Crosshair, {\n            color: BLACK,\n            width: 2,\n            zIndex: -1,\n            tooltip: { visible: false }\n        });\n        var ChartContainer = ChartElement.extend({\n            init: function (options, pane) {\n                ChartElement.fn.init.call(this, options);\n                this.pane = pane;\n            },\n            shouldClip: function () {\n                var children = this.children;\n                var length = children.length;\n                for (var i = 0; i < length; i++) {\n                    if (children[i].options.clip === true) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _clipBox: function () {\n                return this.pane.chartsBox();\n            },\n            createVisual: function () {\n                this.visual = new Group({ zIndex: 0 });\n                if (this.shouldClip()) {\n                    var clipBox = this.clipBox = this._clipBox();\n                    var clipRect = clipBox.toRect();\n                    var clipPath = Path.fromRect(clipRect);\n                    alignPathToPixel(clipPath);\n                    this.visual.clip(clipPath);\n                    this.unclipLabels();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            unclipLabels: function () {\n                var ref = this;\n                var charts = ref.children;\n                var clipBox = ref.clipBox;\n                for (var i = 0; i < charts.length; i++) {\n                    var points = charts[i].points || {};\n                    var length = points.length;\n                    for (var j = 0; j < length; j++) {\n                        var point = points[j];\n                        if (point && point.visible !== false && point.overlapsBox && point.overlapsBox(clipBox)) {\n                            if (point.unclipElements) {\n                                point.unclipElements();\n                            } else {\n                                var label = point.label;\n                                var note = point.note;\n                                if (label && label.options.visible) {\n                                    if (label.alignToClipBox) {\n                                        label.alignToClipBox(clipBox);\n                                    }\n                                    label.options.noclip = true;\n                                }\n                                if (note && note.options.visible) {\n                                    note.options.noclip = true;\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n            destroy: function () {\n                ChartElement.fn.destroy.call(this);\n                delete this.parent;\n            }\n        });\n        ChartContainer.prototype.isStackRoot = true;\n        var Pane = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.id = paneID();\n                this.createTitle();\n                this.content = new ChartElement();\n                this.chartContainer = new ChartContainer({}, this);\n                this.append(this.content);\n                this.axes = [];\n                this.charts = [];\n            },\n            createTitle: function () {\n                var titleOptions = this.options.title;\n                if (isObject(titleOptions)) {\n                    titleOptions = deepExtend({}, titleOptions, {\n                        align: titleOptions.position,\n                        position: TOP\n                    });\n                }\n                this.title = dataviz.Title.buildTitle(titleOptions, this, Pane.prototype.options.title);\n            },\n            appendAxis: function (axis) {\n                this.content.append(axis);\n                this.axes.push(axis);\n                axis.pane = this;\n            },\n            appendAxisAt: function (axis, pos) {\n                this.content.append(axis);\n                this.axes.splice(pos, 0, axis);\n                axis.pane = this;\n            },\n            appendChart: function (chart) {\n                if (this.chartContainer.parent !== this.content) {\n                    this.content.append(this.chartContainer);\n                }\n                this.charts.push(chart);\n                this.chartContainer.append(chart);\n                chart.pane = this;\n            },\n            empty: function () {\n                var this$1 = this;\n                var plotArea = this.parent;\n                if (plotArea) {\n                    for (var i = 0; i < this.axes.length; i++) {\n                        plotArea.removeAxis(this$1.axes[i]);\n                    }\n                    for (var i$1 = 0; i$1 < this.charts.length; i$1++) {\n                        plotArea.removeChart(this$1.charts[i$1]);\n                    }\n                }\n                this.axes = [];\n                this.charts = [];\n                this.content.destroy();\n                this.content.children = [];\n                this.chartContainer.children = [];\n            },\n            reflow: function (targetBox) {\n                var content;\n                if (last(this.children) === this.content) {\n                    content = this.children.pop();\n                }\n                BoxElement.fn.reflow.call(this, targetBox);\n                if (content) {\n                    this.children.push(content);\n                }\n                if (this.title) {\n                    this.contentBox.y1 += this.title.box.height();\n                }\n            },\n            visualStyle: function () {\n                var style = BoxElement.fn.visualStyle.call(this);\n                style.zIndex = -10;\n                return style;\n            },\n            renderComplete: function () {\n                if (this.options.visible) {\n                    this.createGridLines();\n                }\n            },\n            stackRoot: function () {\n                return this;\n            },\n            clipRoot: function () {\n                return this;\n            },\n            createGridLines: function () {\n                var axes = this.axes;\n                var allAxes = axes.concat(this.parent.axes);\n                var vGridLines = [];\n                var hGridLines = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var vertical = axis.options.vertical;\n                    var gridLines = vertical ? vGridLines : hGridLines;\n                    for (var j = 0; j < allAxes.length; j++) {\n                        if (gridLines.length === 0) {\n                            var altAxis = allAxes[j];\n                            if (vertical !== altAxis.options.vertical) {\n                                append(gridLines, axis.createGridLines(altAxis));\n                            }\n                        }\n                    }\n                }\n            },\n            refresh: function () {\n                this.visual.clear();\n                this.content.parent = null;\n                this.content.createGradient = this.createGradient.bind(this);\n                this.content.renderVisual();\n                this.content.parent = this;\n                if (this.title) {\n                    this.visual.append(this.title.visual);\n                }\n                this.visual.append(this.content.visual);\n                this.renderComplete();\n                this.notifyRender();\n            },\n            chartsBox: function () {\n                var axes = this.axes;\n                var length = axes.length;\n                var chartsBox = new Box();\n                for (var idx = 0; idx < length; idx++) {\n                    var axis = axes[idx];\n                    var axisValueField = axis.options.vertical ? Y : X;\n                    var lineBox = axis.lineBox();\n                    chartsBox[axisValueField + 1] = lineBox[axisValueField + 1];\n                    chartsBox[axisValueField + 2] = lineBox[axisValueField + 2];\n                }\n                if (chartsBox.x2 === 0) {\n                    var allAxes = this.parent.axes;\n                    var length$1 = allAxes.length;\n                    for (var idx$1 = 0; idx$1 < length$1; idx$1++) {\n                        var axis$1 = allAxes[idx$1];\n                        if (!axis$1.options.vertical) {\n                            var lineBox$1 = axis$1.lineBox();\n                            chartsBox.x1 = lineBox$1.x1;\n                            chartsBox.x2 = lineBox$1.x2;\n                        }\n                    }\n                }\n                return chartsBox;\n            },\n            clipBox: function () {\n                return this.chartContainer.clipBox;\n            },\n            notifyRender: function () {\n                var service = this.getService();\n                if (service) {\n                    service.notify(PANE_RENDER, {\n                        pane: new ChartPane(this),\n                        index: this.paneIndex,\n                        name: this.options.name\n                    });\n                }\n            }\n        });\n        var ID = 1;\n        function paneID() {\n            return 'pane' + ID++;\n        }\n        Pane.prototype.isStackRoot = true;\n        setDefaultOptions(Pane, {\n            zIndex: -1,\n            shrinkToFit: true,\n            title: { align: LEFT },\n            visible: true\n        });\n        function appendIfNotNull(array, element) {\n            if (element !== null) {\n                array.push(element);\n            }\n        }\n        function segmentVisible(series, fields, index) {\n            var visible = fields.visible;\n            if (defined(visible)) {\n                return visible;\n            }\n            var pointVisibility = series.pointVisibility;\n            if (pointVisibility) {\n                return pointVisibility[index];\n            }\n        }\n        function bindSegments(series) {\n            var data = series.data;\n            var points = [];\n            var sum = 0;\n            var count = 0;\n            for (var idx = 0; idx < data.length; idx++) {\n                var pointData = SeriesBinder.current.bindPoint(series, idx);\n                var value = pointData.valueFields.value;\n                if (isString(value)) {\n                    value = parseFloat(value);\n                }\n                if (isNumber(value)) {\n                    pointData.visible = segmentVisible(series, pointData.fields, idx) !== false;\n                    pointData.value = Math.abs(value);\n                    points.push(pointData);\n                    if (pointData.visible) {\n                        sum += pointData.value;\n                    }\n                    if (value !== 0) {\n                        count++;\n                    }\n                } else {\n                    points.push(null);\n                }\n            }\n            return {\n                total: sum,\n                points: points,\n                count: count\n            };\n        }\n        function equalsIgnoreCase(a, b) {\n            if (a && b) {\n                return a.toLowerCase() === b.toLowerCase();\n            }\n            return a === b;\n        }\n        function filterSeriesByType(series, types) {\n            var result = [];\n            var seriesTypes = [].concat(types);\n            for (var idx = 0; idx < series.length; idx++) {\n                var currentSeries = series[idx];\n                if (inArray(currentSeries.type, seriesTypes)) {\n                    result.push(currentSeries);\n                }\n            }\n            return result;\n        }\n        function getDateField(field, row, intlService) {\n            if (row === null) {\n                return row;\n            }\n            var key = '_date_' + field;\n            var value = row[key];\n            if (!value) {\n                value = parseDate(intlService, getter(field, true)(row));\n                row[key] = value;\n            }\n            return value;\n        }\n        function isDateAxis(axisOptions, sampleCategory) {\n            var type = axisOptions.type;\n            var dateCategory = sampleCategory instanceof Date;\n            return !type && dateCategory || equalsIgnoreCase(type, DATE);\n        }\n        function singleItemOrArray(array) {\n            return array.length === 1 ? array[0] : array;\n        }\n        var AREA_REGEX = /area/i;\n        function seriesMissingValues(series) {\n            if (series.missingValues) {\n                return series.missingValues;\n            }\n            return AREA_REGEX.test(series.type) || series.stack ? ZERO : INTERPOLATE;\n        }\n        function hasValue$1(series, item) {\n            var fields = SeriesBinder.current.bindPoint(series, null, item);\n            var valueFields = fields.valueFields;\n            for (var field in valueFields) {\n                if (dataviz.convertableToNumber(valueFields[field])) {\n                    return true;\n                }\n            }\n        }\n        function findNext(ref) {\n            var start = ref.start;\n            var dir = ref.dir;\n            var min = ref.min;\n            var max = ref.max;\n            var getter$$1 = ref.getter;\n            var hasItem = ref.hasItem;\n            var series = ref.series;\n            var pointHasValue, outPoint;\n            var idx = start;\n            do {\n                idx += dir;\n                if (hasItem(idx)) {\n                    outPoint = getter$$1(idx);\n                    pointHasValue = hasValue$1(series, outPoint.item);\n                }\n            } while (min <= idx && idx <= max && !pointHasValue);\n            if (pointHasValue) {\n                return outPoint;\n            }\n        }\n        function createOutOfRangePoints(series, range, count, getter$$1, hasItem) {\n            var min = range.min;\n            var max = range.max;\n            var hasMinPoint = min > 0 && min < count;\n            var hasMaxPoint = max + 1 < count;\n            if (hasMinPoint || hasMaxPoint) {\n                var missingValues = seriesMissingValues(series);\n                var minPoint, maxPoint;\n                if (missingValues !== INTERPOLATE) {\n                    if (hasMinPoint) {\n                        minPoint = getter$$1(min - 1);\n                    }\n                    if (hasMaxPoint) {\n                        maxPoint = getter$$1(max + 1);\n                    }\n                } else {\n                    var outPoint, pointHasValue;\n                    if (hasMinPoint) {\n                        outPoint = getter$$1(min - 1);\n                        pointHasValue = hasValue$1(series, outPoint.item);\n                        if (!pointHasValue) {\n                            minPoint = findNext({\n                                start: min,\n                                dir: -1,\n                                min: 0,\n                                max: count - 1,\n                                getter: getter$$1,\n                                hasItem: hasItem,\n                                series: series\n                            });\n                        } else {\n                            minPoint = outPoint;\n                        }\n                    }\n                    if (hasMaxPoint) {\n                        outPoint = getter$$1(max + 1);\n                        pointHasValue = hasValue$1(series, outPoint.item);\n                        if (!pointHasValue) {\n                            maxPoint = findNext({\n                                start: max,\n                                dir: 1,\n                                min: 0,\n                                max: count - 1,\n                                getter: getter$$1,\n                                hasItem: hasItem,\n                                series: series\n                            });\n                        } else {\n                            maxPoint = outPoint;\n                        }\n                    }\n                }\n                if (minPoint) {\n                    series._outOfRangeMinPoint = minPoint;\n                }\n                if (maxPoint) {\n                    series._outOfRangeMaxPoint = maxPoint;\n                }\n            }\n        }\n        var PlotAreaBase = ChartElement.extend({\n            init: function (series, options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.initFields(series, options);\n                this.series = series;\n                this.initSeries();\n                this.charts = [];\n                this.options.legend = this.options.legend || {};\n                this.options.legend.items = [];\n                this.axes = [];\n                this.crosshairs = [];\n                this.chartService = chartService;\n                this.originalOptions = options;\n                this.createPanes();\n                this.render();\n                this.createCrosshairs();\n            },\n            initFields: function () {\n            },\n            initSeries: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    series[i].index = i;\n                }\n            },\n            createPanes: function () {\n                var this$1 = this;\n                var defaults = { title: { color: (this.options.title || {}).color } };\n                var panes = [];\n                var paneOptions = this.options.panes || [];\n                var panesLength = Math.max(paneOptions.length, 1);\n                function setTitle(options, defaults) {\n                    if (isString(options.title)) {\n                        options.title = { text: options.title };\n                    }\n                    options.title = deepExtend({}, defaults.title, options.title);\n                }\n                for (var i = 0; i < panesLength; i++) {\n                    var options = paneOptions[i] || {};\n                    setTitle(options, defaults);\n                    var currentPane = new Pane(options);\n                    currentPane.paneIndex = i;\n                    panes.push(currentPane);\n                    this$1.append(currentPane);\n                }\n                this.panes = panes;\n            },\n            createCrosshairs: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    for (var j = 0; j < pane.axes.length; j++) {\n                        var axis = pane.axes[j];\n                        if (axis.options.crosshair && axis.options.crosshair.visible) {\n                            var currentCrosshair = new Crosshair(this$1.chartService, axis, axis.options.crosshair);\n                            this$1.crosshairs.push(currentCrosshair);\n                            pane.content.append(currentCrosshair);\n                        }\n                    }\n                }\n            },\n            removeCrosshairs: function (pane) {\n                var crosshairs = this.crosshairs;\n                var axes = pane.axes;\n                for (var i = crosshairs.length - 1; i >= 0; i--) {\n                    for (var j = 0; j < axes.length; j++) {\n                        if (crosshairs[i].axis === axes[j]) {\n                            crosshairs.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n            hideCrosshairs: function () {\n                var crosshairs = this.crosshairs;\n                for (var idx = 0; idx < crosshairs.length; idx++) {\n                    crosshairs[idx].hide();\n                }\n            },\n            findPane: function (name) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].options.name === name) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane || panes[0];\n            },\n            findPointPane: function (point) {\n                var panes = this.panes;\n                var matchingPane;\n                for (var i = 0; i < panes.length; i++) {\n                    if (panes[i].box.containsPoint(point)) {\n                        matchingPane = panes[i];\n                        break;\n                    }\n                }\n                return matchingPane;\n            },\n            appendAxis: function (axis) {\n                var pane = this.findPane(axis.options.pane);\n                pane.appendAxis(axis);\n                this.axes.push(axis);\n                axis.plotArea = this;\n            },\n            removeAxis: function (axisToRemove) {\n                var this$1 = this;\n                var filteredAxes = [];\n                for (var i = 0; i < this.axes.length; i++) {\n                    var axis = this$1.axes[i];\n                    if (axisToRemove !== axis) {\n                        filteredAxes.push(axis);\n                    } else {\n                        axis.destroy();\n                    }\n                }\n                this.axes = filteredAxes;\n            },\n            appendChart: function (chart, pane) {\n                this.charts.push(chart);\n                if (pane) {\n                    pane.appendChart(chart);\n                } else {\n                    this.append(chart);\n                }\n            },\n            removeChart: function (chartToRemove) {\n                var this$1 = this;\n                var filteredCharts = [];\n                for (var i = 0; i < this.charts.length; i++) {\n                    var chart = this$1.charts[i];\n                    if (chart !== chartToRemove) {\n                        filteredCharts.push(chart);\n                    } else {\n                        chart.destroy();\n                    }\n                }\n                this.charts = filteredCharts;\n            },\n            addToLegend: function (series) {\n                var count = series.length;\n                var legend = this.options.legend;\n                var labels = legend.labels || {};\n                var inactiveItems = legend.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                var data = [];\n                for (var i = 0; i < count; i++) {\n                    var currentSeries = series[i];\n                    var seriesVisible = currentSeries.visible !== false;\n                    if (currentSeries.visibleInLegend === false) {\n                        continue;\n                    }\n                    var text = currentSeries.name;\n                    var labelTemplate = seriesVisible ? getTemplate(labels) : getTemplate(inactiveItemsLabels) || getTemplate(labels);\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: hasValue(text) ? text : '',\n                            series: currentSeries\n                        });\n                    }\n                    var defaults = currentSeries._defaults;\n                    var color = currentSeries.color;\n                    if (isFunction(color) && defaults) {\n                        color = defaults.color;\n                    }\n                    var itemLabelOptions = void 0, markerColor = void 0;\n                    if (seriesVisible) {\n                        itemLabelOptions = {};\n                        markerColor = color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = inactiveItems.markers.color;\n                    }\n                    if (hasValue(text) && text !== '') {\n                        data.push({\n                            text: text,\n                            labels: itemLabelOptions,\n                            markerColor: markerColor,\n                            series: currentSeries,\n                            active: seriesVisible\n                        });\n                    }\n                }\n                append(legend.items, data);\n            },\n            groupAxes: function (panes) {\n                var xAxes = [];\n                var yAxes = [];\n                for (var paneIx = 0; paneIx < panes.length; paneIx++) {\n                    var paneAxes = panes[paneIx].axes;\n                    for (var axisIx = 0; axisIx < paneAxes.length; axisIx++) {\n                        var axis = paneAxes[axisIx];\n                        if (axis.options.vertical) {\n                            yAxes.push(axis);\n                        } else {\n                            xAxes.push(axis);\n                        }\n                    }\n                }\n                return {\n                    x: xAxes,\n                    y: yAxes,\n                    any: xAxes.concat(yAxes)\n                };\n            },\n            groupSeriesByPane: function () {\n                var this$1 = this;\n                var series = this.series;\n                var seriesByPane = {};\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var pane = this$1.seriesPaneName(currentSeries);\n                    if (seriesByPane[pane]) {\n                        seriesByPane[pane].push(currentSeries);\n                    } else {\n                        seriesByPane[pane] = [currentSeries];\n                    }\n                }\n                return seriesByPane;\n            },\n            filterVisibleSeries: function (series) {\n                var result = [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (currentSeries.visible !== false) {\n                        result.push(currentSeries);\n                    }\n                }\n                return result;\n            },\n            reflow: function (targetBox) {\n                var options = this.options.plotArea;\n                var panes = this.panes;\n                var margin = getSpacing(options.margin);\n                this.box = targetBox.clone().unpad(margin);\n                this.reflowPanes();\n                this.detachLabels();\n                this.reflowAxes(panes);\n                this.reflowCharts(panes);\n            },\n            redraw: function (panes) {\n                var this$1 = this;\n                var panesArray = [].concat(panes);\n                this.initSeries();\n                var root = this.getRoot();\n                if (root) {\n                    root.cleanGradients();\n                }\n                for (var i = 0; i < panesArray.length; i++) {\n                    this$1.removeCrosshairs(panesArray[i]);\n                    panesArray[i].empty();\n                }\n                this.render(panesArray);\n                this.detachLabels();\n                this.reflowAxes(this.panes);\n                this.reflowCharts(panesArray);\n                this.createCrosshairs(panesArray);\n                for (var i$1 = 0; i$1 < panesArray.length; i$1++) {\n                    panesArray[i$1].refresh();\n                }\n            },\n            axisCrossingValues: function (axis, crossingAxes) {\n                var options = axis.options;\n                var crossingValues = [].concat(options.axisCrossingValues || options.axisCrossingValue);\n                var valuesToAdd = crossingAxes.length - crossingValues.length;\n                var defaultValue = crossingValues[0] || 0;\n                for (var i = 0; i < valuesToAdd; i++) {\n                    crossingValues.push(defaultValue);\n                }\n                return crossingValues;\n            },\n            alignAxisTo: function (axis, targetAxis, crossingValue, targetCrossingValue) {\n                var slot = axis.getSlot(crossingValue, crossingValue, true);\n                var slotEdge = axis.options.reverse ? 2 : 1;\n                var targetSlot = targetAxis.getSlot(targetCrossingValue, targetCrossingValue, true);\n                var targetEdge = targetAxis.options.reverse ? 2 : 1;\n                var axisBox = axis.box.translate(targetSlot[X + targetEdge] - slot[X + slotEdge], targetSlot[Y + targetEdge] - slot[Y + slotEdge]);\n                if (axis.pane !== targetAxis.pane) {\n                    axisBox.translate(0, axis.pane.box.y1 - targetAxis.pane.box.y1);\n                }\n                axis.reflow(axisBox);\n            },\n            alignAxes: function (xAxes, yAxes) {\n                var this$1 = this;\n                var xAnchor = xAxes[0];\n                var yAnchor = yAxes[0];\n                var xAnchorCrossings = this.axisCrossingValues(xAnchor, yAxes);\n                var yAnchorCrossings = this.axisCrossingValues(yAnchor, xAxes);\n                var leftAnchors = {};\n                var rightAnchors = {};\n                var topAnchors = {};\n                var bottomAnchors = {};\n                for (var i = 0; i < yAxes.length; i++) {\n                    var axis = yAxes[i];\n                    var pane = axis.pane;\n                    var paneId = pane.id;\n                    var visible = axis.options.visible !== false;\n                    var anchor = paneAnchor(xAxes, pane) || xAnchor;\n                    var anchorCrossings = xAnchorCrossings;\n                    if (anchor !== xAnchor) {\n                        anchorCrossings = this$1.axisCrossingValues(anchor, yAxes);\n                    }\n                    this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                    if (axis.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis.lineBox().x1) === round(anchor.lineBox().x1)) {\n                        if (leftAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(leftAnchors[paneId].box, LEFT).translate(-axis.options.margin, 0));\n                        }\n                        if (visible) {\n                            leftAnchors[paneId] = axis;\n                        }\n                    }\n                    if (round(axis.lineBox().x2) === round(anchor.lineBox().x2)) {\n                        if (!axis._mirrored) {\n                            axis.options.labels.mirror = !axis.options.labels.mirror;\n                            axis._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis, anchor, yAnchorCrossings[i], anchorCrossings[i]);\n                        if (rightAnchors[paneId]) {\n                            axis.reflow(axis.box.alignTo(rightAnchors[paneId].box, RIGHT).translate(axis.options.margin, 0));\n                        }\n                        if (visible) {\n                            rightAnchors[paneId] = axis;\n                        }\n                    }\n                    if (i !== 0 && yAnchor.pane === axis.pane) {\n                        axis.alignTo(yAnchor);\n                        axis.reflow(axis.box);\n                    }\n                }\n                for (var i$1 = 0; i$1 < xAxes.length; i$1++) {\n                    var axis$1 = xAxes[i$1];\n                    var pane$1 = axis$1.pane;\n                    var paneId$1 = pane$1.id;\n                    var visible$1 = axis$1.options.visible !== false;\n                    var anchor$1 = paneAnchor(yAxes, pane$1) || yAnchor;\n                    var anchorCrossings$1 = yAnchorCrossings;\n                    if (anchor$1 !== yAnchor) {\n                        anchorCrossings$1 = this$1.axisCrossingValues(anchor$1, xAxes);\n                    }\n                    this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                    if (axis$1.options._overlap) {\n                        continue;\n                    }\n                    if (round(axis$1.lineBox().y1) === round(anchor$1.lineBox().y1)) {\n                        if (!axis$1._mirrored) {\n                            axis$1.options.labels.mirror = !axis$1.options.labels.mirror;\n                            axis$1._mirrored = true;\n                        }\n                        this$1.alignAxisTo(axis$1, anchor$1, xAnchorCrossings[i$1], anchorCrossings$1[i$1]);\n                        if (topAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(topAnchors[paneId$1].box, TOP).translate(0, -axis$1.options.margin));\n                        }\n                        if (visible$1) {\n                            topAnchors[paneId$1] = axis$1;\n                        }\n                    }\n                    if (round(axis$1.lineBox().y2, datavizConstants.COORD_PRECISION) === round(anchor$1.lineBox().y2, datavizConstants.COORD_PRECISION)) {\n                        if (bottomAnchors[paneId$1]) {\n                            axis$1.reflow(axis$1.box.alignTo(bottomAnchors[paneId$1].box, BOTTOM).translate(0, axis$1.options.margin));\n                        }\n                        if (visible$1) {\n                            bottomAnchors[paneId$1] = axis$1;\n                        }\n                    }\n                    if (i$1 !== 0) {\n                        axis$1.alignTo(xAnchor);\n                        axis$1.reflow(axis$1.box);\n                    }\n                }\n            },\n            shrinkAxisWidth: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var axisBox = axisGroupBox(axes);\n                var overflowX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.axes.length > 0) {\n                        overflowX = Math.max(overflowX, axisBox.width() - currentPane.contentBox.width());\n                    }\n                }\n                if (overflowX !== 0) {\n                    for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                        var currentAxis = axes[i$1];\n                        if (!currentAxis.options.vertical) {\n                            currentAxis.reflow(currentAxis.box.shrink(overflowX, 0));\n                        }\n                    }\n                }\n            },\n            shrinkAxisHeight: function (panes) {\n                var shrinked;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var axes = currentPane.axes;\n                    var overflowY = Math.max(0, axisGroupBox(axes).height() - currentPane.contentBox.height());\n                    if (overflowY !== 0) {\n                        for (var j = 0; j < axes.length; j++) {\n                            var currentAxis = axes[j];\n                            if (currentAxis.options.vertical) {\n                                currentAxis.reflow(currentAxis.box.shrink(0, overflowY));\n                            }\n                        }\n                        shrinked = true;\n                    }\n                }\n                return shrinked;\n            },\n            fitAxes: function (panes) {\n                var axes = this.groupAxes(panes).any;\n                var offsetX = 0;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    var paneAxes = currentPane.axes;\n                    var paneBox = currentPane.contentBox;\n                    if (paneAxes.length > 0) {\n                        var axisBox = axisGroupBox(paneAxes);\n                        var offsetY = Math.max(paneBox.y1 - axisBox.y1, paneBox.y2 - axisBox.y2);\n                        offsetX = Math.max(offsetX, paneBox.x1 - axisBox.x1);\n                        for (var j = 0; j < paneAxes.length; j++) {\n                            var currentAxis = paneAxes[j];\n                            currentAxis.reflow(currentAxis.box.translate(0, offsetY));\n                        }\n                    }\n                }\n                for (var i$1 = 0; i$1 < axes.length; i$1++) {\n                    var currentAxis$1 = axes[i$1];\n                    currentAxis$1.reflow(currentAxis$1.box.translate(offsetX, 0));\n                }\n            },\n            reflowAxes: function (panes) {\n                var this$1 = this;\n                var axes = this.groupAxes(panes);\n                for (var i = 0; i < panes.length; i++) {\n                    this$1.reflowPaneAxes(panes[i]);\n                }\n                if (axes.x.length > 0 && axes.y.length > 0) {\n                    this.alignAxes(axes.x, axes.y);\n                    this.shrinkAxisWidth(panes);\n                    this.autoRotateAxisLabels(axes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisWidth(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.shrinkAxisHeight(panes);\n                    this.alignAxes(axes.x, axes.y);\n                    if (this.shrinkAxisHeight(panes)) {\n                        this.alignAxes(axes.x, axes.y);\n                    }\n                    this.fitAxes(panes);\n                }\n            },\n            autoRotateAxisLabels: function (groupedAxes) {\n                var this$1 = this;\n                var ref = this;\n                var panes = ref.panes;\n                var axes = allPaneAxes(panes);\n                var rotated;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    if (axis.autoRotateLabels()) {\n                        rotated = true;\n                    }\n                }\n                if (rotated) {\n                    for (var idx$1 = 0; idx$1 < panes.length; idx$1++) {\n                        this$1.reflowPaneAxes(panes[idx$1]);\n                    }\n                    if (groupedAxes.x.length > 0 && groupedAxes.y.length > 0) {\n                        this.alignAxes(groupedAxes.x, groupedAxes.y);\n                        this.shrinkAxisWidth(panes);\n                    }\n                }\n            },\n            reflowPaneAxes: function (pane) {\n                var axes = pane.axes;\n                var length = axes.length;\n                if (length > 0) {\n                    for (var i = 0; i < length; i++) {\n                        axes[i].reflow(pane.contentBox);\n                    }\n                }\n            },\n            reflowCharts: function (panes) {\n                var charts = this.charts;\n                var count = charts.length;\n                var box = this.box;\n                for (var i = 0; i < count; i++) {\n                    var chartPane = charts[i].pane;\n                    if (!chartPane || inArray(chartPane, panes)) {\n                        charts[i].reflow(box);\n                    }\n                }\n            },\n            reflowPanes: function () {\n                var ref = this;\n                var box = ref.box;\n                var panes = ref.panes;\n                var panesLength = panes.length;\n                var remainingHeight = box.height();\n                var remainingPanes = panesLength;\n                var autoHeightPanes = 0;\n                var top = box.y1;\n                for (var i = 0; i < panesLength; i++) {\n                    var currentPane = panes[i];\n                    var height = currentPane.options.height;\n                    currentPane.options.width = box.width();\n                    if (!currentPane.options.height) {\n                        autoHeightPanes++;\n                    } else {\n                        if (height.indexOf && height.indexOf('%')) {\n                            var percents = parseInt(height, 10) / 100;\n                            currentPane.options.height = percents * box.height();\n                        }\n                        currentPane.reflow(box.clone());\n                        remainingHeight -= currentPane.options.height;\n                    }\n                }\n                for (var i$1 = 0; i$1 < panesLength; i$1++) {\n                    var currentPane$1 = panes[i$1];\n                    if (!currentPane$1.options.height) {\n                        currentPane$1.options.height = remainingHeight / autoHeightPanes;\n                    }\n                }\n                for (var i$2 = 0; i$2 < panesLength; i$2++) {\n                    var currentPane$2 = panes[i$2];\n                    var paneBox = box.clone().move(box.x1, top);\n                    currentPane$2.reflow(paneBox);\n                    remainingPanes--;\n                    top += currentPane$2.options.height;\n                }\n            },\n            backgroundBox: function () {\n                var axes = this.axes;\n                var axesCount = axes.length;\n                var box;\n                for (var i = 0; i < axesCount; i++) {\n                    var axisA = axes[i];\n                    for (var j = 0; j < axesCount; j++) {\n                        var axisB = axes[j];\n                        if (axisA.options.vertical !== axisB.options.vertical) {\n                            var lineBox = axisA.lineBox().clone().wrap(axisB.lineBox());\n                            if (!box) {\n                                box = lineBox;\n                            } else {\n                                box = box.wrap(lineBox);\n                            }\n                        }\n                    }\n                }\n                return box || this.box;\n            },\n            chartsBoxes: function () {\n                var panes = this.panes;\n                var boxes = [];\n                for (var idx = 0; idx < panes.length; idx++) {\n                    boxes.push(panes[idx].chartsBox());\n                }\n                return boxes;\n            },\n            addBackgroundPaths: function (multipath) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    multipath.paths.push(Path.fromRect(boxes[idx].toRect()));\n                }\n            },\n            backgroundContainsPoint: function (point) {\n                var boxes = this.chartsBoxes();\n                for (var idx = 0; idx < boxes.length; idx++) {\n                    if (boxes[idx].containsPoint(point)) {\n                        return true;\n                    }\n                }\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var options = this.options.plotArea;\n                var opacity = options.opacity;\n                var background = options.background;\n                var border = options.border;\n                if (border === void 0) {\n                    border = {};\n                }\n                if (isTransparent(background)) {\n                    background = WHITE;\n                    opacity = 0;\n                }\n                var bg = this._bgVisual = new drawing.MultiPath({\n                    fill: {\n                        color: background,\n                        opacity: opacity\n                    },\n                    stroke: {\n                        color: border.width ? border.color : '',\n                        width: border.width,\n                        dashType: border.dashType\n                    },\n                    zIndex: -1\n                });\n                this.addBackgroundPaths(bg);\n                this.appendVisual(bg);\n            },\n            pointsByCategoryIndex: function (categoryIndex) {\n                var charts = this.charts;\n                var result = [];\n                if (categoryIndex !== null) {\n                    for (var i = 0; i < charts.length; i++) {\n                        var chart = charts[i];\n                        if (chart.pane.options.name === '_navigator') {\n                            continue;\n                        }\n                        var points = charts[i].categoryPoints[categoryIndex];\n                        if (points && points.length) {\n                            for (var j = 0; j < points.length; j++) {\n                                var point = points[j];\n                                if (point && defined(point.value) && point.value !== null) {\n                                    result.push(point);\n                                }\n                            }\n                        }\n                    }\n                }\n                return result;\n            },\n            pointsBySeriesIndex: function (seriesIndex) {\n                return this.filterPoints(function (point) {\n                    return point.series.index === seriesIndex;\n                });\n            },\n            pointsBySeriesName: function (name) {\n                return this.filterPoints(function (point) {\n                    return point.series.name === name;\n                });\n            },\n            filterPoints: function (callback) {\n                var charts = this.charts;\n                var result = [];\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && point.visible !== false && callback(point)) {\n                            result.push(point);\n                        }\n                    }\n                }\n                return result;\n            },\n            findPoint: function (callback) {\n                var charts = this.charts;\n                for (var i = 0; i < charts.length; i++) {\n                    var chart = charts[i];\n                    var points = chart.points;\n                    for (var j = 0; j < points.length; j++) {\n                        var point = points[j];\n                        if (point && point.visible !== false && callback(point)) {\n                            return point;\n                        }\n                    }\n                }\n            },\n            paneByPoint: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    if (pane.box.containsPoint(point)) {\n                        return pane;\n                    }\n                }\n            },\n            detachLabels: function () {\n                var axes = this.groupAxes(this.panes);\n                var xAxes = axes.x;\n                var yAxes = axes.y;\n                this.detachAxisGroupLabels(yAxes, xAxes);\n                this.detachAxisGroupLabels(xAxes, yAxes);\n            },\n            detachAxisGroupLabels: function (axes, crossingAxes) {\n                var this$1 = this;\n                var labelAxisCount = 0;\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var pane = axis.pane;\n                    var anchor = paneAnchor(crossingAxes, pane) || crossingAxes[0];\n                    var axisIndex = i + labelAxisCount;\n                    var labelAxis = this$1.createLabelAxis(axis, axisIndex, anchor);\n                    if (labelAxis) {\n                        labelAxisCount++;\n                        var pos = pane.axes.indexOf(axis) + labelAxisCount;\n                        pane.appendAxisAt(labelAxis, pos);\n                    }\n                }\n            },\n            createLabelAxis: function (axis, axisIndex, anchor) {\n                var labelOptions = axis.options.labels;\n                var position = labelOptions.position;\n                var onAxis = position !== datavizConstants.END && position !== datavizConstants.START;\n                var visible = labelOptions.visible;\n                if (onAxis || visible === false) {\n                    return null;\n                }\n                var allAxes = this.groupAxes(this.panes);\n                var crossingAxes = anchor.options.vertical ? allAxes.x : allAxes.y;\n                var anchorCrossings = this.axisCrossingValues(anchor, crossingAxes);\n                var end = position === datavizConstants.END;\n                var range = anchor.range();\n                var edge = end ? range.max : range.min;\n                var crossingValue = limitValue(anchorCrossings[axisIndex], range.min, range.max);\n                if (crossingValue - edge === 0) {\n                    return null;\n                }\n                anchorCrossings.splice(axisIndex + 1, 0, edge);\n                anchor.options.axisCrossingValues = anchorCrossings;\n                var labelAxis = axis.clone();\n                axis.clear();\n                labelAxis.options.name = undefined;\n                labelAxis.options.line.visible = false;\n                labelAxis.options.crosshair = undefined;\n                labelAxis.options.notes = undefined;\n                labelAxis.options.plotBands = undefined;\n                return labelAxis;\n            }\n        });\n        function isSingleAxis(axis) {\n            return !axis.pane.axes.some(function (a) {\n                return a.options.vertical === axis.options.vertical && a !== axis && a.options.visible !== false;\n            });\n        }\n        function axisGroupBox(axes) {\n            var length = axes.length;\n            var box;\n            for (var i = 0; i < length; i++) {\n                var axis = axes[i];\n                var visible = axis.options.visible !== false;\n                if (visible || isSingleAxis(axis)) {\n                    var axisBox = visible ? axis.contentBox() : axis.lineBox();\n                    if (!box) {\n                        box = axisBox.clone();\n                    } else {\n                        box.wrap(axisBox);\n                    }\n                }\n            }\n            return box || new Box();\n        }\n        function paneAnchor(axes, pane) {\n            for (var i = 0; i < axes.length; i++) {\n                var anchor = axes[i];\n                if (anchor && anchor.pane === pane) {\n                    return anchor;\n                }\n            }\n        }\n        function isTransparent(color) {\n            return color === '' || color === null || color === 'none' || color === 'transparent' || !defined(color);\n        }\n        var allPaneAxes = function (panes) {\n            return panes.reduce(function (acc, pane) {\n                return acc.concat(pane.axes);\n            }, []);\n        };\n        setDefaultOptions(PlotAreaBase, {\n            series: [],\n            plotArea: { margin: {} },\n            background: '',\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            legend: {\n                inactiveItems: {\n                    labels: { color: '#919191' },\n                    markers: { color: '#919191' }\n                }\n            }\n        });\n        var PlotAreaEventsMixin = {\n            hover: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_HOVER);\n            },\n            click: function (chart, e) {\n                this._dispatchEvent(chart, e, PLOT_AREA_CLICK);\n            }\n        };\n        var SeriesAggregator = Class.extend({\n            init: function (series, binder, defaultAggregates) {\n                var canonicalFields = binder.canonicalFields(series);\n                var valueFields = binder.valueFields(series);\n                var sourceFields = binder.sourceFields(series, canonicalFields);\n                var seriesFields = this._seriesFields = [];\n                var defaults = defaultAggregates.query(series.type);\n                var rootAggregate = series.aggregate || defaults;\n                this._series = series;\n                this._binder = binder;\n                for (var i = 0; i < canonicalFields.length; i++) {\n                    var field = canonicalFields[i];\n                    var fieldAggregate = void 0;\n                    if (isObject(rootAggregate)) {\n                        fieldAggregate = rootAggregate[field];\n                    } else if (i === 0 || inArray(field, valueFields)) {\n                        fieldAggregate = rootAggregate;\n                    } else {\n                        break;\n                    }\n                    if (fieldAggregate) {\n                        seriesFields.push({\n                            canonicalName: field,\n                            name: sourceFields[i],\n                            transform: isFunction(fieldAggregate) ? fieldAggregate : Aggregates[fieldAggregate]\n                        });\n                    }\n                }\n            },\n            aggregatePoints: function (srcPoints, group) {\n                var this$1 = this;\n                var ref = this;\n                var series = ref._series;\n                var seriesFields = ref._seriesFields;\n                var data = this._bindPoints(srcPoints || []);\n                var firstDataItem = data.dataItems[0];\n                var result = {};\n                if (firstDataItem && !isNumber(firstDataItem) && !isArray(firstDataItem)) {\n                    var fn = function () {\n                    };\n                    fn.prototype = firstDataItem;\n                    result = new fn();\n                }\n                for (var i = 0; i < seriesFields.length; i++) {\n                    var field = seriesFields[i];\n                    var srcValues = this$1._bindField(data.values, field.canonicalName);\n                    var value = field.transform(srcValues, series, data.dataItems, group);\n                    if (value !== null && isObject(value) && !defined(value.length) && !(value instanceof Date)) {\n                        result = value;\n                        break;\n                    } else {\n                        if (defined(value)) {\n                            setValue(field.name, result, value);\n                        }\n                    }\n                }\n                return result;\n            },\n            _bindPoints: function (points) {\n                var ref = this;\n                var binder = ref._binder;\n                var series = ref._series;\n                var values = [];\n                var dataItems = [];\n                for (var i = 0; i < points.length; i++) {\n                    var pointIx = points[i];\n                    values.push(binder.bindPoint(series, pointIx));\n                    dataItems.push(series.data[pointIx]);\n                }\n                return {\n                    values: values,\n                    dataItems: dataItems\n                };\n            },\n            _bindField: function (data, field) {\n                var values = [];\n                var count = data.length;\n                for (var i = 0; i < count; i++) {\n                    var item = data[i];\n                    var valueFields = item.valueFields;\n                    var value = void 0;\n                    if (defined(valueFields[field])) {\n                        value = valueFields[field];\n                    } else {\n                        value = item.fields[field];\n                    }\n                    values.push(value);\n                }\n                return values;\n            }\n        });\n        function setValue(fieldName, target, value) {\n            var parentObj = target;\n            var field = fieldName;\n            if (fieldName.indexOf('.') > -1) {\n                var parts = fieldName.split('.');\n                while (parts.length > 1) {\n                    field = parts.shift();\n                    if (!defined(parentObj[field])) {\n                        parentObj[field] = {};\n                    }\n                    parentObj = parentObj[field];\n                }\n                field = parts.shift();\n            }\n            parentObj[field] = value;\n        }\n        var DefaultAggregates = Class.extend({\n            init: function () {\n                this._defaults = {};\n            },\n            register: function (seriesTypes, aggregates) {\n                var this$1 = this;\n                for (var i = 0; i < seriesTypes.length; i++) {\n                    this$1._defaults[seriesTypes[i]] = aggregates;\n                }\n            },\n            query: function (seriesType) {\n                return this._defaults[seriesType];\n            }\n        });\n        DefaultAggregates.current = new DefaultAggregates();\n        var RangeBar = Bar.extend({\n            createLabel: function () {\n                var labels = this.options.labels;\n                var fromOptions = deepExtend({}, labels, labels.from);\n                var toOptions = deepExtend({}, labels, labels.to);\n                if (fromOptions.visible) {\n                    this.labelFrom = this._createLabel(fromOptions);\n                    this.append(this.labelFrom);\n                }\n                if (toOptions.visible) {\n                    this.labelTo = this._createLabel(toOptions);\n                    this.append(this.labelTo);\n                }\n            },\n            _createLabel: function (options) {\n                var labelTemplate = getTemplate(options);\n                var pointData = this.pointData();\n                var labelText;\n                if (labelTemplate) {\n                    labelText = labelTemplate(pointData);\n                } else {\n                    labelText = this.formatValue(options.format);\n                }\n                return new BarLabel(labelText, deepExtend({ vertical: this.options.vertical }, options), pointData);\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var ref = this;\n                var labelFrom = ref.labelFrom;\n                var labelTo = ref.labelTo;\n                var value = ref.value;\n                this.box = targetBox;\n                if (labelFrom) {\n                    labelFrom.options.aboveAxis = value.from > value.to;\n                    labelFrom.reflow(targetBox);\n                }\n                if (labelTo) {\n                    labelTo.options.aboveAxis = value.to > value.from;\n                    labelTo.reflow(targetBox);\n                }\n                if (this.note) {\n                    this.note.reflow(targetBox);\n                }\n            }\n        });\n        RangeBar.prototype.defaults = deepExtend({}, RangeBar.prototype.defaults, {\n            labels: { format: '{0} - {1}' },\n            tooltip: { format: '{1}' }\n        });\n        var RangeBarChart = BarChart.extend({\n            pointType: function () {\n                return RangeBar;\n            },\n            pointValue: function (data) {\n                return data.valueFields;\n            },\n            formatPointValue: function (point, format) {\n                if (point.value.from === null && point.value.to === null) {\n                    return '';\n                }\n                return this.chartService.format.auto(format, point.value.from, point.value.to);\n            },\n            plotRange: function (point) {\n                if (!point) {\n                    return 0;\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            updateRange: function (value, fields) {\n                var axisName = fields.series.axis;\n                var from = value.from;\n                var to = value.to;\n                var axisRange = this.valueAxisRanges[axisName];\n                if (value !== null && isNumber(from) && isNumber(to)) {\n                    axisRange = this.valueAxisRanges[axisName] = axisRange || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    axisRange.min = Math.min(axisRange.min, from);\n                    axisRange.max = Math.max(axisRange.max, from);\n                    axisRange.min = Math.min(axisRange.min, to);\n                    axisRange.max = Math.max(axisRange.max, to);\n                }\n            },\n            aboveAxis: function (point) {\n                var value = point.value;\n                return value.from < value.to;\n            }\n        });\n        RangeBarChart.prototype.plotLimits = CategoricalChart.prototype.plotLimits;\n        var RangeLinePoint = LinePoint.extend({\n            aliasFor: function () {\n                return this.parent;\n            }\n        });\n        var AUTO = 'auto';\n        var DEFAULT_FROM_FORMAT = '{0}';\n        var DEFAULT_TO_FORMAT = '{1}';\n        var RangeAreaPoint = ChartElement.extend({\n            init: function (value, options) {\n                ChartElement.fn.init.call(this);\n                this.value = value;\n                this.options = options;\n                this.aboveAxis = valueOrDefault(this.options.aboveAxis, true);\n                this.tooltipTracking = true;\n                this.initLabelsFormat();\n            },\n            render: function () {\n                if (this._rendered) {\n                    return;\n                }\n                this._rendered = true;\n                var ref = this.options;\n                var markers = ref.markers;\n                var labels = ref.labels;\n                var value = this.value;\n                var fromPoint = this.fromPoint = new RangeLinePoint(value, deepExtend({}, this.options, {\n                    labels: labels.from,\n                    markers: markers.from\n                }));\n                var toPoint = this.toPoint = new RangeLinePoint(value, deepExtend({}, this.options, {\n                    labels: labels.to,\n                    markers: markers.to\n                }));\n                this.copyFields(fromPoint);\n                this.copyFields(toPoint);\n                this.append(fromPoint);\n                this.append(toPoint);\n            },\n            reflow: function (targetBox) {\n                this.render();\n                var fromBox = targetBox.from;\n                var toBox = targetBox.to;\n                this.positionLabels(fromBox, toBox);\n                this.fromPoint.reflow(fromBox);\n                this.toPoint.reflow(toBox);\n                this.box = this.fromPoint.markerBox().clone().wrap(this.toPoint.markerBox());\n            },\n            createHighlight: function () {\n                var group = new Group();\n                group.append(this.fromPoint.createHighlight());\n                group.append(this.toPoint.createHighlight());\n                return group;\n            },\n            highlightVisual: function () {\n                return this.visual;\n            },\n            highlightVisualArgs: function () {\n                return {\n                    options: this.options,\n                    from: this.fromPoint.highlightVisualArgs(),\n                    to: this.toPoint.highlightVisualArgs()\n                };\n            },\n            tooltipAnchor: function () {\n                var clipBox = this.owner.pane.clipBox();\n                var showTooltip = !clipBox || clipBox.overlaps(this.box);\n                if (showTooltip) {\n                    var box = this.box;\n                    var center = box.center();\n                    var horizontalAlign = LEFT;\n                    var x, y, verticalAlign;\n                    if (this.options.vertical) {\n                        x = center.x;\n                        y = box.y1 - TOOLTIP_OFFSET;\n                        verticalAlign = BOTTOM;\n                    } else {\n                        x = box.x2 + TOOLTIP_OFFSET;\n                        y = center.y;\n                        verticalAlign = CENTER;\n                    }\n                    return {\n                        point: new Point(x, y),\n                        align: {\n                            horizontal: horizontalAlign,\n                            vertical: verticalAlign\n                        }\n                    };\n                }\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            overlapsBox: function (box) {\n                return this.box.overlaps(box);\n            },\n            unclipElements: function () {\n                this.fromPoint.unclipElements();\n                this.toPoint.unclipElements();\n            },\n            initLabelsFormat: function () {\n                var labels = this.options.labels;\n                if (!labels.format) {\n                    if (!labels.from || !labels.from.format) {\n                        labels.from = $.extend({}, labels.from, { format: DEFAULT_FROM_FORMAT });\n                    }\n                    if (!labels.to || !labels.to.format) {\n                        labels.to = $.extend({}, labels.to, { format: DEFAULT_TO_FORMAT });\n                    }\n                }\n            },\n            positionLabels: function (fromBox, toBox) {\n                var ref = this.options;\n                var labels = ref.labels;\n                var vertical = ref.vertical;\n                if (labels.position === AUTO) {\n                    var fromLabelPosition, toLabelPosition;\n                    if (vertical) {\n                        if (toBox.y1 <= fromBox.y1) {\n                            toLabelPosition = ABOVE;\n                            fromLabelPosition = BELOW;\n                        } else {\n                            toLabelPosition = BELOW;\n                            fromLabelPosition = ABOVE;\n                        }\n                    } else {\n                        if (toBox.x1 <= fromBox.x1) {\n                            toLabelPosition = LEFT;\n                            fromLabelPosition = RIGHT;\n                        } else {\n                            toLabelPosition = RIGHT;\n                            fromLabelPosition = LEFT;\n                        }\n                    }\n                    if (!labels.from || !labels.from.position) {\n                        this.fromPoint.options.labels.position = fromLabelPosition;\n                    }\n                    if (!labels.to || !labels.to.position) {\n                        this.toPoint.options.labels.position = toLabelPosition;\n                    }\n                }\n            },\n            copyFields: function (point) {\n                point.dataItem = this.dataItem;\n                point.category = this.category;\n                point.series = this.series;\n                point.color = this.color;\n                point.owner = this.owner;\n            }\n        });\n        deepExtend(RangeAreaPoint.prototype, PointEventsMixin);\n        deepExtend(RangeAreaPoint.prototype, NoteMixin);\n        RangeAreaPoint.prototype.defaults = {\n            markers: {\n                visible: false,\n                background: WHITE,\n                size: LINE_MARKER_SIZE,\n                type: CIRCLE,\n                border: { width: 2 },\n                opacity: 1\n            },\n            labels: {\n                visible: false,\n                margin: getSpacing(3),\n                padding: getSpacing(4),\n                animation: {\n                    type: FADEIN,\n                    delay: INITIAL_ANIMATION_DURATION\n                },\n                position: AUTO\n            },\n            notes: { label: {} },\n            highlight: {\n                markers: {\n                    border: {\n                        color: WHITE,\n                        width: 2\n                    }\n                },\n                zIndex: datavizConstants.HIGHLIGHT_ZINDEX\n            },\n            tooltip: { format: '{0} - {1}' }\n        };\n        var RangeAreaSegment = AreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.toGeometryPoints(this.toPoints()));\n            },\n            stackSegments: function () {\n                var fromSegments = this.fromSegments;\n                if (!this.fromSegments) {\n                    fromSegments = this.fromSegments = this.segmentsFromPoints(this.toGeometryPoints(this.fromPoints().reverse()));\n                }\n                return fromSegments;\n            },\n            createStroke: function (style) {\n                var toPath = new Path(style);\n                var fromPath = new Path(style);\n                toPath.segments.push.apply(toPath.segments, this.strokeSegments());\n                fromPath.segments.push.apply(fromPath.segments, this.stackSegments());\n                this.visual.append(toPath);\n                this.visual.append(fromPath);\n            },\n            hasStackSegment: function () {\n                return true;\n            },\n            fromPoints: function () {\n                return this.linePoints.map(function (point) {\n                    return point.fromPoint;\n                });\n            },\n            toPoints: function () {\n                return this.linePoints.map(function (point) {\n                    return point.toPoint;\n                });\n            }\n        });\n        var SplineRangeAreaSegment = RangeAreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.createCurveSegments(this.toPoints());\n            },\n            stackSegments: function () {\n                var fromSegments = this.fromSegments;\n                if (!this.fromSegments) {\n                    fromSegments = this.fromSegments = this.createCurveSegments(this.fromPoints().reverse());\n                }\n                return fromSegments;\n            },\n            createCurveSegments: function (points) {\n                var curveProcessor = new CurveProcessor();\n                return curveProcessor.process(this.toGeometryPoints(points));\n            }\n        });\n        var StepRangeAreaSegment = RangeAreaSegment.extend({\n            createStrokeSegments: function () {\n                return this.segmentsFromPoints(this.calculateStepPoints(this.toPoints()));\n            },\n            stackSegments: function () {\n                var fromSegments = this.fromSegments;\n                if (!this.fromSegments) {\n                    fromSegments = this.fromSegments = this.segmentsFromPoints(this.calculateStepPoints(this.fromPoints()));\n                    fromSegments.reverse();\n                }\n                return fromSegments;\n            }\n        });\n        deepExtend(StepRangeAreaSegment.prototype, StepLineMixin);\n        var RangeAreaChart = CategoricalChart.extend({\n            render: function () {\n                CategoricalChart.fn.render.call(this);\n                this.renderSegments();\n            },\n            pointType: function () {\n                return RangeAreaPoint;\n            },\n            createPoint: function (data, fields) {\n                var categoryIx = fields.categoryIx;\n                var category = fields.category;\n                var series = fields.series;\n                var seriesIx = fields.seriesIx;\n                var value = data.valueFields;\n                if (!hasValue(value.from) && !hasValue(value.to)) {\n                    if (this.seriesMissingValues(series) === ZERO) {\n                        value = {\n                            from: 0,\n                            to: 0\n                        };\n                    } else {\n                        return null;\n                    }\n                }\n                var pointOptions = this.pointOptions(series, seriesIx);\n                pointOptions = this.evalPointOptions(pointOptions, value, category, categoryIx, series, seriesIx);\n                var color = data.fields.color || series.color;\n                if (isFunction(series.color)) {\n                    color = pointOptions.color;\n                }\n                var point = new RangeAreaPoint(value, pointOptions);\n                point.color = color;\n                this.append(point);\n                return point;\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = (currentSeries.line || {}).style;\n                var segmentType;\n                if (style === 'smooth') {\n                    segmentType = SplineRangeAreaSegment;\n                } else if (style === 'step') {\n                    segmentType = StepRangeAreaSegment;\n                } else {\n                    segmentType = RangeAreaSegment;\n                }\n                return new segmentType(linePoints, currentSeries, seriesIx);\n            },\n            plotRange: function (point, startValue) {\n                if (!point) {\n                    return [\n                        startValue,\n                        startValue\n                    ];\n                }\n                return [\n                    point.value.from,\n                    point.value.to\n                ];\n            },\n            valueSlot: function (valueAxis, plotRange) {\n                var fromSlot = valueAxis.getSlot(plotRange[0], plotRange[0], !this.options.clip);\n                var toSlot = valueAxis.getSlot(plotRange[1], plotRange[1], !this.options.clip);\n                if (fromSlot && toSlot) {\n                    return {\n                        from: fromSlot,\n                        to: toSlot\n                    };\n                }\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var from = valueSlot.from;\n                var to = valueSlot.to;\n                var fromSlot, toSlot;\n                if (this.options.invertAxes) {\n                    fromSlot = new Box(from.x1, categorySlot.y1, from.x2, categorySlot.y2);\n                    toSlot = new Box(to.x1, categorySlot.y1, to.x2, categorySlot.y2);\n                } else {\n                    fromSlot = new Box(categorySlot.x1, from.y1, categorySlot.x2, from.y2);\n                    toSlot = new Box(categorySlot.x1, to.y1, categorySlot.x2, to.y2);\n                }\n                return {\n                    from: fromSlot,\n                    to: toSlot\n                };\n            },\n            addValue: function (data, fields) {\n                var valueFields = data.valueFields;\n                if (!isNumber(valueFields.from)) {\n                    valueFields.from = valueFields.to;\n                }\n                if (!isNumber(valueFields.to)) {\n                    valueFields.to = valueFields.from;\n                }\n                CategoricalChart.fn.addValue.call(this, data, fields);\n            },\n            updateRange: function (value, fields) {\n                if (value !== null && isNumber(value.from) && isNumber(value.to)) {\n                    var axisName = fields.series.axis;\n                    var axisRange = this.valueAxisRanges[axisName] = this.valueAxisRanges[axisName] || {\n                        min: MAX_VALUE,\n                        max: MIN_VALUE\n                    };\n                    var from = value.from;\n                    var to = value.to;\n                    axisRange.min = Math.min(axisRange.min, from, to);\n                    axisRange.max = Math.max(axisRange.max, from, to);\n                }\n            },\n            formatPointValue: function (point, format) {\n                var value = point.value;\n                return this.chartService.format.auto(format, value.from, value.to);\n            },\n            animationPoints: function () {\n                var points = this.points;\n                var result = [];\n                for (var idx = 0; idx < points.length; idx++) {\n                    var point = points[idx];\n                    if (point) {\n                        result.push((point.fromPoint || {}).marker);\n                        result.push((point.toPoint || {}).marker);\n                    }\n                }\n                return result.concat(this._segments);\n            }\n        });\n        deepExtend(RangeAreaChart.prototype, LineChartMixin, ClipAnimationMixin);\n        var OHLCPoint = Candlestick.extend({\n            reflow: function (box) {\n                var ref = this;\n                var options = ref.options;\n                var value = ref.value;\n                var chart = ref.owner;\n                var valueAxis = chart.seriesValueAxis(options);\n                var oPoints = [];\n                var cPoints = [];\n                var lhPoints = [];\n                var lhSlot = valueAxis.getSlot(value.low, value.high);\n                var oSlot = valueAxis.getSlot(value.open, value.open);\n                var cSlot = valueAxis.getSlot(value.close, value.close);\n                oSlot.x1 = cSlot.x1 = lhSlot.x1 = box.x1;\n                oSlot.x2 = cSlot.x2 = lhSlot.x2 = box.x2;\n                var mid = lhSlot.center().x;\n                oPoints.push([\n                    oSlot.x1,\n                    oSlot.y1\n                ]);\n                oPoints.push([\n                    mid,\n                    oSlot.y1\n                ]);\n                cPoints.push([\n                    mid,\n                    cSlot.y1\n                ]);\n                cPoints.push([\n                    cSlot.x2,\n                    cSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y1\n                ]);\n                lhPoints.push([\n                    mid,\n                    lhSlot.y2\n                ]);\n                this.lines = [\n                    oPoints,\n                    cPoints,\n                    lhPoints\n                ];\n                this.box = lhSlot.clone().wrap(oSlot.clone().wrap(cSlot));\n                this.reflowNote();\n            },\n            createBody: function () {\n            }\n        });\n        var OHLCChart = CandlestickChart.extend({\n            pointType: function () {\n                return OHLCPoint;\n            }\n        });\n        var WaterfallSegment = ChartElement.extend({\n            init: function (from, to, series) {\n                ChartElement.fn.init.call(this);\n                this.from = from;\n                this.to = to;\n                this.series = series;\n            },\n            linePoints: function () {\n                var from = this.from;\n                var ref = this;\n                var fromBox = ref.from.box;\n                var toBox = ref.to.box;\n                var points = [];\n                if (from.isVertical) {\n                    var y = from.aboveAxis ? fromBox.y1 : fromBox.y2;\n                    points.push([\n                        fromBox.x1,\n                        y\n                    ], [\n                        toBox.x2,\n                        y\n                    ]);\n                } else {\n                    var x = from.aboveAxis ? fromBox.x2 : fromBox.x1;\n                    points.push([\n                        x,\n                        fromBox.y1\n                    ], [\n                        x,\n                        toBox.y2\n                    ]);\n                }\n                return points;\n            },\n            createVisual: function () {\n                ChartElement.fn.createVisual.call(this);\n                var line = this.series.line || {};\n                var path = Path.fromPoints(this.linePoints(), {\n                    stroke: {\n                        color: line.color,\n                        width: line.width,\n                        opacity: line.opacity,\n                        dashType: line.dashType\n                    }\n                });\n                alignPathToPixel(path);\n                this.visual.append(path);\n            }\n        });\n        setDefaultOptions(WaterfallSegment, {\n            animation: {\n                type: FADEIN,\n                delay: INITIAL_ANIMATION_DURATION\n            }\n        });\n        var WaterfallChart = BarChart.extend({\n            render: function () {\n                BarChart.fn.render.call(this);\n                this.createSegments();\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var series = this.options.series;\n                var totalCategories = categoriesCount(series);\n                var isVertical = !this.options.invertAxes;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var total = 0;\n                    var runningTotal = 0;\n                    for (var categoryIx = 0; categoryIx < totalCategories; categoryIx++) {\n                        var data = SeriesBinder.current.bindPoint(currentSeries, categoryIx);\n                        var value = data.valueFields.value;\n                        var summary = data.fields.summary;\n                        var from = total;\n                        var to = void 0;\n                        if (summary) {\n                            if (summary.toLowerCase() === 'total') {\n                                data.valueFields.value = total;\n                                from = 0;\n                                to = total;\n                            } else {\n                                data.valueFields.value = runningTotal;\n                                to = from - runningTotal;\n                                runningTotal = 0;\n                            }\n                        } else if (isNumber(value)) {\n                            runningTotal += value;\n                            total += value;\n                            to = total;\n                        }\n                        callback(data, {\n                            category: this$1.categoryAxis.categoryAt(categoryIx),\n                            categoryIx: categoryIx,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            total: total,\n                            runningTotal: runningTotal,\n                            from: from,\n                            to: to,\n                            isVertical: isVertical\n                        });\n                    }\n                }\n            },\n            updateRange: function (value, fields) {\n                BarChart.fn.updateRange.call(this, { value: fields.to }, fields);\n            },\n            aboveAxis: function (point) {\n                return point.value >= 0;\n            },\n            plotRange: function (point) {\n                return [\n                    point.from,\n                    point.to\n                ];\n            },\n            createSegments: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesPoints = this.seriesPoints;\n                var segments = this.segments = [];\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var points = seriesPoints[seriesIx];\n                    if (points) {\n                        var prevPoint = void 0;\n                        for (var pointIx = 0; pointIx < points.length; pointIx++) {\n                            var point = points[pointIx];\n                            if (point && prevPoint) {\n                                var segment = new WaterfallSegment(prevPoint, point, currentSeries);\n                                segments.push(segment);\n                                this$1.append(segment);\n                            }\n                            prevPoint = point;\n                        }\n                    }\n                }\n            }\n        });\n        var AREA_SERIES = [\n            AREA,\n            VERTICAL_AREA,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ];\n        var OUT_OF_RANGE_SERIES = [\n            LINE,\n            VERTICAL_LINE\n        ].concat(AREA_SERIES);\n        var CategoricalPlotArea = PlotAreaBase.extend({\n            initFields: function (series) {\n                var this$1 = this;\n                this.namedCategoryAxes = {};\n                this.namedValueAxes = {};\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n                if (series.length > 0) {\n                    this.invertAxes = inArray(series[0].type, [\n                        BAR,\n                        BULLET,\n                        VERTICAL_LINE,\n                        VERTICAL_AREA,\n                        VERTICAL_RANGE_AREA,\n                        RANGE_BAR,\n                        HORIZONTAL_WATERFALL,\n                        VERTICAL_BOX_PLOT\n                    ]);\n                    for (var i = 0; i < series.length; i++) {\n                        var stack = series[i].stack;\n                        if (stack && stack.type === '100%') {\n                            this$1.stack100 = true;\n                            break;\n                        }\n                    }\n                }\n            },\n            render: function (panes) {\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                this.createCategoryAxes(panes);\n                this.aggregateCategories(panes);\n                this.createCategoryAxesLabels(panes);\n                this.createCharts(panes);\n                this.createValueAxes(panes);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis instanceof CategoryAxis) {\n                    delete this.namedCategoryAxes[axisName];\n                } else {\n                    this.valueAxisRangeTracker.reset(axisName);\n                    delete this.namedValueAxes[axisName];\n                }\n                if (axis === this.categoryAxis) {\n                    delete this.categoryAxis;\n                }\n                if (axis === this.valueAxis) {\n                    delete this.valueAxis;\n                }\n            },\n            createCharts: function (panes) {\n                var this$1 = this;\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var visibleSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!visibleSeries) {\n                        continue;\n                    }\n                    var groups = this$1.groupSeriesByCategoryAxis(visibleSeries);\n                    for (var groupIx = 0; groupIx < groups.length; groupIx++) {\n                        this$1.createChartGroup(groups[groupIx], pane);\n                    }\n                }\n            },\n            createChartGroup: function (series, pane) {\n                this.createAreaChart(filterSeriesByType(series, [\n                    AREA,\n                    VERTICAL_AREA\n                ]), pane);\n                this.createRangeAreaChart(filterSeriesByType(series, [\n                    RANGE_AREA,\n                    VERTICAL_RANGE_AREA\n                ]), pane);\n                this.createBarChart(filterSeriesByType(series, [\n                    COLUMN,\n                    BAR\n                ]), pane);\n                this.createRangeBarChart(filterSeriesByType(series, [\n                    RANGE_COLUMN,\n                    RANGE_BAR\n                ]), pane);\n                this.createBulletChart(filterSeriesByType(series, [\n                    BULLET,\n                    VERTICAL_BULLET\n                ]), pane);\n                this.createCandlestickChart(filterSeriesByType(series, CANDLESTICK), pane);\n                this.createBoxPlotChart(filterSeriesByType(series, [\n                    BOX_PLOT,\n                    VERTICAL_BOX_PLOT\n                ]), pane);\n                this.createOHLCChart(filterSeriesByType(series, OHLC), pane);\n                this.createWaterfallChart(filterSeriesByType(series, [\n                    WATERFALL,\n                    HORIZONTAL_WATERFALL\n                ]), pane);\n                this.createLineChart(filterSeriesByType(series, [\n                    LINE,\n                    VERTICAL_LINE\n                ]), pane);\n            },\n            aggregateCategories: function (panes) {\n                var this$1 = this;\n                var series = this.srcSeries || this.series;\n                var processedSeries = [];\n                this._currentPointsCache = {};\n                this._seriesPointsCache = this._seriesPointsCache || {};\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var categoryAxis = this$1.seriesCategoryAxis(currentSeries);\n                    var axisPane = this$1.findPane(categoryAxis.options.pane);\n                    var dateAxis = equalsIgnoreCase(categoryAxis.options.type, DATE);\n                    if ((dateAxis || currentSeries.categoryField) && inArray(axisPane, panes)) {\n                        currentSeries = this$1.aggregateSeries(currentSeries, categoryAxis);\n                    } else {\n                        currentSeries = this$1.filterSeries(currentSeries, categoryAxis);\n                    }\n                    processedSeries.push(currentSeries);\n                }\n                this._seriesPointsCache = this._currentPointsCache;\n                this._currentPointsCache = null;\n                this.srcSeries = series;\n                this.series = processedSeries;\n            },\n            filterSeries: function (series, categoryAxis) {\n                var dataLength = (series.data || {}).length;\n                categoryAxis._seriesMax = Math.max(categoryAxis._seriesMax || 0, dataLength);\n                if (!(isNumber(categoryAxis.options.min) || isNumber(categoryAxis.options.max))) {\n                    return series;\n                }\n                var range = categoryAxis.currentRangeIndices();\n                var outOfRangePoints = inArray(series.type, OUT_OF_RANGE_SERIES);\n                var currentSeries = deepExtend({}, series);\n                currentSeries.data = (currentSeries.data || []).slice(range.min, range.max + 1);\n                if (outOfRangePoints) {\n                    createOutOfRangePoints(currentSeries, range, dataLength, function (idx) {\n                        return {\n                            item: series.data[idx],\n                            category: categoryAxis.categoryAt(idx, true),\n                            categoryIx: idx - range.min\n                        };\n                    }, function (idx) {\n                        return defined(series.data[idx]);\n                    });\n                }\n                return currentSeries;\n            },\n            clearSeriesPointsCache: function () {\n                this._seriesPointsCache = {};\n            },\n            seriesSourcePoints: function (series, categoryAxis) {\n                var this$1 = this;\n                var key = series.index + ';' + categoryAxis.categoriesHash();\n                if (this._seriesPointsCache[key]) {\n                    this._currentPointsCache[key] = this._seriesPointsCache[key];\n                    return this._seriesPointsCache[key];\n                }\n                var axisOptions = categoryAxis.options;\n                var srcCategories = axisOptions.srcCategories;\n                var dateAxis = equalsIgnoreCase(axisOptions.type, DATE);\n                var srcData = series.data;\n                var getFn = dateAxis ? getDateField : getField;\n                var result = [];\n                if (!dateAxis) {\n                    categoryAxis.mapCategories();\n                }\n                for (var idx = 0; idx < srcData.length; idx++) {\n                    var category = void 0;\n                    if (series.categoryField) {\n                        category = getFn(series.categoryField, srcData[idx], this$1.chartService.intl);\n                    } else {\n                        category = srcCategories[idx];\n                    }\n                    if (defined(category) && category !== null) {\n                        var categoryIx = categoryAxis.totalIndex(category);\n                        result[categoryIx] = result[categoryIx] || {\n                            items: [],\n                            category: category\n                        };\n                        result[categoryIx].items.push(idx);\n                    }\n                }\n                this._currentPointsCache[key] = result;\n                return result;\n            },\n            aggregateSeries: function (series, categoryAxis) {\n                var srcData = series.data;\n                if (!srcData.length) {\n                    return series;\n                }\n                var srcPoints = this.seriesSourcePoints(series, categoryAxis);\n                var result = deepExtend({}, series);\n                var aggregator = new SeriesAggregator(deepExtend({}, series), SeriesBinder.current, DefaultAggregates.current);\n                var data = result.data = [];\n                var dataItems = categoryAxis.options.dataItems || [];\n                var range = categoryAxis.currentRangeIndices();\n                var categoryItem = function (idx) {\n                    var categoryIdx = idx - range.min;\n                    var point = srcPoints[idx];\n                    if (!point) {\n                        point = srcPoints[idx] = {};\n                    }\n                    point.categoryIx = categoryIdx;\n                    if (!point.item) {\n                        var category = categoryAxis.categoryAt(idx, true);\n                        point.category = category;\n                        point.item = aggregator.aggregatePoints(point.items, category);\n                    }\n                    return point;\n                };\n                for (var idx = range.min; idx <= range.max; idx++) {\n                    var point = categoryItem(idx);\n                    data[point.categoryIx] = point.item;\n                    if (point.items && point.items.length) {\n                        dataItems[point.categoryIx] = point.item;\n                    }\n                }\n                if (inArray(result.type, OUT_OF_RANGE_SERIES)) {\n                    createOutOfRangePoints(result, range, categoryAxis.totalCount(), categoryItem, function (idx) {\n                        return srcPoints[idx];\n                    });\n                }\n                categoryAxis.options.dataItems = dataItems;\n                return result;\n            },\n            appendChart: function (chart, pane) {\n                var series = chart.options.series;\n                var categoryAxis = this.seriesCategoryAxis(series[0]);\n                var categories = categoryAxis.options.categories;\n                var categoriesToAdd = Math.max(0, categoriesCount(series) - categories.length);\n                if (categoriesToAdd > 0) {\n                    categories = categoryAxis.options.categories = categoryAxis.options.categories.slice(0);\n                    while (categoriesToAdd--) {\n                        categories.push('');\n                    }\n                }\n                this.valueAxisRangeTracker.update(chart.valueAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var axisName = series.axis;\n                var axisOptions = [].concat(options.valueAxis);\n                var axis = grep(axisOptions, function (a) {\n                    return a.name === axisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = (panes[0] || {}).name || 'default';\n                var paneName = (axis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            seriesCategoryAxis: function (series) {\n                var axisName = series.categoryAxis;\n                var axis = axisName ? this.namedCategoryAxes[axisName] : this.categoryAxis;\n                if (!axis) {\n                    throw new Error('Unable to locate category axis with name ' + axisName);\n                }\n                return axis;\n            },\n            stackableChartOptions: function (firstSeries, pane) {\n                var stack = firstSeries.stack;\n                var isStacked100 = stack && stack.type === '100%';\n                var clip = pane.options.clip;\n                return {\n                    isStacked: stack,\n                    isStacked100: isStacked100,\n                    clip: clip\n                };\n            },\n            groupSeriesByCategoryAxis: function (series) {\n                var categoryAxes = [];\n                var unique = {};\n                for (var idx = 0; idx < series.length; idx++) {\n                    var name = series[idx].categoryAxis || '$$default$$';\n                    if (!unique.hasOwnProperty(name)) {\n                        unique[name] = true;\n                        categoryAxes.push(name);\n                    }\n                }\n                var groups = [];\n                for (var axisIx = 0; axisIx < categoryAxes.length; axisIx++) {\n                    var axis = categoryAxes[axisIx];\n                    var axisSeries = groupSeries(series, axis, axisIx);\n                    if (axisSeries.length === 0) {\n                        continue;\n                    }\n                    groups.push(axisSeries);\n                }\n                return groups;\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var barChart = new BarChart(this, $.extend({\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(barChart, pane);\n            },\n            createRangeBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var rangeColumnChart = new RangeBarChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(rangeColumnChart, pane);\n            },\n            createBulletChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var bulletChart = new BulletChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(bulletChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var lineChart = new LineChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(lineChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var areaChart = new AreaChart(this, $.extend({\n                    invertAxes: this.invertAxes,\n                    series: series\n                }, this.stackableChartOptions(firstSeries, pane)));\n                this.appendChart(areaChart, pane);\n            },\n            createRangeAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var rangeAreaChart = new RangeAreaChart(this, {\n                    invertAxes: this.invertAxes,\n                    series: series,\n                    clip: pane.options.clip\n                });\n                this.appendChart(rangeAreaChart, pane);\n            },\n            createOHLCChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new OHLCChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createCandlestickChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new CandlestickChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createBoxPlotChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var chart = new BoxPlotChart(this, {\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    series: series,\n                    spacing: firstSeries.spacing,\n                    clip: pane.options.clip\n                });\n                this.appendChart(chart, pane);\n            },\n            createWaterfallChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var waterfallChart = new WaterfallChart(this, {\n                    series: series,\n                    invertAxes: this.invertAxes,\n                    gap: firstSeries.gap,\n                    spacing: firstSeries.spacing\n                });\n                this.appendChart(waterfallChart, pane);\n            },\n            axisRequiresRounding: function (categoryAxisName, categoryAxisIndex) {\n                var this$1 = this;\n                var centeredSeries = filterSeriesByType(this.series, EQUALLY_SPACED_SERIES);\n                for (var seriesIx = 0; seriesIx < this.series.length; seriesIx++) {\n                    var currentSeries = this$1.series[seriesIx];\n                    if (inArray(currentSeries.type, AREA_SERIES)) {\n                        var line = currentSeries.line;\n                        if (line && line.style === STEP) {\n                            centeredSeries.push(currentSeries);\n                        }\n                    }\n                }\n                for (var seriesIx$1 = 0; seriesIx$1 < centeredSeries.length; seriesIx$1++) {\n                    var seriesAxis = centeredSeries[seriesIx$1].categoryAxis || '';\n                    if (seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) {\n                        return true;\n                    }\n                }\n            },\n            aggregatedAxis: function (categoryAxisName, categoryAxisIndex) {\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var seriesAxis = series[seriesIx].categoryAxis || '';\n                    if ((seriesAxis === categoryAxisName || !seriesAxis && categoryAxisIndex === 0) && series[seriesIx].categoryField) {\n                        return true;\n                    }\n                }\n            },\n            createCategoryAxesLabels: function () {\n                var axes = this.axes;\n                for (var i = 0; i < axes.length; i++) {\n                    if (axes[i] instanceof CategoryAxis) {\n                        axes[i].createLabels();\n                    }\n                }\n            },\n            createCategoryAxes: function (panes) {\n                var this$1 = this;\n                var invertAxes = this.invertAxes;\n                var definitions = [].concat(this.options.categoryAxis);\n                var axes = [];\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var categories = axisOptions.categories;\n                        if (categories === void 0) {\n                            categories = [];\n                        }\n                        axisOptions = deepExtend({\n                            vertical: invertAxes,\n                            reverse: !invertAxes && this$1.chartService.rtl,\n                            axisCrossingValue: invertAxes ? MAX_VALUE : 0\n                        }, axisOptions);\n                        if (!defined(axisOptions.justified)) {\n                            axisOptions.justified = this$1.isJustified();\n                        }\n                        if (this$1.axisRequiresRounding(name, i)) {\n                            axisOptions.justified = false;\n                        }\n                        var categoryAxis = void 0;\n                        if (isDateAxis(axisOptions, categories[0])) {\n                            categoryAxis = new dataviz.DateCategoryAxis(axisOptions, this$1.chartService);\n                        } else {\n                            categoryAxis = new CategoryAxis(axisOptions, this$1.chartService);\n                        }\n                        definitions[i].categories = categoryAxis.options.srcCategories;\n                        if (name) {\n                            if (this$1.namedCategoryAxes[name]) {\n                                throw new Error('Category axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedCategoryAxes[name] = categoryAxis;\n                        }\n                        categoryAxis.axisIndex = i;\n                        axes.push(categoryAxis);\n                        this$1.appendAxis(categoryAxis);\n                    }\n                }\n                var primaryAxis = this.categoryAxis || axes[0];\n                this.categoryAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisY = primaryAxis;\n                } else {\n                    this.axisX = primaryAxis;\n                }\n            },\n            isJustified: function () {\n                var series = this.series;\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    if (!inArray(currentSeries.type, AREA_SERIES)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            createValueAxes: function (panes) {\n                var this$1 = this;\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var definitions = [].concat(this.options.valueAxis);\n                var invertAxes = this.invertAxes;\n                var baseOptions = {\n                    vertical: !invertAxes,\n                    reverse: invertAxes && this.chartService.rtl\n                };\n                var axes = [];\n                if (this.stack100) {\n                    baseOptions.roundToMajorUnit = false;\n                    baseOptions.labels = { format: 'P0' };\n                }\n                for (var i = 0; i < definitions.length; i++) {\n                    var axisOptions = definitions[i];\n                    var axisPane = this$1.findPane(axisOptions.pane);\n                    if (inArray(axisPane, panes)) {\n                        var name = axisOptions.name;\n                        var defaultAxisRange = equalsIgnoreCase(axisOptions.type, LOGARITHMIC) ? {\n                            min: 0.1,\n                            max: 1\n                        } : {\n                            min: 0,\n                            max: 1\n                        };\n                        var range = tracker.query(name) || defaultRange || defaultAxisRange;\n                        if (i === 0 && range && defaultRange) {\n                            range.min = Math.min(range.min, defaultRange.min);\n                            range.max = Math.max(range.max, defaultRange.max);\n                        }\n                        var axisType = void 0;\n                        if (equalsIgnoreCase(axisOptions.type, LOGARITHMIC)) {\n                            axisType = dataviz.LogarithmicAxis;\n                        } else {\n                            axisType = dataviz.NumericAxis;\n                        }\n                        var valueAxis = new axisType(range.min, range.max, deepExtend({}, baseOptions, axisOptions), this$1.chartService);\n                        if (name) {\n                            if (this$1.namedValueAxes[name]) {\n                                throw new Error('Value axis with name ' + name + ' is already defined');\n                            }\n                            this$1.namedValueAxes[name] = valueAxis;\n                        }\n                        valueAxis.axisIndex = i;\n                        axes.push(valueAxis);\n                        this$1.appendAxis(valueAxis);\n                    }\n                }\n                var primaryAxis = this.valueAxis || axes[0];\n                this.valueAxis = primaryAxis;\n                if (invertAxes) {\n                    this.axisX = primaryAxis;\n                } else {\n                    this.axisY = primaryAxis;\n                }\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var pane = this.pointPane(point);\n                var categories = [];\n                var values = [];\n                if (!pane) {\n                    return;\n                }\n                var allAxes = pane.axes;\n                for (var i = 0; i < allAxes.length; i++) {\n                    var axis = allAxes[i];\n                    if (axis.getValue) {\n                        appendIfNotNull(values, axis.getValue(point));\n                    } else {\n                        appendIfNotNull(categories, axis.getCategory(point));\n                    }\n                }\n                if (categories.length === 0) {\n                    appendIfNotNull(categories, this.categoryAxis.getCategory(point));\n                }\n                if (categories.length > 0 && values.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        category: singleItemOrArray(categories),\n                        value: singleItemOrArray(values)\n                    });\n                }\n            },\n            pointPane: function (point) {\n                var panes = this.panes;\n                for (var i = 0; i < panes.length; i++) {\n                    var currentPane = panes[i];\n                    if (currentPane.contentBox.containsPoint(point)) {\n                        return currentPane;\n                    }\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                updateAxisOptions(this.options, axis, options);\n                updateAxisOptions(this.originalOptions, axis, options);\n            }\n        });\n        function updateAxisOptions(targetOptions, axis, options) {\n            var axesOptions = axis instanceof CategoryAxis ? [].concat(targetOptions.categoryAxis) : [].concat(targetOptions.valueAxis);\n            deepExtend(axesOptions[axis.axisIndex], options);\n        }\n        function groupSeries(series, axis, axisIx) {\n            return grep(series, function (s) {\n                return axisIx === 0 && !s.categoryAxis || s.categoryAxis === axis;\n            });\n        }\n        setDefaultOptions(CategoricalPlotArea, {\n            categoryAxis: {},\n            valueAxis: {}\n        });\n        deepExtend(CategoricalPlotArea.prototype, PlotAreaEventsMixin);\n        var Highlight = Class.extend({\n            init: function () {\n                this._points = [];\n            },\n            destroy: function () {\n                this._points = [];\n            },\n            show: function (points) {\n                var this$1 = this;\n                var arrayPoints = [].concat(points);\n                this.hide();\n                for (var i = 0; i < arrayPoints.length; i++) {\n                    var point = arrayPoints[i];\n                    if (point && point.toggleHighlight && point.hasHighlight()) {\n                        this$1.togglePointHighlight(point, true);\n                        this$1._points.push(point);\n                    }\n                }\n            },\n            togglePointHighlight: function (point, show) {\n                var toggleHandler = (point.options.highlight || {}).toggle;\n                if (toggleHandler) {\n                    var eventArgs = {\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        value: point.value,\n                        stackValue: point.stackValue,\n                        preventDefault: preventDefault,\n                        visual: point.highlightVisual(),\n                        show: show\n                    };\n                    toggleHandler(eventArgs);\n                    if (!eventArgs._defaultPrevented) {\n                        point.toggleHighlight(show);\n                    }\n                } else {\n                    point.toggleHighlight(show);\n                }\n            },\n            hide: function () {\n                var this$1 = this;\n                var points = this._points;\n                while (points.length) {\n                    this$1.togglePointHighlight(points.pop(), false);\n                }\n            },\n            isHighlighted: function (element) {\n                var points = this._points;\n                for (var i = 0; i < points.length; i++) {\n                    var point = points[i];\n                    if (element === point) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n        });\n        function preventDefault() {\n            this._defaultPrevented = true;\n        }\n        function acceptKey(e, mouseKey) {\n            var key = (mouseKey || '').toLowerCase();\n            var event = e.event;\n            var accept = key === 'none' && !(event.ctrlKey || event.shiftKey || event.altKey) || event[key + 'Key'];\n            return accept;\n        }\n        function toChartAxisRanges(axisRanges) {\n            var ranges = {};\n            for (var idx = 0; idx < axisRanges.length; idx++) {\n                var axisRange = axisRanges[idx];\n                if (axisRange.axis.options.name) {\n                    ranges[axisRange.axis.options.name] = {\n                        min: axisRange.range.min,\n                        max: axisRange.range.max\n                    };\n                }\n            }\n            return ranges;\n        }\n        var Pannable = Class.extend({\n            init: function (plotArea, options) {\n                this.plotArea = plotArea;\n                this.options = deepExtend({}, this.options, options);\n            },\n            start: function (e) {\n                this._active = acceptKey(e, this.options.key);\n                return this._active;\n            },\n            move: function (e) {\n                if (this._active) {\n                    var axisRanges = this.axisRanges = this._panAxes(e, X).concat(this._panAxes(e, Y));\n                    if (axisRanges.length) {\n                        this.axisRanges = axisRanges;\n                        return toChartAxisRanges(axisRanges);\n                    }\n                }\n            },\n            end: function () {\n                var active = this._active;\n                this._active = false;\n                return active;\n            },\n            pan: function () {\n                var ref = this;\n                var plotArea = ref.plotArea;\n                var axisRanges = ref.axisRanges;\n                if (axisRanges.length) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var range = axisRanges[idx];\n                        plotArea.updateAxisOptions(range.axis, range.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.plotArea;\n            },\n            _panAxes: function (e, position) {\n                var plotArea = this.plotArea;\n                var delta = -e[position].delta;\n                var lock = (this.options.lock || '').toLowerCase();\n                var updatedAxes = [];\n                if (delta !== 0 && (lock || '').toLowerCase() !== position) {\n                    var axes = plotArea.axes;\n                    for (var idx = 0; idx < axes.length; idx++) {\n                        var axis = axes[idx];\n                        if (position === X && !axis.options.vertical || position === Y && axis.options.vertical) {\n                            var range = axis.pan(delta);\n                            if (range) {\n                                range.limitRange = true;\n                                updatedAxes.push({\n                                    axis: axis,\n                                    range: range\n                                });\n                            }\n                        }\n                    }\n                }\n                return updatedAxes;\n            }\n        });\n        Pannable.prototype.options = {\n            key: 'none',\n            lock: 'none'\n        };\n        var ZoomSelection = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n                this.createElement();\n            },\n            createElement: function () {\n                var marquee = this._marquee = document.createElement('div');\n                marquee.className = 'k-marquee';\n                var marqueeColor = document.createElement('div');\n                marqueeColor.className = 'k-marquee-color';\n                marquee.appendChild(marqueeColor);\n            },\n            removeElement: function () {\n                if (this._marquee.parentNode) {\n                    this._marquee.parentNode.removeChild(this._marquee);\n                }\n            },\n            setStyles: function (styles) {\n                elementStyles(this._marquee, styles);\n            },\n            start: function (e) {\n                if (acceptKey(e, this.options.key)) {\n                    var chart = this.chart;\n                    var point = chart._eventCoordinates(e);\n                    var zoomPane = this._zoomPane = chart._plotArea.paneByPoint(point);\n                    var clipBox = zoomPane ? zoomPane.chartsBox().clone() : null;\n                    if (zoomPane && clipBox) {\n                        var offset = this._elementOffset();\n                        clipBox.translate(offset.left, offset.top);\n                        this._zoomPaneClipBox = clipBox;\n                        document.body.appendChild(this._marquee);\n                        this.setStyles({\n                            left: e.pageX + 1,\n                            top: e.pageY + 1,\n                            width: 0,\n                            height: 0\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _elementOffset: function () {\n                var chartElement = this.chart.element;\n                var ref = elementStyles(chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref.paddingLeft;\n                var paddingTop = ref.paddingTop;\n                var offset = dataviz.elementOffset(chartElement);\n                return {\n                    left: paddingLeft + offset.left,\n                    top: paddingTop + offset.top\n                };\n            },\n            move: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    this.setStyles(this._selectionPosition(e));\n                }\n            },\n            end: function (e) {\n                var zoomPane = this._zoomPane;\n                if (zoomPane) {\n                    var elementOffset$$1 = this._elementOffset();\n                    var selectionPosition = this._selectionPosition(e);\n                    selectionPosition.left -= elementOffset$$1.left;\n                    selectionPosition.top -= elementOffset$$1.top;\n                    var start = {\n                        x: selectionPosition.left,\n                        y: selectionPosition.top\n                    };\n                    var end = {\n                        x: selectionPosition.left + selectionPosition.width,\n                        y: selectionPosition.top + selectionPosition.height\n                    };\n                    this._updateAxisRanges(start, end);\n                    this.removeElement();\n                    delete this._zoomPane;\n                    return toChartAxisRanges(this.axisRanges);\n                }\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                if (axisRanges && axisRanges.length) {\n                    var plotArea = this.chart._plotArea;\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                this.removeElement();\n                delete this._marquee;\n                delete this.chart;\n            },\n            _updateAxisRanges: function (start, end) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this._zoomPane.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical) && defined(axis.axisIndex)) {\n                        var range = axis.pointsRange(start, end);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n            },\n            _selectionPosition: function (e) {\n                var clipBox = this._zoomPaneClipBox;\n                var startLocation = {\n                    x: e.x.startLocation,\n                    y: e.y.startLocation\n                };\n                var pageX = e.x.location;\n                var pageY = e.y.location;\n                var lock = (this.options.lock || '').toLowerCase();\n                var left = Math.min(startLocation.x, pageX);\n                var top = Math.min(startLocation.y, pageY);\n                var width = Math.abs(startLocation.x - pageX);\n                var height = Math.abs(startLocation.y - pageY);\n                if (lock === X) {\n                    left = clipBox.x1;\n                    width = clipBox.width();\n                }\n                if (lock === Y) {\n                    top = clipBox.y1;\n                    height = clipBox.height();\n                }\n                if (pageX > clipBox.x2) {\n                    width = clipBox.x2 - startLocation.x;\n                }\n                if (pageX < clipBox.x1) {\n                    width = startLocation.x - clipBox.x1;\n                }\n                if (pageY > clipBox.y2) {\n                    height = clipBox.y2 - startLocation.y;\n                }\n                if (pageY < clipBox.y1) {\n                    height = startLocation.y - clipBox.y1;\n                }\n                return {\n                    left: Math.max(left, clipBox.x1),\n                    top: Math.max(top, clipBox.y1),\n                    width: width,\n                    height: height\n                };\n            }\n        });\n        ZoomSelection.prototype.options = {\n            key: 'shift',\n            lock: 'none'\n        };\n        var MousewheelZoom = Class.extend({\n            init: function (chart, options) {\n                this.chart = chart;\n                this.options = deepExtend({}, this.options, options);\n            },\n            updateRanges: function (delta) {\n                var lock = (this.options.lock || '').toLowerCase();\n                var axisRanges = [];\n                var axes = this.chart._plotArea.axes;\n                for (var idx = 0; idx < axes.length; idx++) {\n                    var axis = axes[idx];\n                    var vertical = axis.options.vertical;\n                    if (!(lock === X && !vertical) && !(lock === Y && vertical) && axis.zoomRange) {\n                        var range = axis.zoomRange(-delta);\n                        if (range) {\n                            axisRanges.push({\n                                axis: axis,\n                                range: range\n                            });\n                        }\n                    }\n                }\n                this.axisRanges = axisRanges;\n                return toChartAxisRanges(axisRanges);\n            },\n            zoom: function () {\n                var axisRanges = this.axisRanges;\n                var plotArea = this.chart._plotArea;\n                if (axisRanges && axisRanges.length && plotArea.updateAxisOptions) {\n                    for (var idx = 0; idx < axisRanges.length; idx++) {\n                        var axisRange = axisRanges[idx];\n                        plotArea.updateAxisOptions(axisRange.axis, axisRange.range);\n                    }\n                    plotArea.redraw(plotArea.panes);\n                }\n            },\n            destroy: function () {\n                delete this.chart;\n            }\n        });\n        var LegendLayout = ChartElement.extend({\n            init: function (options, chartService) {\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n            },\n            render: function () {\n                var ref = this;\n                var children = ref.children;\n                var options = ref.options;\n                var vertical = options.vertical;\n                this.visual = new drawing.Layout(null, {\n                    spacing: vertical ? 0 : options.spacing,\n                    lineSpacing: vertical ? options.spacing : 0,\n                    orientation: vertical ? 'vertical' : 'horizontal',\n                    reverse: options.rtl,\n                    alignItems: vertical ? 'start' : 'center'\n                });\n                for (var idx = 0; idx < children.length; idx++) {\n                    var legendItem = children[idx];\n                    legendItem.reflow(new Box());\n                    legendItem.renderVisual();\n                }\n            },\n            reflow: function (box) {\n                this.visual.rect(box.toRect());\n                this.visual.reflow();\n                var bbox = this.visual.clippedBBox();\n                if (bbox) {\n                    this.box = dataviz.rectToBox(bbox);\n                } else {\n                    this.box = new Box();\n                }\n            },\n            renderVisual: function () {\n                this.addVisual();\n            },\n            createVisual: function () {\n            }\n        });\n        var LegendItem = BoxElement.extend({\n            init: function (options) {\n                BoxElement.fn.init.call(this, options);\n                this.createContainer();\n                if (!options.rtl) {\n                    this.createMarker();\n                    this.createLabel();\n                } else {\n                    this.createLabel();\n                    this.createMarker();\n                }\n            },\n            createContainer: function () {\n                this.container = new dataviz.FloatElement({\n                    vertical: false,\n                    wrap: false,\n                    align: CENTER,\n                    spacing: this.options.spacing\n                });\n                this.append(this.container);\n            },\n            createMarker: function () {\n                this.container.append(new ShapeElement(this.markerOptions()));\n            },\n            markerOptions: function () {\n                var options = this.options;\n                var markerColor = options.markerColor;\n                return deepExtend({}, options.markers, {\n                    background: markerColor,\n                    border: { color: markerColor }\n                });\n            },\n            createLabel: function () {\n                var options = this.options;\n                var labelOptions = deepExtend({}, options.labels);\n                this.container.append(new TextBox(options.text, labelOptions));\n            },\n            renderComplete: function () {\n                BoxElement.fn.renderComplete.call(this);\n                var cursor = this.options.cursor || {};\n                var eventSink = this._itemOverlay = Path.fromRect(this.container.box.toRect(), {\n                    fill: {\n                        color: WHITE,\n                        opacity: 0\n                    },\n                    stroke: null,\n                    cursor: cursor.style || cursor\n                });\n                this.appendVisual(eventSink);\n            },\n            click: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_CLICK, args) && e && e.type === 'contextmenu') {\n                    e.preventDefault();\n                }\n            },\n            over: function (widget, e) {\n                var args = this.eventArgs(e);\n                if (!widget.trigger(LEGEND_ITEM_HOVER, args)) {\n                    widget._legendItemHover(args.seriesIndex, args.pointIndex);\n                }\n                return true;\n            },\n            out: function (widget, e) {\n                widget._unsetActivePoint();\n                widget.trigger(LEGEND_ITEM_LEAVE, this.eventArgs(e));\n            },\n            eventArgs: function (e) {\n                var options = this.options;\n                return {\n                    element: eventElement(e),\n                    text: options.text,\n                    series: options.series,\n                    seriesIndex: options.series.index,\n                    pointIndex: options.pointIndex\n                };\n            },\n            renderVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var customVisual = options.visual;\n                if (customVisual) {\n                    this.visual = customVisual({\n                        active: options.active,\n                        series: options.series,\n                        sender: this.getSender(),\n                        pointIndex: options.pointIndex,\n                        options: {\n                            markers: this.markerOptions(),\n                            labels: options.labels\n                        },\n                        createVisual: function () {\n                            this$1.createVisual();\n                            this$1.renderChildren();\n                            this$1.renderComplete();\n                            var defaultVisual = this$1.visual;\n                            delete this$1.visual;\n                            return defaultVisual;\n                        }\n                    });\n                    this.addVisual();\n                } else {\n                    BoxElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        var HORIZONTAL = 'horizontal';\n        var POINTER = 'pointer';\n        var CUSTOM = 'custom';\n        var Legend = ChartElement.extend({\n            init: function (options, chartService) {\n                if (chartService === void 0) {\n                    chartService = {};\n                }\n                ChartElement.fn.init.call(this, options);\n                this.chartService = chartService;\n                if (!inArray(this.options.position, [\n                        TOP,\n                        RIGHT,\n                        BOTTOM,\n                        LEFT,\n                        CUSTOM\n                    ])) {\n                    this.options.position = RIGHT;\n                }\n                this.createContainer();\n                this.createItems();\n            },\n            createContainer: function () {\n                var options = this.options;\n                var position = options.position;\n                var userAlign = options.align;\n                var align = position;\n                var vAlign = CENTER;\n                if (position === CUSTOM) {\n                    align = LEFT;\n                } else if (inArray(position, [\n                        TOP,\n                        BOTTOM\n                    ])) {\n                    if (userAlign === 'start') {\n                        align = LEFT;\n                    } else if (userAlign === 'end') {\n                        align = RIGHT;\n                    } else {\n                        align = CENTER;\n                    }\n                    vAlign = position;\n                } else if (userAlign) {\n                    if (userAlign === 'start') {\n                        vAlign = TOP;\n                    } else if (userAlign === 'end') {\n                        vAlign = BOTTOM;\n                    }\n                }\n                this.container = new BoxElement({\n                    margin: options.margin,\n                    padding: options.padding,\n                    background: options.background,\n                    border: options.border,\n                    vAlign: vAlign,\n                    align: align,\n                    zIndex: options.zIndex,\n                    shrinkToFit: true\n                });\n                this.append(this.container);\n            },\n            createItems: function () {\n                var chartService = this.getService();\n                var options = this.options;\n                var vertical = this.isVertical();\n                var innerElement = new LegendLayout({\n                    vertical: vertical,\n                    spacing: options.spacing,\n                    rtl: chartService.rtl\n                }, chartService);\n                var items = options.items;\n                if (options.reverse) {\n                    items = items.slice(0).reverse();\n                }\n                var count = items.length;\n                for (var i = 0; i < count; i++) {\n                    var item = items[i];\n                    innerElement.append(new LegendItem(deepExtend({}, {\n                        markers: options.markers,\n                        labels: options.labels,\n                        rtl: chartService.rtl\n                    }, options.item, item)));\n                }\n                innerElement.render();\n                this.container.append(innerElement);\n            },\n            isVertical: function () {\n                var ref = this.options;\n                var orientation = ref.orientation;\n                var position = ref.position;\n                var vertical = position === CUSTOM && orientation !== HORIZONTAL || (defined(orientation) ? orientation !== HORIZONTAL : inArray(position, [\n                    LEFT,\n                    RIGHT\n                ]));\n                return vertical;\n            },\n            hasItems: function () {\n                return this.container.children[0].children.length > 0;\n            },\n            reflow: function (targetBox) {\n                var options = this.options;\n                var legendBox = targetBox.clone();\n                if (!this.hasItems()) {\n                    this.box = legendBox;\n                    return;\n                }\n                if (options.position === CUSTOM) {\n                    this.containerCustomReflow(legendBox);\n                    this.box = legendBox;\n                } else {\n                    this.containerReflow(legendBox);\n                }\n            },\n            containerReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var position = options.position;\n                var width = options.width;\n                var height = options.height;\n                var pos = position === TOP || position === BOTTOM ? X : Y;\n                var vertical = this.isVertical();\n                var alignTarget = targetBox.clone();\n                var containerBox = targetBox.clone();\n                if (position === LEFT || position === RIGHT) {\n                    containerBox.y1 = alignTarget.y1 = 0;\n                }\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                    containerBox.align(alignTarget, Y, container.options.vAlign);\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                    containerBox.align(alignTarget, X, container.options.align);\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                var box = containerBox.clone();\n                if (options.offsetX || options.offsetY) {\n                    containerBox.translate(options.offsetX, options.offsetY);\n                    this.container.reflow(containerBox);\n                }\n                box[pos + 1] = targetBox[pos + 1];\n                box[pos + 2] = targetBox[pos + 2];\n                this.box = box;\n            },\n            containerCustomReflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var container = ref.container;\n                var offsetX = options.offsetX;\n                var offsetY = options.offsetY;\n                var width = options.width;\n                var height = options.height;\n                var vertical = this.isVertical();\n                var containerBox = targetBox.clone();\n                if (vertical && height) {\n                    containerBox.y2 = containerBox.y1 + height;\n                } else if (!vertical && width) {\n                    containerBox.x2 = containerBox.x1 + width;\n                }\n                container.reflow(containerBox);\n                containerBox = container.box;\n                container.reflow(new Box(offsetX, offsetY, offsetX + containerBox.width(), offsetY + containerBox.height()));\n            },\n            renderVisual: function () {\n                if (this.hasItems()) {\n                    ChartElement.fn.renderVisual.call(this);\n                }\n            }\n        });\n        setDefaultOptions(Legend, {\n            position: RIGHT,\n            items: [],\n            offsetX: 0,\n            offsetY: 0,\n            margin: getSpacing(5),\n            padding: getSpacing(5),\n            border: {\n                color: BLACK,\n                width: 0\n            },\n            item: {\n                cursor: POINTER,\n                spacing: 6\n            },\n            spacing: 6,\n            background: '',\n            zIndex: 1,\n            markers: {\n                border: { width: 0 },\n                width: 15,\n                height: 3,\n                type: 'rect',\n                align: LEFT,\n                vAlign: CENTER\n            }\n        });\n        var PlotAreaFactory = Class.extend({\n            init: function () {\n                this._registry = [];\n            },\n            register: function (type, seriesTypes) {\n                this._registry.push({\n                    type: type,\n                    seriesTypes: seriesTypes\n                });\n            },\n            create: function (srcSeries, options, chartService) {\n                var registry = this._registry;\n                var match = registry[0];\n                var series;\n                for (var idx = 0; idx < registry.length; idx++) {\n                    var entry = registry[idx];\n                    series = filterSeriesByType(srcSeries, entry.seriesTypes);\n                    if (series.length > 0) {\n                        match = entry;\n                        break;\n                    }\n                }\n                return new match.type(series, options, chartService);\n            }\n        });\n        PlotAreaFactory.current = new PlotAreaFactory();\n        var ZOOM_ACCELERATION = 3;\n        var SELECTOR_HEIGHT_ADJUST = 0.1;\n        function createDiv(className) {\n            var element = document.createElement('div');\n            if (className) {\n                element.className = className;\n            }\n            return element;\n        }\n        function closestHandle(element) {\n            var current = element;\n            while (current && !hasClasses(current, 'k-handle')) {\n                current = current.parentNode;\n            }\n            return current;\n        }\n        var Selection = Class.extend({\n            init: function (chart, categoryAxis, options, observer) {\n                var chartElement = chart.element;\n                this.options = deepExtend({}, this.options, options);\n                this.chart = chart;\n                this.observer = observer;\n                this.chartElement = chartElement;\n                this.categoryAxis = categoryAxis;\n                this._dateAxis = this.categoryAxis instanceof dataviz.DateCategoryAxis;\n                this.initOptions();\n                this.visible = this.options.visible && chartElement.offsetHeight;\n                if (this.visible) {\n                    this.createElements();\n                    this.set(this._index(this.options.from), this._index(this.options.to));\n                    this.bindEvents();\n                }\n            },\n            onPane: function (pane) {\n                return this.categoryAxis.pane === pane;\n            },\n            createElements: function () {\n                var options = this.options;\n                var wrapper = this.wrapper = createDiv('k-selector');\n                elementStyles(wrapper, {\n                    top: options.offset.top,\n                    left: options.offset.left,\n                    width: options.width,\n                    height: options.height,\n                    direction: 'ltr'\n                });\n                var selection = this.selection = createDiv('k-selection');\n                this.leftMask = createDiv('k-mask');\n                this.rightMask = createDiv('k-mask');\n                wrapper.appendChild(this.leftMask);\n                wrapper.appendChild(this.rightMask);\n                wrapper.appendChild(selection);\n                selection.appendChild(createDiv('k-selection-bg'));\n                var leftHandle = this.leftHandle = createDiv('k-handle k-left-handle');\n                var rightHandle = this.rightHandle = createDiv('k-handle k-right-handle');\n                leftHandle.appendChild(createDiv());\n                rightHandle.appendChild(createDiv());\n                selection.appendChild(leftHandle);\n                selection.appendChild(rightHandle);\n                this.chartElement.appendChild(wrapper);\n                var selectionStyles = elementStyles(selection, [\n                    'borderLeftWidth',\n                    'borderRightWidth',\n                    'height'\n                ]);\n                var leftHandleHeight = elementStyles(leftHandle, 'height').height;\n                var rightHandleHeight = elementStyles(rightHandle, 'height').height;\n                options.selection = {\n                    border: {\n                        left: selectionStyles.borderLeftWidth,\n                        right: selectionStyles.borderRightWidth\n                    }\n                };\n                elementStyles(leftHandle, { top: (selectionStyles.height - leftHandleHeight) / 2 });\n                elementStyles(rightHandle, { top: (selectionStyles.height - rightHandleHeight) / 2 });\n                wrapper.style.cssText = wrapper.style.cssText;\n            },\n            bindEvents: function () {\n                if (this.options.mousewheel !== false) {\n                    this._mousewheelHandler = this._mousewheel.bind(this);\n                    var obj;\n                    bindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                }\n                this._domEvents = services.DomEventsBuilder.create(this.wrapper, {\n                    stopPropagation: true,\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    press: this._press.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n            },\n            initOptions: function () {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var box = categoryAxis.pane.chartsBox();\n                var intlService = this.chart.chartService.intl;\n                if (this._dateAxis) {\n                    deepExtend(options, {\n                        min: parseDate(intlService, options.min),\n                        max: parseDate(intlService, options.max),\n                        from: parseDate(intlService, options.from),\n                        to: parseDate(intlService, options.to)\n                    });\n                }\n                var ref$1 = elementStyles(this.chartElement, [\n                    'paddingLeft',\n                    'paddingTop'\n                ]);\n                var paddingLeft = ref$1.paddingLeft;\n                var paddingTop = ref$1.paddingTop;\n                this.options = deepExtend({}, {\n                    width: box.width(),\n                    height: box.height() + SELECTOR_HEIGHT_ADJUST,\n                    padding: {\n                        left: paddingLeft,\n                        top: paddingTop\n                    },\n                    offset: {\n                        left: box.x1 + paddingLeft,\n                        top: box.y1 + paddingTop\n                    },\n                    from: options.min,\n                    to: options.max\n                }, options);\n            },\n            destroy: function () {\n                if (this._domEvents) {\n                    this._domEvents.destroy();\n                    delete this._domEvents;\n                }\n                clearTimeout(this._mwTimeout);\n                this._state = null;\n                if (this.wrapper) {\n                    if (this._mousewheelHandler) {\n                        var obj;\n                        unbindEvents(this.wrapper, (obj = {}, obj[MOUSEWHEEL] = this._mousewheelHandler, obj));\n                        this._mousewheelHandler = null;\n                    }\n                    this.chartElement.removeChild(this.wrapper);\n                    this.wrapper = null;\n                }\n            },\n            _rangeEventArgs: function (range) {\n                return {\n                    axis: this.categoryAxis.options,\n                    from: this._value(range.from),\n                    to: this._value(range.to)\n                };\n            },\n            _start: function (e) {\n                var options = this.options;\n                var target = eventElement(e);\n                if (this._state || !target) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                this._state = {\n                    moveTarget: closestHandle(target) || target,\n                    startLocation: e.x ? e.x.location : 0,\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs({\n                    from: this._index(options.from),\n                    to: this._index(options.to)\n                });\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                }\n            },\n            _press: function (e) {\n                var handle;\n                if (this._state) {\n                    handle = this._state.moveTarget;\n                } else {\n                    handle = closestHandle(eventElement(e));\n                }\n                if (handle) {\n                    dataviz.addClass(handle, 'k-handle-active');\n                }\n            },\n            _move: function (e) {\n                if (!this._state) {\n                    return;\n                }\n                var ref = this;\n                var state = ref._state;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var range = state.range;\n                var target = state.moveTarget;\n                var reverse = categoryAxis.options.reverse;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var delta = state.startLocation - e.x.location;\n                var oldRange = {\n                    from: range.from,\n                    to: range.to\n                };\n                var span = range.to - range.from;\n                var scale = elementStyles(this.wrapper, 'width').width / (categoryAxis.categoriesCount() - 1);\n                var offset = Math.round(delta / scale) * (reverse ? -1 : 1);\n                if (!target) {\n                    return;\n                }\n                var leftHandle = hasClasses(target, 'k-left-handle');\n                var rightHandle = hasClasses(target, 'k-right-handle');\n                if (hasClasses(target, 'k-selection k-selection-bg')) {\n                    range.from = Math.min(Math.max(min, from - offset), max - span);\n                    range.to = Math.min(range.from + span, max);\n                } else if (leftHandle && !reverse || rightHandle && reverse) {\n                    range.from = Math.min(Math.max(min, from - offset), max - 1);\n                    range.to = Math.max(range.from + 1, range.to);\n                } else if (leftHandle && reverse || rightHandle && !reverse) {\n                    range.to = Math.min(Math.max(min + 1, to - offset), max);\n                    range.from = Math.min(range.to - 1, range.from);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.move(range.from, range.to);\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                }\n            },\n            _end: function () {\n                if (this._state) {\n                    var moveTarget = this._state.moveTarget;\n                    if (moveTarget) {\n                        dataviz.removeClass(moveTarget, 'k-handle-active');\n                    }\n                    var range = this._state.range;\n                    this.set(range.from, range.to);\n                    this.trigger(SELECT_END, this._rangeEventArgs(range));\n                    delete this._state;\n                }\n            },\n            _tap: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var coords = this.chart._eventCoordinates(e);\n                var categoryIx = categoryAxis.pointCategoryIndex(new Point(coords.x, categoryAxis.box.y1));\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var span = to - from;\n                var mid = from + span / 2;\n                var range = {};\n                var rightClick = e.event.which === 3;\n                var offset = Math.round(mid - categoryIx);\n                if (this._state || rightClick) {\n                    return;\n                }\n                this.chart._unsetActivePoint();\n                if (!categoryAxis.options.justified) {\n                    offset--;\n                }\n                range.from = Math.min(Math.max(min, from - offset), max - span);\n                range.to = Math.min(range.from + span, max);\n                this._start(e);\n                if (this._state) {\n                    this._state.range = range;\n                    this.trigger(SELECT, this._rangeEventArgs(range));\n                    this._end();\n                }\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                this._start({ target: this.selection });\n                if (this._state) {\n                    var range = this._state.range;\n                    e.preventDefault();\n                    e.stopPropagation();\n                    if (Math.abs(delta) > 1) {\n                        delta *= ZOOM_ACCELERATION;\n                    }\n                    if (this.options.mousewheel.reverse) {\n                        delta *= -1;\n                    }\n                    if (this.expand(delta)) {\n                        this.trigger(SELECT, {\n                            axis: this.categoryAxis.options,\n                            delta: delta,\n                            originalEvent: e,\n                            from: this._value(range.from),\n                            to: this._value(range.to)\n                        });\n                    }\n                    if (this._mwTimeout) {\n                        clearTimeout(this._mwTimeout);\n                    }\n                    this._mwTimeout = setTimeout(function () {\n                        this$1._end();\n                    }, MOUSEWHEEL_DELAY);\n                }\n            },\n            _gesturestart: function (e) {\n                var options = this.options;\n                this._state = {\n                    range: {\n                        from: this._index(options.from),\n                        to: this._index(options.to)\n                    }\n                };\n                var args = this._rangeEventArgs(this._state.range);\n                if (this.trigger(SELECT_START, args)) {\n                    this._state = null;\n                } else {\n                    e.preventDefault();\n                }\n            },\n            _gestureend: function () {\n                if (this._state) {\n                    this.trigger(SELECT_END, this._rangeEventArgs(this._state.range));\n                    delete this._state;\n                }\n            },\n            _gesturechange: function (e) {\n                var ref = this;\n                var chart = ref.chart;\n                var state = ref._state;\n                var options = ref.options;\n                var categoryAxis = ref.categoryAxis;\n                var range = state.range;\n                var p0 = chart._toModelCoordinates(e.touches[0].x.location).x;\n                var p1 = chart._toModelCoordinates(e.touches[1].x.location).x;\n                var left = Math.min(p0, p1);\n                var right = Math.max(p0, p1);\n                e.preventDefault();\n                range.from = categoryAxis.pointCategoryIndex(new Point(left)) || options.min;\n                range.to = categoryAxis.pointCategoryIndex(new Point(right)) || options.max;\n                this.move(range.from, range.to);\n                this.trigger(SELECT, this._rangeEventArgs(range));\n            },\n            _index: function (value) {\n                var index = value;\n                if (value instanceof Date) {\n                    index = this.categoryAxis.categoryIndex(value);\n                }\n                return index;\n            },\n            _value: function (index) {\n                var value = index;\n                if (this._dateAxis) {\n                    value = this.categoryAxis.categoryAt(index);\n                    if (value > this.options.max) {\n                        value = this.options.max;\n                    }\n                }\n                return value;\n            },\n            _slot: function (value) {\n                var categoryAxis = this.categoryAxis;\n                var index = this._index(value);\n                return categoryAxis.getSlot(index, index, true);\n            },\n            move: function (from, to) {\n                var options = this.options;\n                var reverse = this.categoryAxis.options.reverse;\n                var offset = options.offset;\n                var padding = options.padding;\n                var border = options.selection.border;\n                var left = reverse ? to : from;\n                var right = reverse ? from : to;\n                var edge = 'x' + (reverse ? 2 : 1);\n                var box = this._slot(left);\n                var leftMaskWidth = round(box[edge] - offset.left + padding.left);\n                elementStyles(this.leftMask, { width: leftMaskWidth });\n                elementStyles(this.selection, { left: leftMaskWidth });\n                box = this._slot(right);\n                var rightMaskWidth = round(options.width - (box[edge] - offset.left + padding.left));\n                elementStyles(this.rightMask, { width: rightMaskWidth });\n                var distance = options.width - rightMaskWidth;\n                if (distance !== options.width) {\n                    distance += border.right;\n                }\n                elementStyles(this.rightMask, { left: distance });\n                elementStyles(this.selection, { width: Math.max(options.width - (leftMaskWidth + rightMaskWidth) - border.right, 0) });\n            },\n            set: function (from, to) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var fromValue = limitValue(this._index(from), min, max);\n                var toValue = limitValue(this._index(to), fromValue + 1, max);\n                if (options.visible) {\n                    this.move(fromValue, toValue);\n                }\n                options.from = this._value(fromValue);\n                options.to = this._value(toValue);\n            },\n            expand: function (delta) {\n                var options = this.options;\n                var min = this._index(options.min);\n                var max = this._index(options.max);\n                var zDir = options.mousewheel.zoom;\n                var from = this._index(options.from);\n                var to = this._index(options.to);\n                var range = {\n                    from: from,\n                    to: to\n                };\n                var oldRange = deepExtend({}, range);\n                if (this._state) {\n                    range = this._state.range;\n                }\n                if (zDir !== RIGHT) {\n                    range.from = limitValue(limitValue(from - delta, 0, to - 1), min, max);\n                }\n                if (zDir !== LEFT) {\n                    range.to = limitValue(limitValue(to + delta, range.from + 1, max), min, max);\n                }\n                if (range.from !== oldRange.from || range.to !== oldRange.to) {\n                    this.set(range.from, range.to);\n                    return true;\n                }\n            },\n            trigger: function (name, args) {\n                return (this.observer || this.chart).trigger(name, args);\n            }\n        });\n        setDefaultOptions(Selection, {\n            visible: true,\n            mousewheel: { zoom: 'both' },\n            min: MIN_VALUE,\n            max: MAX_VALUE\n        });\n        var Tooltip = BaseTooltip.extend({\n            show: function (point) {\n                if (!point || !point.tooltipAnchor || this._current && this._current === point) {\n                    return;\n                }\n                var options = deepExtend({}, this.options, point.options.tooltip);\n                var anchor = point.tooltipAnchor();\n                if (anchor) {\n                    this._current = point;\n                    BaseTooltip.fn.show.call(this, {\n                        point: point,\n                        anchor: anchor\n                    }, options, point);\n                } else {\n                    this.hide();\n                }\n            },\n            hide: function () {\n                delete this._current;\n                BaseTooltip.fn.hide.call(this);\n            }\n        });\n        var SharedTooltip = BaseTooltip.extend({\n            init: function (plotArea, options) {\n                BaseTooltip.fn.init.call(this, plotArea.chartService, options);\n                this.plotArea = plotArea;\n                this.formatService = plotArea.chartService.format;\n            },\n            showAt: function (points, coords) {\n                var tooltipPoints = grep(points, function (point) {\n                    var tooltip = point.series.tooltip;\n                    var excluded = tooltip && tooltip.visible === false;\n                    return !excluded;\n                });\n                if (tooltipPoints.length > 0) {\n                    var point = tooltipPoints[0];\n                    var slot = this.plotArea.categoryAxis.getSlot(point.categoryIx);\n                    var anchor = coords ? this._slotAnchor(coords, slot) : this._defaultAnchor(point, slot);\n                    this.show({\n                        anchor: anchor,\n                        shared: true,\n                        points: points,\n                        category: point.category,\n                        categoryText: this.formatService.auto(this.options.categoryFormat, point.category),\n                        series: this.plotArea.series\n                    }, this.options);\n                }\n            },\n            _slotAnchor: function (point, slot) {\n                var axis = this.plotArea.categoryAxis;\n                var align = {\n                    horizontal: 'left',\n                    vertical: 'center'\n                };\n                if (!axis.options.vertical) {\n                    point.x = slot.center().x;\n                }\n                return {\n                    point: point,\n                    align: align\n                };\n            },\n            _defaultAnchor: function (point, slot) {\n                var box = point.owner.pane.chartsBox();\n                var vertical = this.plotArea.categoryAxis.options.vertical;\n                var center = box.center();\n                var slotCenter = slot.center();\n                var align = {\n                    horizontal: 'center',\n                    vertical: 'center'\n                };\n                var centerPoint;\n                if (vertical) {\n                    centerPoint = new Point(center.x, slotCenter.y);\n                } else {\n                    centerPoint = new Point(slotCenter.x, center.y);\n                }\n                return {\n                    point: centerPoint,\n                    align: align\n                };\n            }\n        });\n        setDefaultOptions(SharedTooltip, { categoryFormat: '{0:d}' });\n        var BarChartAnimation = Animation.extend({\n            setup: function () {\n                var ref = this;\n                var element = ref.element;\n                var options = ref.options;\n                var bbox = element.bbox();\n                if (bbox) {\n                    this.origin = options.origin;\n                    var axis = options.vertical ? Y : X;\n                    var fromScale = this.fromScale = new GeometryPoint(1, 1);\n                    fromScale[axis] = START_SCALE;\n                    element.transform(transform().scale(fromScale.x, fromScale.y));\n                } else {\n                    this.abort();\n                }\n            },\n            step: function (pos) {\n                var scaleX = dataviz.interpolateValue(this.fromScale.x, 1, pos);\n                var scaleY = dataviz.interpolateValue(this.fromScale.y, 1, pos);\n                this.element.transform(transform().scale(scaleX, scaleY, this.origin));\n            },\n            abort: function () {\n                Animation.fn.abort.call(this);\n                this.element.transform(null);\n            }\n        });\n        setDefaultOptions(BarChartAnimation, { duration: INITIAL_ANIMATION_DURATION });\n        AnimationFactory.current.register(BAR, BarChartAnimation);\n        var BubbleAnimation = Animation.extend({\n            setup: function () {\n                var center = this.center = this.element.bbox().center();\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.center));\n            }\n        });\n        setDefaultOptions(BubbleAnimation, { easing: 'easeOutElastic' });\n        AnimationFactory.current.register(BUBBLE, BubbleAnimation);\n        var FadeInAnimation = Animation.extend({\n            setup: function () {\n                this.fadeTo = this.element.opacity();\n                this.element.opacity(0);\n            },\n            step: function (pos) {\n                this.element.opacity(pos * this.fadeTo);\n            }\n        });\n        setDefaultOptions(FadeInAnimation, {\n            duration: 200,\n            easing: 'linear'\n        });\n        AnimationFactory.current.register(FADEIN, FadeInAnimation);\n        var PieAnimation = Animation.extend({\n            setup: function () {\n                this.element.transform(transform().scale(START_SCALE, START_SCALE, this.options.center));\n            },\n            step: function (pos) {\n                this.element.transform(transform().scale(pos, pos, this.options.center));\n            }\n        });\n        setDefaultOptions(PieAnimation, {\n            easing: 'easeOutElastic',\n            duration: INITIAL_ANIMATION_DURATION\n        });\n        AnimationFactory.current.register(PIE, PieAnimation);\n        var ScatterLineChart = ScatterChart.extend({\n            render: function () {\n                ScatterChart.fn.render.call(this);\n                this.renderSegments();\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                return new pointType(linePoints, currentSeries, seriesIx);\n            },\n            animationPoints: function () {\n                var points = ScatterChart.fn.animationPoints.call(this);\n                return points.concat(this._segments);\n            },\n            createMissingValue: function (value, missingValues) {\n                if (missingValues === ZERO) {\n                    var missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (!hasValue(missingValue.x)) {\n                        missingValue.x = 0;\n                    }\n                    if (!hasValue(missingValue.y)) {\n                        missingValue.y = 0;\n                    }\n                    return missingValue;\n                }\n            }\n        });\n        deepExtend(ScatterLineChart.prototype, LineChartMixin);\n        var XYPlotArea = PlotAreaBase.extend({\n            initFields: function () {\n                this.namedXAxes = {};\n                this.namedYAxes = {};\n                this.xAxisRangeTracker = new AxisGroupRangeTracker();\n                this.yAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function (panes) {\n                var this$1 = this;\n                if (panes === void 0) {\n                    panes = this.panes;\n                }\n                var seriesByPane = this.groupSeriesByPane();\n                for (var i = 0; i < panes.length; i++) {\n                    var pane = panes[i];\n                    var paneSeries = seriesByPane[pane.options.name || 'default'] || [];\n                    this$1.addToLegend(paneSeries);\n                    var filteredSeries = this$1.filterVisibleSeries(paneSeries);\n                    if (!filteredSeries) {\n                        continue;\n                    }\n                    this$1.createScatterChart(filterSeriesByType(filteredSeries, SCATTER), pane);\n                    this$1.createScatterLineChart(filterSeriesByType(filteredSeries, SCATTER_LINE), pane);\n                    this$1.createBubbleChart(filterSeriesByType(filteredSeries, BUBBLE), pane);\n                }\n                this.createAxes(panes);\n            },\n            appendChart: function (chart, pane) {\n                this.xAxisRangeTracker.update(chart.xAxisRanges);\n                this.yAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n            },\n            removeAxis: function (axis) {\n                var axisName = axis.options.name;\n                PlotAreaBase.fn.removeAxis.call(this, axis);\n                if (axis.options.vertical) {\n                    this.yAxisRangeTracker.reset(axisName);\n                    delete this.namedYAxes[axisName];\n                } else {\n                    this.xAxisRangeTracker.reset(axisName);\n                    delete this.namedXAxes[axisName];\n                }\n                if (axis === this.axisX) {\n                    delete this.axisX;\n                }\n                if (axis === this.axisY) {\n                    delete this.axisY;\n                }\n            },\n            seriesPaneName: function (series) {\n                var options = this.options;\n                var xAxisName = series.xAxis;\n                var xAxisOptions = [].concat(options.xAxis);\n                var xAxis = grep(xAxisOptions, function (a) {\n                    return a.name === xAxisName;\n                })[0];\n                var yAxisName = series.yAxis;\n                var yAxisOptions = [].concat(options.yAxis);\n                var yAxis = grep(yAxisOptions, function (a) {\n                    return a.name === yAxisName;\n                })[0];\n                var panes = options.panes || [{}];\n                var defaultPaneName = panes[0].name || 'default';\n                var paneName = (xAxis || {}).pane || (yAxis || {}).pane || defaultPaneName;\n                return paneName;\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createScatterLineChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new ScatterLineChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createBubbleChart: function (series, pane) {\n                if (series.length > 0) {\n                    this.appendChart(new BubbleChart(this, {\n                        series: series,\n                        clip: pane.options.clip\n                    }), pane);\n                }\n            },\n            createXYAxis: function (options, vertical, axisIndex) {\n                var axisName = options.name;\n                var namedAxes = vertical ? this.namedYAxes : this.namedXAxes;\n                var tracker = vertical ? this.yAxisRangeTracker : this.xAxisRangeTracker;\n                var axisOptions = deepExtend({ reverse: !vertical && this.chartService.rtl }, options, { vertical: vertical });\n                var isLog = equalsIgnoreCase(axisOptions.type, LOGARITHMIC);\n                var defaultRange = tracker.query();\n                var defaultAxisRange = isLog ? {\n                    min: 0.1,\n                    max: 1\n                } : {\n                    min: 0,\n                    max: 1\n                };\n                var range = tracker.query(axisName) || defaultRange || defaultAxisRange;\n                var typeSamples = [\n                    axisOptions.min,\n                    axisOptions.max\n                ];\n                var series = this.series;\n                for (var seriesIx = 0; seriesIx < series.length; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var seriesAxisName = currentSeries[vertical ? 'yAxis' : 'xAxis'];\n                    if (seriesAxisName === axisOptions.name || axisIndex === 0 && !seriesAxisName) {\n                        var firstPointValue = SeriesBinder.current.bindPoint(currentSeries, 0).valueFields;\n                        typeSamples.push(firstPointValue[vertical ? 'y' : 'x']);\n                        break;\n                    }\n                }\n                if (axisIndex === 0 && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var inferredDate;\n                for (var i = 0; i < typeSamples.length; i++) {\n                    if (typeSamples[i] instanceof Date) {\n                        inferredDate = true;\n                        break;\n                    }\n                }\n                var axisType;\n                if (equalsIgnoreCase(axisOptions.type, DATE) || !axisOptions.type && inferredDate) {\n                    axisType = dataviz.DateValueAxis;\n                } else if (isLog) {\n                    axisType = dataviz.LogarithmicAxis;\n                } else {\n                    axisType = dataviz.NumericAxis;\n                }\n                var axis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                axis.axisIndex = axisIndex;\n                if (axisName) {\n                    if (namedAxes[axisName]) {\n                        throw new Error((vertical ? 'Y' : 'X') + ' axis with name ' + axisName + ' is already defined');\n                    }\n                    namedAxes[axisName] = axis;\n                }\n                this.appendAxis(axis);\n                return axis;\n            },\n            createAxes: function (panes) {\n                var this$1 = this;\n                var options = this.options;\n                var xAxesOptions = [].concat(options.xAxis);\n                var xAxes = [];\n                var yAxesOptions = [].concat(options.yAxis);\n                var yAxes = [];\n                for (var idx = 0; idx < xAxesOptions.length; idx++) {\n                    var axisPane = this$1.findPane(xAxesOptions[idx].pane);\n                    if (inArray(axisPane, panes)) {\n                        xAxes.push(this$1.createXYAxis(xAxesOptions[idx], false, idx));\n                    }\n                }\n                for (var idx$1 = 0; idx$1 < yAxesOptions.length; idx$1++) {\n                    var axisPane$1 = this$1.findPane(yAxesOptions[idx$1].pane);\n                    if (inArray(axisPane$1, panes)) {\n                        yAxes.push(this$1.createXYAxis(yAxesOptions[idx$1], true, idx$1));\n                    }\n                }\n                this.axisX = this.axisX || xAxes[0];\n                this.axisY = this.axisY || yAxes[0];\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var allAxes = this.axes;\n                var length = allAxes.length;\n                var xValues = [];\n                var yValues = [];\n                for (var i = 0; i < length; i++) {\n                    var axis = allAxes[i];\n                    var values = axis.options.vertical ? yValues : xValues;\n                    var currentValue = axis.getValue(point);\n                    if (currentValue !== null) {\n                        values.push(currentValue);\n                    }\n                }\n                if (xValues.length > 0 && yValues.length > 0) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        originalEvent: e,\n                        x: singleItemOrArray(xValues),\n                        y: singleItemOrArray(yValues)\n                    });\n                }\n            },\n            updateAxisOptions: function (axis, options) {\n                var vertical = axis.options.vertical;\n                var axes = this.groupAxes(this.panes);\n                var index = (vertical ? axes.y : axes.x).indexOf(axis);\n                updateAxisOptions$1(this.options, index, vertical, options);\n                updateAxisOptions$1(this.originalOptions, index, vertical, options);\n            }\n        });\n        function updateAxisOptions$1(targetOptions, axisIndex, vertical, options) {\n            var axisOptions = [].concat(vertical ? targetOptions.yAxis : targetOptions.xAxis)[axisIndex];\n            deepExtend(axisOptions, options);\n        }\n        setDefaultOptions(XYPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(XYPlotArea.prototype, PlotAreaEventsMixin);\n        var PieSegment = ChartElement.extend({\n            init: function (value, sector, options) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.sector = sector;\n            },\n            render: function () {\n                var labels = this.options.labels;\n                var chartService = this.owner.chartService;\n                var labelText = this.value;\n                if (this._rendered || this.visible === false) {\n                    return;\n                }\n                this._rendered = true;\n                var labelTemplate = getTemplate(labels);\n                var pointData = this.pointData();\n                if (labelTemplate) {\n                    labelText = labelTemplate(pointData);\n                } else if (labels.format) {\n                    labelText = chartService.format.auto(labels.format, labelText);\n                }\n                if (labels.visible && (labelText || labelText === 0)) {\n                    if (labels.position === CENTER || labels.position === INSIDE_END) {\n                        if (!labels.color) {\n                            var brightnessValue = new Color(this.options.color).percBrightness();\n                            if (brightnessValue > 180) {\n                                labels.color = BLACK;\n                            } else {\n                                labels.color = WHITE;\n                            }\n                        }\n                        if (!labels.background) {\n                            labels.background = this.options.color;\n                        }\n                    } else {\n                        var themeLabels = chartService.theme.seriesDefaults.labels;\n                        labels.color = labels.color || themeLabels.color;\n                        labels.background = labels.background || themeLabels.background;\n                    }\n                    this.label = new TextBox(labelText, deepExtend({}, labels, {\n                        align: CENTER,\n                        vAlign: '',\n                        animation: {\n                            type: FADEIN,\n                            delay: this.animationDelay\n                        }\n                    }), pointData);\n                    this.append(this.label);\n                }\n            },\n            reflow: function (targetBox) {\n                this.render();\n                this.box = targetBox;\n                this.reflowLabel();\n            },\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var labelsDistance = labelsOptions.distance;\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    var labelWidth = label.box.width();\n                    var lp;\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius = Math.abs((sector.radius - labelHeight) / 2) + labelHeight;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else if (labelsOptions.position === INSIDE_END) {\n                        sector.radius = sector.radius - labelHeight / 2;\n                        lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        var x1;\n                        lp = sector.clone().expand(labelsDistance).point(angle);\n                        if (lp.x >= sector.center.x) {\n                            x1 = lp.x + labelWidth;\n                            label.orientation = RIGHT;\n                        } else {\n                            x1 = lp.x - labelWidth;\n                            label.orientation = LEFT;\n                        }\n                        label.reflow(new Box(x1, lp.y - labelHeight, lp.x, lp.y));\n                    }\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                ChartElement.fn.createVisual.call(this);\n                if (this.value) {\n                    if (options.visual) {\n                        var startAngle = (sector.startAngle + 180) % 360;\n                        var visual = options.visual({\n                            category: this.category,\n                            dataItem: this.dataItem,\n                            value: this.value,\n                            series: this.series,\n                            percentage: this.percentage,\n                            center: new GeometryPoint(sector.center.x, sector.center.y),\n                            radius: sector.radius,\n                            innerRadius: sector.innerRadius,\n                            startAngle: startAngle,\n                            endAngle: startAngle + sector.angle,\n                            options: options,\n                            sender: this.getSender(),\n                            createVisual: function () {\n                                var group = new Group();\n                                this$1.createSegmentVisual(group);\n                                return group;\n                            }\n                        });\n                        if (visual) {\n                            this.visual.append(visual);\n                        }\n                    } else {\n                        this.createSegmentVisual(this.visual);\n                    }\n                }\n            },\n            createSegmentVisual: function (group) {\n                var ref = this;\n                var sector = ref.sector;\n                var options = ref.options;\n                var borderOptions = options.border || {};\n                var border = borderOptions.width > 0 ? {\n                    stroke: {\n                        color: borderOptions.color,\n                        width: borderOptions.width,\n                        opacity: borderOptions.opacity,\n                        dashType: borderOptions.dashType\n                    }\n                } : {};\n                var color = options.color;\n                var fill = {\n                    color: color,\n                    opacity: options.opacity\n                };\n                var visual = this.createSegment(sector, deepExtend({\n                    fill: fill,\n                    stroke: { opacity: options.opacity },\n                    zIndex: options.zIndex\n                }, border));\n                group.append(visual);\n                if (hasGradientOverlay(options)) {\n                    group.append(this.createGradientOverlay(visual, {\n                        baseColor: color,\n                        fallbackFill: fill\n                    }, deepExtend({\n                        center: [\n                            sector.center.x,\n                            sector.center.y\n                        ],\n                        innerRadius: sector.innerRadius,\n                        radius: sector.radius,\n                        userSpace: true\n                    }, options.overlay)));\n                }\n            },\n            createSegment: function (sector, options) {\n                if (options.singleSegment) {\n                    return new drawing.Circle(new geometry.Circle(new GeometryPoint(sector.center.x, sector.center.y), sector.radius), options);\n                }\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            },\n            createAnimation: function () {\n                var ref = this;\n                var options = ref.options;\n                var center = ref.sector.center;\n                deepExtend(options, {\n                    animation: {\n                        center: [\n                            center.x,\n                            center.y\n                        ],\n                        delay: this.animationDelay\n                    }\n                });\n                ChartElement.fn.createAnimation.call(this);\n            },\n            createHighlight: function (options) {\n                var highlight = this.options.highlight || {};\n                var border = highlight.border || {};\n                return this.createSegment(this.sector, deepExtend({}, options, {\n                    fill: {\n                        color: highlight.color,\n                        opacity: highlight.opacity\n                    },\n                    stroke: {\n                        opacity: border.opacity,\n                        width: border.width,\n                        color: border.color\n                    }\n                }));\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var sector = this.sector;\n                return {\n                    options: this.options,\n                    radius: sector.radius,\n                    innerRadius: sector.innerRadius,\n                    center: new GeometryPoint(sector.center.x, sector.center.y),\n                    startAngle: sector.startAngle,\n                    endAngle: sector.angle + sector.startAngle,\n                    visual: this.visual\n                };\n            },\n            tooltipAnchor: function () {\n                var sector = this.sector.clone().expand(TOOLTIP_OFFSET);\n                var midAndle = sector.middle();\n                var midPoint = sector.point(midAndle);\n                return {\n                    point: midPoint,\n                    align: tooltipAlignment(midAndle + 180)\n                };\n            },\n            formatValue: function (format) {\n                return this.owner.formatPointValue(this, format);\n            },\n            pointData: function () {\n                return {\n                    dataItem: this.dataItem,\n                    category: this.category,\n                    value: this.value,\n                    series: this.series,\n                    percentage: this.percentage\n                };\n            }\n        });\n        var RAD_30 = round(dataviz.rad(30), DEFAULT_PRECISION);\n        var RAD_60 = round(dataviz.rad(60), DEFAULT_PRECISION);\n        function tooltipAlignment(angle) {\n            var radians = dataviz.rad(angle);\n            var sine = round(Math.sin(radians), DEFAULT_PRECISION);\n            var cosine = round(Math.cos(radians), DEFAULT_PRECISION);\n            var horizontal;\n            if (Math.abs(sine) > RAD_60) {\n                horizontal = CENTER;\n            } else if (cosine < 0) {\n                horizontal = RIGHT;\n            } else {\n                horizontal = LEFT;\n            }\n            var vertical;\n            if (Math.abs(sine) < RAD_30) {\n                vertical = CENTER;\n            } else if (sine < 0) {\n                vertical = BOTTOM;\n            } else {\n                vertical = TOP;\n            }\n            return {\n                horizontal: horizontal,\n                vertical: vertical\n            };\n        }\n        setDefaultOptions(PieSegment, {\n            color: WHITE,\n            overlay: { gradient: 'roundedBevel' },\n            border: { width: 0.5 },\n            labels: {\n                visible: false,\n                distance: 35,\n                font: datavizConstants.DEFAULT_FONT,\n                margin: getSpacing(0.5),\n                align: CIRCLE,\n                zIndex: 1,\n                position: OUTSIDE_END\n            },\n            animation: { type: PIE },\n            highlight: {\n                visible: true,\n                border: { width: 1 }\n            },\n            visible: true\n        });\n        deepExtend(PieSegment.prototype, PointEventsMixin);\n        var PieChartMixin = {\n            createLegendItem: function (value, point, options) {\n                var legendOptions = this.options.legend || {};\n                var labelsOptions = legendOptions.labels || {};\n                var inactiveItems = legendOptions.inactiveItems || {};\n                var inactiveItemsLabels = inactiveItems.labels || {};\n                if (options && options.visibleInLegend !== false) {\n                    var pointVisible = options.visible !== false;\n                    var labelTemplate = pointVisible ? getTemplate(labelsOptions) : getTemplate(inactiveItemsLabels) || getTemplate(labelsOptions);\n                    var text = options.category;\n                    if (labelTemplate) {\n                        text = labelTemplate({\n                            text: text,\n                            series: options.series,\n                            dataItem: options.dataItem,\n                            percentage: options.percentage,\n                            value: value\n                        });\n                    }\n                    var itemLabelOptions, markerColor;\n                    if (pointVisible) {\n                        itemLabelOptions = {};\n                        markerColor = point.color;\n                    } else {\n                        itemLabelOptions = {\n                            color: inactiveItemsLabels.color,\n                            font: inactiveItemsLabels.font\n                        };\n                        markerColor = (inactiveItems.markers || {}).color;\n                    }\n                    if (hasValue(text) && text !== '') {\n                        this.legendItems.push({\n                            active: pointVisible,\n                            pointIndex: options.index,\n                            text: text,\n                            series: options.series,\n                            markerColor: markerColor,\n                            labels: itemLabelOptions\n                        });\n                    }\n                }\n            }\n        };\n        var PIE_SECTOR_ANIM_DELAY = 70;\n        var PieChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.chartService = plotArea.chartService;\n                this.points = [];\n                this.legendItems = [];\n                this.render();\n            },\n            render: function () {\n                this.traverseDataPoints(this.addValue.bind(this));\n            },\n            traverseDataPoints: function (callback) {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var colorsCount = seriesColors.length;\n                var series = options.series;\n                var seriesCount = series.length;\n                for (var seriesIx = 0; seriesIx < seriesCount; seriesIx++) {\n                    var currentSeries = series[seriesIx];\n                    var data = currentSeries.data;\n                    var ref$1 = bindSegments(currentSeries);\n                    var total = ref$1.total;\n                    var points = ref$1.points;\n                    var count = ref$1.count;\n                    var anglePerValue = 360 / total;\n                    var constantAngle = void 0;\n                    if (!isFinite(anglePerValue)) {\n                        constantAngle = 360 / count;\n                    }\n                    var currentAngle = void 0;\n                    if (defined(currentSeries.startAngle)) {\n                        currentAngle = currentSeries.startAngle;\n                    } else {\n                        currentAngle = options.startAngle;\n                    }\n                    if (seriesIx !== seriesCount - 1) {\n                        if (currentSeries.labels.position === OUTSIDE_END) {\n                            currentSeries.labels.position = CENTER;\n                        }\n                    }\n                    for (var i = 0; i < points.length; i++) {\n                        var pointData = points[i];\n                        if (!pointData) {\n                            continue;\n                        }\n                        var fields = pointData.fields;\n                        var value = pointData.value;\n                        var visible = pointData.visible;\n                        var angle = value !== 0 ? constantAngle || value * anglePerValue : 0;\n                        var explode = data.length !== 1 && Boolean(fields.explode);\n                        if (!isFunction(currentSeries.color)) {\n                            currentSeries.color = fields.color || seriesColors[i % colorsCount];\n                        }\n                        callback(pointData.valueFields.value, new dataviz.Ring(null, 0, 0, currentAngle, angle), {\n                            owner: this$1,\n                            category: defined(fields.category) ? fields.category : '',\n                            index: i,\n                            series: currentSeries,\n                            seriesIx: seriesIx,\n                            dataItem: data[i],\n                            percentage: total !== 0 ? value / total : 0,\n                            explode: explode,\n                            visibleInLegend: fields.visibleInLegend,\n                            visible: visible,\n                            zIndex: seriesCount - seriesIx,\n                            animationDelay: this$1.animationDelay(i, seriesIx, seriesCount)\n                        });\n                        if (visible !== false) {\n                            currentAngle += angle;\n                        }\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    category: fields.category,\n                    percentage: fields.percentage\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'content',\n                        'template',\n                        'visual',\n                        'toggle'\n                    ]\n                });\n            },\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (fields.visible === false) {\n                    return;\n                }\n                var segment = new PieSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var ref = this;\n                var options = ref.options;\n                var points = ref.points;\n                var seriesConfigs = ref.seriesConfigs;\n                if (seriesConfigs === void 0) {\n                    seriesConfigs = [];\n                }\n                var count = points.length;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var newBox = new Box(box.x1, box.y1, box.x1 + minWidth, box.y1 + minWidth);\n                var newBoxCenter = newBox.center();\n                var boxCenter = box.center();\n                var seriesCount = options.series.length;\n                var leftSideLabels = [];\n                var rightSideLabels = [];\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                this.targetBox = targetBox;\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                newBox.translate(boxCenter.x - newBoxCenter.x, boxCenter.y - newBoxCenter.y);\n                var radius = halfMinWidth - padding;\n                var center = new Point(radius + newBox.x1 + padding, radius + newBox.y1 + padding);\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var seriesIndex = segment.seriesIx;\n                    sector.radius = radius;\n                    sector.center = center;\n                    if (seriesConfigs.length) {\n                        var seriesConfig = seriesConfigs[seriesIndex];\n                        sector.innerRadius = seriesConfig.innerRadius;\n                        sector.radius = seriesConfig.radius;\n                    }\n                    if (seriesIndex === seriesCount - 1 && segment.explode) {\n                        sector.center = sector.clone().setRadius(sector.radius * 0.15).point(sector.middle());\n                    }\n                    segment.reflow(newBox);\n                    var label = segment.label;\n                    if (label) {\n                        if (label.options.position === OUTSIDE_END) {\n                            if (seriesIndex === seriesCount - 1) {\n                                if (label.orientation === RIGHT) {\n                                    rightSideLabels.push(label);\n                                } else {\n                                    leftSideLabels.push(label);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (leftSideLabels.length > 0) {\n                    leftSideLabels.sort(this.labelComparator(true));\n                    this.leftLabelsReflow(leftSideLabels);\n                }\n                if (rightSideLabels.length > 0) {\n                    rightSideLabels.sort(this.labelComparator(false));\n                    this.rightLabelsReflow(rightSideLabels);\n                }\n                this.box = newBox;\n            },\n            leftLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            rightLabelsReflow: function (labels) {\n                var distances = this.distanceBetweenLabels(labels);\n                this.distributeLabels(distances, labels);\n            },\n            distanceBetweenLabels: function (labels) {\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var count = labels.length - 1;\n                var lr = sector.radius + segment.options.labels.distance;\n                var distances = [];\n                var firstBox = labels[0].box;\n                var distance = round(firstBox.y1 - (sector.center.y - lr - firstBox.height() - firstBox.height() / 2));\n                distances.push(distance);\n                for (var i = 0; i < count; i++) {\n                    var secondBox = labels[i + 1].box;\n                    firstBox = labels[i].box;\n                    distance = round(secondBox.y1 - firstBox.y2);\n                    distances.push(distance);\n                }\n                distance = round(sector.center.y + lr - labels[count].box.y2 - labels[count].box.height() / 2);\n                distances.push(distance);\n                return distances;\n            },\n            distributeLabels: function (distances, labels) {\n                var this$1 = this;\n                var count = distances.length;\n                var left, right, remaining;\n                for (var i = 0; i < count; i++) {\n                    remaining = -distances[i];\n                    left = right = i;\n                    while (remaining > 0 && (left >= 0 || right < count)) {\n                        remaining = this$1._takeDistance(distances, i, --left, remaining);\n                        remaining = this$1._takeDistance(distances, i, ++right, remaining);\n                    }\n                }\n                this.reflowLabels(distances, labels);\n            },\n            _takeDistance: function (distances, anchor, position, amount) {\n                var result = amount;\n                if (distances[position] > 0) {\n                    var available = Math.min(distances[position], result);\n                    result -= available;\n                    distances[position] -= available;\n                    distances[anchor] += available;\n                }\n                return result;\n            },\n            reflowLabels: function (distances, labels) {\n                var this$1 = this;\n                var segment = last(this.points);\n                var sector = segment.sector;\n                var labelOptions = segment.options.labels;\n                var labelsCount = labels.length;\n                var labelDistance = labelOptions.distance;\n                var boxY = sector.center.y - (sector.radius + labelDistance) - labels[0].box.height();\n                var boxX;\n                distances[0] += 2;\n                for (var i = 0; i < labelsCount; i++) {\n                    var label = labels[i];\n                    var box = label.box;\n                    boxY += distances[i];\n                    boxX = this$1.hAlignLabel(box.x2, sector.clone().expand(labelDistance), boxY, boxY + box.height(), label.orientation === RIGHT);\n                    if (label.orientation === RIGHT) {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.radius + sector.center.x + labelDistance;\n                        }\n                        label.reflow(new Box(boxX + box.width(), boxY, boxX, boxY));\n                    } else {\n                        if (labelOptions.align !== CIRCLE) {\n                            boxX = sector.center.x - sector.radius - labelDistance;\n                        }\n                        label.reflow(new Box(boxX - box.width(), boxY, boxX, boxY));\n                    }\n                    boxY += box.height();\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var ref = this;\n                var connectors = ref.options.connectors;\n                var points = ref.points;\n                var count = points.length;\n                var space = 4;\n                ChartElement.fn.createVisual.call(this);\n                this._connectorLines = [];\n                for (var i = 0; i < count; i++) {\n                    var segment = points[i];\n                    var sector = segment.sector;\n                    var label = segment.label;\n                    var angle = sector.middle();\n                    var connectorsColor = (segment.options.connectors || {}).color || connectors.color;\n                    if (label) {\n                        var connectorLine = new Path({\n                            stroke: {\n                                color: connectorsColor,\n                                width: connectors.width\n                            },\n                            animation: {\n                                type: FADEIN,\n                                delay: segment.animationDelay\n                            }\n                        });\n                        if (label.options.position === OUTSIDE_END) {\n                            var box = label.box;\n                            var centerPoint = sector.center;\n                            var start = sector.point(angle);\n                            var middle = new Point(box.x1, box.center().y);\n                            var sr = void 0, end = void 0, crossing = void 0;\n                            start = sector.clone().expand(connectors.padding).point(angle);\n                            connectorLine.moveTo(start.x, start.y);\n                            if (label.orientation === RIGHT) {\n                                end = new Point(box.x1 - connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x - space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.min(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x < sector.center.x) {\n                                    sr = sector.center.x + sector.radius + space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr < middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x + space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            } else {\n                                end = new Point(box.x2 + connectors.padding, box.center().y);\n                                crossing = intersection(centerPoint, start, middle, end);\n                                middle = new Point(end.x + space, end.y);\n                                crossing = crossing || middle;\n                                crossing.x = Math.max(crossing.x, middle.x);\n                                if (this$1.pointInCircle(crossing, sector.center, sector.radius + space) || crossing.x > sector.center.x) {\n                                    sr = sector.center.x - sector.radius - space;\n                                    if (segment.options.labels.align !== COLUMN) {\n                                        if (sr > middle.x) {\n                                            connectorLine.lineTo(sr, start.y);\n                                        } else {\n                                            connectorLine.lineTo(start.x - space * 2, start.y);\n                                        }\n                                    } else {\n                                        connectorLine.lineTo(sr, start.y);\n                                    }\n                                    connectorLine.lineTo(middle.x, end.y);\n                                } else {\n                                    crossing.y = end.y;\n                                    connectorLine.lineTo(crossing.x, crossing.y);\n                                }\n                            }\n                            connectorLine.lineTo(end.x, end.y);\n                            this$1._connectorLines.push(connectorLine);\n                            this$1.visual.append(connectorLine);\n                        }\n                    }\n                }\n            },\n            renderVisual: function () {\n                ChartElement.fn.renderVisual.call(this);\n                if (this.options.series.find(function (options) {\n                        return options.autoFit;\n                    })) {\n                    var targetBox = this.targetBox;\n                    var pieCenter = this.box.center();\n                    var bbox = this.visual.bbox();\n                    if (!bbox) {\n                        return;\n                    }\n                    var bboxBottom = bbox.bottomRight();\n                    var scale = Math.min((pieCenter.y - targetBox.y1) / (pieCenter.y - bbox.origin.y), (targetBox.y2 - pieCenter.y) / (bboxBottom.y - pieCenter.y), (pieCenter.x - targetBox.x1) / (pieCenter.x - bbox.origin.x), (targetBox.x2 - pieCenter.x) / (bboxBottom.x - pieCenter.x));\n                    if (scale < 1) {\n                        this.visual.transform(transform().scale(scale, scale, [\n                            pieCenter.x,\n                            pieCenter.y\n                        ]));\n                    }\n                }\n            },\n            labelComparator: function (reverse) {\n                var reverseValue = reverse ? -1 : 1;\n                return function (a, b) {\n                    var first = (a.parent.sector.middle() + 270) % 360;\n                    var second = (b.parent.sector.middle() + 270) % 360;\n                    return (first - second) * reverseValue;\n                };\n            },\n            hAlignLabel: function (originalX, sector, y1, y2, direction) {\n                var radius = sector.radius;\n                var sector_center = sector.center;\n                var cx = sector_center.x;\n                var cy = sector_center.y;\n                var t = Math.min(Math.abs(cy - y1), Math.abs(cy - y2));\n                if (t > radius) {\n                    return originalX;\n                }\n                return cx + Math.sqrt(radius * radius - t * t) * (direction ? 1 : -1);\n            },\n            pointInCircle: function (point, center, radius) {\n                return Math.pow(center.x - point.x, 2) + Math.pow(center.y - point.y, 2) < Math.pow(radius, 2);\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            animationDelay: function (categoryIndex) {\n                return categoryIndex * PIE_SECTOR_ANIM_DELAY;\n            },\n            stackRoot: function () {\n                return this;\n            }\n        });\n        function intersection(a1, a2, b1, b2) {\n            var uat = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x);\n            var ub = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n            var result;\n            if (ub !== 0) {\n                var ua = uat / ub;\n                result = new Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y));\n            }\n            return result;\n        }\n        setDefaultOptions(PieChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            },\n            inactiveItems: {\n                markers: {},\n                labels: {}\n            }\n        });\n        deepExtend(PieChart.prototype, PieChartMixin);\n        PieChart.prototype.isStackRoot = true;\n        var PiePlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createPieChart(this.series);\n            },\n            createPieChart: function (series) {\n                var firstSeries = series[0];\n                var pieChart = new PieChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    startAngle: firstSeries.startAngle,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(pieChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var DonutSegment = PieSegment.extend({\n            reflowLabel: function () {\n                var ref = this;\n                var labelsOptions = ref.options.labels;\n                var label = ref.label;\n                var sector = this.sector.clone();\n                var angle = sector.middle();\n                if (label) {\n                    var labelHeight = label.box.height();\n                    if (labelsOptions.position === CENTER) {\n                        sector.radius -= (sector.radius - sector.innerRadius) / 2;\n                        var lp = sector.point(angle);\n                        label.reflow(new Box(lp.x, lp.y - labelHeight / 2, lp.x, lp.y));\n                    } else {\n                        PieSegment.fn.reflowLabel.call(this);\n                    }\n                }\n            },\n            createSegment: function (sector, options) {\n                return dataviz.ShapeBuilder.current.createRing(sector, options);\n            }\n        });\n        setDefaultOptions(DonutSegment, {\n            overlay: { gradient: 'roundedGlass' },\n            labels: { position: CENTER },\n            animation: { type: PIE }\n        });\n        deepExtend(DonutSegment.prototype, PointEventsMixin);\n        var DONUT_SECTOR_ANIM_DELAY = 50;\n        var DonutChart = PieChart.extend({\n            addValue: function (value, sector, fields) {\n                var segmentOptions = deepExtend({}, fields.series, { index: fields.index });\n                this.evalSegmentOptions(segmentOptions, value, fields);\n                this.createLegendItem(value, segmentOptions, fields);\n                if (!value || fields.visible === false) {\n                    return;\n                }\n                var segment = new DonutSegment(value, sector, segmentOptions);\n                $.extend(segment, fields);\n                this.append(segment);\n                this.points.push(segment);\n            },\n            reflow: function (targetBox) {\n                var this$1 = this;\n                var options = this.options;\n                var box = targetBox.clone();\n                var space = 5;\n                var minWidth = Math.min(box.width(), box.height());\n                var halfMinWidth = minWidth / 2;\n                var defaultPadding = minWidth - minWidth * 0.85;\n                var series = options.series;\n                var seriesCount = series.length;\n                var padding = valueOrDefault(options.padding, defaultPadding);\n                padding = padding > halfMinWidth - space ? halfMinWidth - space : padding;\n                var totalSize = halfMinWidth - padding;\n                var seriesWithoutSize = 0;\n                var holeSize;\n                for (var i = 0; i < seriesCount; i++) {\n                    var currentSeries = series[i];\n                    if (i === 0) {\n                        if (defined(currentSeries.holeSize)) {\n                            holeSize = currentSeries.holeSize;\n                            totalSize -= currentSeries.holeSize;\n                        }\n                    }\n                    if (defined(currentSeries.size)) {\n                        totalSize -= currentSeries.size;\n                    } else {\n                        seriesWithoutSize++;\n                    }\n                    if (defined(currentSeries.margin) && i !== seriesCount - 1) {\n                        totalSize -= currentSeries.margin;\n                    }\n                }\n                if (!defined(holeSize)) {\n                    var currentSize = (halfMinWidth - padding) / (seriesCount + 0.75);\n                    holeSize = currentSize * 0.75;\n                    totalSize -= holeSize;\n                }\n                var innerRadius = holeSize;\n                var margin = 0;\n                var size, radius;\n                this.seriesConfigs = [];\n                for (var i$1 = 0; i$1 < seriesCount; i$1++) {\n                    var currentSeries$1 = series[i$1];\n                    size = valueOrDefault(currentSeries$1.size, totalSize / seriesWithoutSize);\n                    innerRadius += margin;\n                    radius = innerRadius + size;\n                    this$1.seriesConfigs.push({\n                        innerRadius: innerRadius,\n                        radius: radius\n                    });\n                    margin = currentSeries$1.margin || 0;\n                    innerRadius = radius;\n                }\n                PieChart.fn.reflow.call(this, targetBox);\n            },\n            animationDelay: function (categoryIndex, seriesIndex, seriesCount) {\n                return categoryIndex * DONUT_SECTOR_ANIM_DELAY + INITIAL_ANIMATION_DURATION * (seriesIndex + 1) / (seriesCount + 1);\n            }\n        });\n        setDefaultOptions(DonutChart, {\n            startAngle: 90,\n            connectors: {\n                width: 2,\n                color: '#939393',\n                padding: 8\n            }\n        });\n        var DonutPlotArea = PiePlotArea.extend({\n            render: function () {\n                this.createDonutChart(this.series);\n            },\n            createDonutChart: function (series) {\n                var firstSeries = series[0];\n                var donutChart = new DonutChart(this, {\n                    series: series,\n                    padding: firstSeries.padding,\n                    connectors: firstSeries.connectors,\n                    legend: this.options.legend\n                });\n                this.appendChart(donutChart);\n            }\n        });\n        var DEFAULT_PADDING = 0.15;\n        var PolarPlotAreaBase = PlotAreaBase.extend({\n            initFields: function () {\n                this.valueAxisRangeTracker = new AxisGroupRangeTracker();\n            },\n            render: function () {\n                this.addToLegend(this.series);\n                this.createPolarAxis();\n                this.createCharts();\n                this.createValueAxis();\n            },\n            alignAxes: function () {\n                var axis = this.valueAxis;\n                var range = axis.range();\n                var crossingValue = axis.options.reverse ? range.max : range.min;\n                var slot = axis.getSlot(crossingValue);\n                var center = this.polarAxis.getSlot(0).center;\n                var axisBox = axis.box.translate(center.x - slot.x1, center.y - slot.y1);\n                axis.reflow(axisBox);\n            },\n            createValueAxis: function () {\n                var tracker = this.valueAxisRangeTracker;\n                var defaultRange = tracker.query();\n                var axisOptions = this.valueAxisOptions({\n                    roundToMajorUnit: false,\n                    zIndex: -1\n                });\n                var axisType, axisDefaultRange;\n                if (axisOptions.type === LOGARITHMIC) {\n                    axisType = dataviz.RadarLogarithmicAxis;\n                    axisDefaultRange = {\n                        min: 0.1,\n                        max: 1\n                    };\n                } else {\n                    axisType = dataviz.RadarNumericAxis;\n                    axisDefaultRange = {\n                        min: 0,\n                        max: 1\n                    };\n                }\n                var range = tracker.query(name) || defaultRange || axisDefaultRange;\n                if (range && defaultRange) {\n                    range.min = Math.min(range.min, defaultRange.min);\n                    range.max = Math.max(range.max, defaultRange.max);\n                }\n                var valueAxis = new axisType(range.min, range.max, axisOptions, this.chartService);\n                this.valueAxis = valueAxis;\n                this.appendAxis(valueAxis);\n            },\n            reflowAxes: function () {\n                var ref = this;\n                var options = ref.options.plotArea;\n                var valueAxis = ref.valueAxis;\n                var polarAxis = ref.polarAxis;\n                var box = ref.box;\n                var defaultPadding = Math.min(box.width(), box.height()) * DEFAULT_PADDING;\n                var padding = getSpacing(options.padding || {}, defaultPadding);\n                var paddingBox = box.clone().unpad(padding);\n                var axisBox = paddingBox.clone();\n                axisBox.y2 = axisBox.y1 + Math.min(axisBox.width(), axisBox.height());\n                axisBox.align(paddingBox, Y, CENTER);\n                var valueAxisBox = axisBox.clone().shrink(0, axisBox.height() / 2);\n                polarAxis.reflow(axisBox);\n                valueAxis.reflow(valueAxisBox);\n                var heightDiff = valueAxis.lineBox().height() - valueAxis.box.height();\n                valueAxis.reflow(valueAxis.box.unpad({ top: heightDiff }));\n                this.axisBox = axisBox;\n                this.alignAxes(axisBox);\n            },\n            backgroundBox: function () {\n                return this.box;\n            },\n            detachLabels: function () {\n            }\n        });\n        var PolarScatterChart = ScatterChart.extend({\n            pointSlot: function (slotX, slotY) {\n                var valueRadius = slotX.center.y - slotY.y1;\n                var slot = Point.onCircle(slotX.center, slotX.startAngle, valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            }\n        });\n        setDefaultOptions(PolarScatterChart, { clip: false });\n        var PolarLineChart = ScatterLineChart.extend({});\n        PolarLineChart.prototype.pointSlot = PolarScatterChart.prototype.pointSlot;\n        setDefaultOptions(PolarLineChart, { clip: false });\n        var SplinePolarAreaSegment = SplineAreaSegment.extend({\n            fillToAxes: function (fillPath) {\n                var center = this._polarAxisCenter();\n                fillPath.lineTo(center.x, center.y);\n            },\n            _polarAxisCenter: function () {\n                var polarAxis = this.parent.plotArea.polarAxis;\n                var center = polarAxis.box.center();\n                return center;\n            },\n            strokeSegments: function () {\n                var segments = this._strokeSegments;\n                if (!segments) {\n                    var center = this._polarAxisCenter();\n                    var curveProcessor = new CurveProcessor(false);\n                    var linePoints = this.points();\n                    linePoints.push(center);\n                    segments = this._strokeSegments = curveProcessor.process(linePoints);\n                    segments.pop();\n                }\n                return segments;\n            }\n        });\n        var PolarAreaSegment = AreaSegment.extend({\n            fillToAxes: function (fillPath) {\n                var polarAxis = this.parent.plotArea.polarAxis;\n                var center = polarAxis.box.center();\n                var centerSegment = new geometry.Segment([\n                    center.x,\n                    center.y\n                ]);\n                fillPath.segments.unshift(centerSegment);\n                fillPath.segments.push(centerSegment);\n            }\n        });\n        var PolarAreaChart = PolarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = (currentSeries.line || {}).style;\n                var segment;\n                if (style === SMOOTH) {\n                    segment = new SplinePolarAreaSegment(linePoints, currentSeries, seriesIx);\n                } else {\n                    segment = new PolarAreaSegment(linePoints, currentSeries, seriesIx);\n                }\n                return segment;\n            },\n            createMissingValue: function (value, missingValues) {\n                var missingValue;\n                if (hasValue(value.x) && missingValues !== INTERPOLATE) {\n                    missingValue = {\n                        x: value.x,\n                        y: value.y\n                    };\n                    if (missingValues === ZERO) {\n                        missingValue.y = 0;\n                    }\n                }\n                return missingValue;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            },\n            _hasMissingValuesGap: function () {\n                var this$1 = this;\n                var series = this.options.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (this$1.seriesMissingValues(series[idx]) === GAP) {\n                        return true;\n                    }\n                }\n            },\n            sortPoints: function (points) {\n                var this$1 = this;\n                points.sort(xComparer);\n                if (this._hasMissingValuesGap()) {\n                    for (var idx = 0; idx < points.length; idx++) {\n                        var point = points[idx];\n                        if (point) {\n                            var value = point.value;\n                            if (!hasValue(value.y) && this$1.seriesMissingValues(point.series) === GAP) {\n                                delete points[idx];\n                            }\n                        }\n                    }\n                }\n                return points;\n            }\n        });\n        function xComparer(a, b) {\n            return a.value.x - b.value.x;\n        }\n        var PolarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var polarAxis = new dataviz.PolarAxis(this.options.xAxis, this.chartService);\n                this.polarAxis = polarAxis;\n                this.axisX = polarAxis;\n                this.appendAxis(polarAxis);\n            },\n            valueAxisOptions: function (defaults) {\n                return deepExtend(defaults, {\n                    majorGridLines: { type: ARC },\n                    minorGridLines: { type: ARC }\n                }, this.options.yAxis);\n            },\n            createValueAxis: function () {\n                PolarPlotAreaBase.fn.createValueAxis.call(this);\n                this.axisY = this.valueAxis;\n            },\n            appendChart: function (chart, pane) {\n                this.valueAxisRangeTracker.update(chart.yAxisRanges);\n                PlotAreaBase.prototype.appendChart.call(this, chart, pane);\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createLineChart(filterSeriesByType(series, [POLAR_LINE]), pane);\n                this.createScatterChart(filterSeriesByType(series, [POLAR_SCATTER]), pane);\n                this.createAreaChart(filterSeriesByType(series, [POLAR_AREA]), pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new PolarLineChart(this, { series: series });\n                this.appendChart(lineChart, pane);\n            },\n            createScatterChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var scatterChart = new PolarScatterChart(this, { series: series });\n                this.appendChart(scatterChart, pane);\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new PolarAreaChart(this, { series: series });\n                this.appendChart(areaChart, pane);\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var xValue = this.axisX.getValue(point);\n                var yValue = this.axisY.getValue(point);\n                if (xValue !== null && yValue !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        x: xValue,\n                        y: yValue\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        setDefaultOptions(PolarPlotArea, {\n            xAxis: {},\n            yAxis: {}\n        });\n        deepExtend(PolarPlotArea.prototype, PlotAreaEventsMixin);\n        var RadarLineChart = LineChart.extend({\n            pointSlot: function (categorySlot, valueSlot) {\n                var valueRadius = categorySlot.center.y - valueSlot.y1;\n                var slot = Point.onCircle(categorySlot.center, categorySlot.middle(), valueRadius);\n                return new Box(slot.x, slot.y, slot.x, slot.y);\n            },\n            createSegment: function (linePoints, currentSeries, seriesIx) {\n                var style = currentSeries.style;\n                var pointType;\n                if (style === SMOOTH) {\n                    pointType = SplineSegment;\n                } else {\n                    pointType = LineSegment;\n                }\n                var segment = new pointType(linePoints, currentSeries, seriesIx);\n                if (linePoints.length === currentSeries.data.length) {\n                    segment.options.closed = true;\n                }\n                return segment;\n            }\n        });\n        setDefaultOptions(RadarLineChart, {\n            clip: false,\n            limitPoints: false\n        });\n        var SplineRadarAreaSegment = SplineAreaSegment.extend({\n            fillToAxes: function () {\n            }\n        });\n        var RadarAreaSegment = AreaSegment.extend({\n            fillToAxes: function () {\n            }\n        });\n        var RadarAreaChart = RadarLineChart.extend({\n            createSegment: function (linePoints, currentSeries, seriesIx, prevSegment) {\n                var isStacked = this.options.isStacked;\n                var style = (currentSeries.line || {}).style;\n                var previousSegment;\n                var stackPoints;\n                var segment;\n                if (isStacked && seriesIx > 0 && prevSegment) {\n                    stackPoints = prevSegment.linePoints.slice(0);\n                    previousSegment = prevSegment;\n                }\n                if (style === SMOOTH) {\n                    segment = new SplineRadarAreaSegment(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n                    segment.options.closed = true;\n                } else {\n                    linePoints.push(linePoints[0]);\n                    segment = new RadarAreaSegment(linePoints, currentSeries, seriesIx, previousSegment, stackPoints);\n                }\n                return segment;\n            },\n            seriesMissingValues: function (series) {\n                return series.missingValues || ZERO;\n            }\n        });\n        var RadarSegment = DonutSegment.extend({\n            init: function (value, options) {\n                DonutSegment.fn.init.call(this, value, null, options);\n            }\n        });\n        setDefaultOptions(RadarSegment, {\n            overlay: { gradient: 'none' },\n            labels: { distance: 10 }\n        });\n        var RadarClusterLayout = ChartElement.extend({\n            init: function (options) {\n                ChartElement.fn.init.call(this, options);\n                this.forEach = options.rtl ? forEachReverse : forEach;\n            },\n            reflow: function (sector) {\n                var ref = this;\n                var options = ref.options;\n                var children = ref.children;\n                var gap = options.gap;\n                var spacing = options.spacing;\n                var count = children.length;\n                var slots = count + gap + spacing * (count - 1);\n                var slotAngle = sector.angle / slots;\n                var angle = sector.startAngle + slotAngle * (gap / 2);\n                this.forEach(children, function (child) {\n                    var slotSector = sector.clone();\n                    slotSector.startAngle = angle;\n                    slotSector.angle = slotAngle;\n                    if (child.sector) {\n                        slotSector.radius = child.sector.radius;\n                    }\n                    child.reflow(slotSector);\n                    child.sector = slotSector;\n                    angle += slotAngle + slotAngle * spacing;\n                });\n            }\n        });\n        setDefaultOptions(RadarClusterLayout, {\n            gap: 1,\n            spacing: 0\n        });\n        var RadarStackLayout = ChartElement.extend({\n            reflow: function (sector) {\n                var ref = this;\n                var reverse = ref.options.reverse;\n                var children = ref.children;\n                var childrenCount = children.length;\n                var first = reverse ? childrenCount - 1 : 0;\n                var step = reverse ? -1 : 1;\n                this.box = new Box();\n                for (var i = first; i >= 0 && i < childrenCount; i += step) {\n                    var childSector = children[i].sector;\n                    childSector.startAngle = sector.startAngle;\n                    childSector.angle = sector.angle;\n                }\n            }\n        });\n        var RadarBarChart = BarChart.extend({\n            pointType: function () {\n                return RadarSegment;\n            },\n            clusterType: function () {\n                return RadarClusterLayout;\n            },\n            stackType: function () {\n                return RadarStackLayout;\n            },\n            categorySlot: function (categoryAxis, categoryIx) {\n                return categoryAxis.getSlot(categoryIx);\n            },\n            pointSlot: function (categorySlot, valueSlot) {\n                var slot = categorySlot.clone();\n                var y = categorySlot.center.y;\n                slot.radius = y - valueSlot.y1;\n                slot.innerRadius = y - valueSlot.y2;\n                return slot;\n            },\n            reflowPoint: function (point, pointSlot) {\n                point.sector = pointSlot;\n                point.reflow();\n            },\n            createAnimation: function () {\n                this.options.animation.center = this.box.toRect().center();\n                BarChart.fn.createAnimation.call(this);\n            }\n        });\n        RadarBarChart.prototype.reflow = CategoricalChart.prototype.reflow;\n        setDefaultOptions(RadarBarChart, {\n            clip: false,\n            limitPoints: false,\n            animation: { type: 'pie' }\n        });\n        var RadarPlotArea = PolarPlotAreaBase.extend({\n            createPolarAxis: function () {\n                var categoryAxis = new dataviz.RadarCategoryAxis(this.options.categoryAxis, this.chartService);\n                this.polarAxis = categoryAxis;\n                this.categoryAxis = categoryAxis;\n                this.appendAxis(categoryAxis);\n                this.aggregateCategories();\n                this.createCategoryAxesLabels();\n            },\n            valueAxisOptions: function (defaults) {\n                if (this._hasBarCharts) {\n                    deepExtend(defaults, {\n                        majorGridLines: { type: ARC },\n                        minorGridLines: { type: ARC }\n                    });\n                }\n                if (this._isStacked100) {\n                    deepExtend(defaults, {\n                        roundToMajorUnit: false,\n                        labels: { format: 'P0' }\n                    });\n                }\n                return deepExtend(defaults, this.options.valueAxis);\n            },\n            aggregateCategories: function () {\n                CategoricalPlotArea.prototype.aggregateCategories.call(this, this.panes);\n            },\n            createCategoryAxesLabels: function () {\n                CategoricalPlotArea.prototype.createCategoryAxesLabels.call(this, this.panes);\n            },\n            filterSeries: function (currentSeries) {\n                return currentSeries;\n            },\n            createCharts: function () {\n                var series = this.filterVisibleSeries(this.series);\n                var pane = this.panes[0];\n                this.createAreaChart(filterSeriesByType(series, [RADAR_AREA]), pane);\n                this.createLineChart(filterSeriesByType(series, [RADAR_LINE]), pane);\n                this.createBarChart(filterSeriesByType(series, [RADAR_COLUMN]), pane);\n            },\n            chartOptions: function (series) {\n                var options = { series: series };\n                var firstSeries = series[0];\n                if (firstSeries) {\n                    var filteredSeries = this.filterVisibleSeries(series);\n                    var stack = firstSeries.stack;\n                    options.isStacked = stack && filteredSeries.length > 1;\n                    options.isStacked100 = stack && stack.type === '100%' && filteredSeries.length > 1;\n                    if (options.isStacked100) {\n                        this._isStacked100 = true;\n                    }\n                }\n                return options;\n            },\n            createAreaChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var areaChart = new RadarAreaChart(this, this.chartOptions(series));\n                this.appendChart(areaChart, pane);\n            },\n            createLineChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var lineChart = new RadarLineChart(this, this.chartOptions(series));\n                this.appendChart(lineChart, pane);\n            },\n            createBarChart: function (series, pane) {\n                if (series.length === 0) {\n                    return;\n                }\n                var firstSeries = series[0];\n                var options = this.chartOptions(series);\n                options.gap = firstSeries.gap;\n                options.spacing = firstSeries.spacing;\n                var barChart = new RadarBarChart(this, options);\n                this.appendChart(barChart, pane);\n                this._hasBarCharts = true;\n            },\n            seriesCategoryAxis: function () {\n                return this.categoryAxis;\n            },\n            _dispatchEvent: function (chart, e, eventType) {\n                var coords = chart._eventCoordinates(e);\n                var point = new Point(coords.x, coords.y);\n                var category = this.categoryAxis.getCategory(point);\n                var value = this.valueAxis.getValue(point);\n                if (category !== null && value !== null) {\n                    chart.trigger(eventType, {\n                        element: eventElement(e),\n                        category: category,\n                        value: value\n                    });\n                }\n            },\n            createCrosshairs: function () {\n            }\n        });\n        deepExtend(RadarPlotArea.prototype, PlotAreaEventsMixin, {\n            appendChart: CategoricalPlotArea.prototype.appendChart,\n            aggregateSeries: CategoricalPlotArea.prototype.aggregateSeries,\n            seriesSourcePoints: CategoricalPlotArea.prototype.seriesSourcePoints\n        });\n        setDefaultOptions(RadarPlotArea, {\n            categoryAxis: { categories: [] },\n            valueAxis: {}\n        });\n        var FunnelSegment = ChartElement.extend({\n            init: function (value, options, segmentOptions) {\n                ChartElement.fn.init.call(this, options);\n                this.value = value;\n                this.options.index = segmentOptions.index;\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var label = this.children[0];\n                this.box = new Box(points[0].x, points[0].y, points[1].x, points[2].y);\n                if (label) {\n                    label.reflow(new Box(chartBox.x1, points[0].y, chartBox.x2, points[2].y));\n                }\n            },\n            createVisual: function () {\n                var this$1 = this;\n                var options = this.options;\n                var visual;\n                ChartElement.fn.createVisual.call(this);\n                if (options.visual) {\n                    visual = options.visual({\n                        category: this.category,\n                        dataItem: this.dataItem,\n                        value: this.value,\n                        series: this.series,\n                        percentage: this.percentage,\n                        points: this.points,\n                        options: options,\n                        sender: this.getSender(),\n                        createVisual: function () {\n                            return this$1.createPath();\n                        }\n                    });\n                } else {\n                    visual = this.createPath();\n                }\n                if (visual) {\n                    this.visual.append(visual);\n                }\n            },\n            createPath: function () {\n                var options = this.options;\n                var border = options.border;\n                var path = Path.fromPoints(this.points, {\n                    fill: {\n                        color: options.color,\n                        opacity: options.opacity\n                    },\n                    stroke: {\n                        color: border.color,\n                        opacity: border.opacity,\n                        width: border.width\n                    }\n                }).close();\n                return path;\n            },\n            createHighlight: function (style) {\n                return Path.fromPoints(this.points, style);\n            },\n            highlightVisual: function () {\n                return this.visual.children[0];\n            },\n            highlightVisualArgs: function () {\n                var path = Path.fromPoints(this.points).close();\n                return {\n                    options: this.options,\n                    path: path\n                };\n            },\n            tooltipAnchor: function () {\n                var box = this.box;\n                return {\n                    point: new Point(box.center().x, box.y1),\n                    align: {\n                        horizontal: 'center',\n                        vertical: 'top'\n                    }\n                };\n            },\n            formatValue: function (format) {\n                var point = this;\n                return point.owner.formatPointValue(point, format);\n            }\n        });\n        setDefaultOptions(FunnelSegment, {\n            color: WHITE,\n            border: { width: 1 }\n        });\n        deepExtend(FunnelSegment.prototype, PointEventsMixin);\n        var FunnelChart = ChartElement.extend({\n            init: function (plotArea, options) {\n                ChartElement.fn.init.call(this, options);\n                this.plotArea = plotArea;\n                this.points = [];\n                this.labels = [];\n                this.legendItems = [];\n                this.render();\n            },\n            formatPointValue: function (point, format) {\n                return this.chartService.format.auto(format, point.value);\n            },\n            render: function () {\n                var this$1 = this;\n                var ref = this;\n                var options = ref.options;\n                var seriesColors = ref.plotArea.options.seriesColors;\n                if (seriesColors === void 0) {\n                    seriesColors = [];\n                }\n                var series = options.series[0];\n                var data = series.data;\n                if (!data) {\n                    return;\n                }\n                var ref$1 = bindSegments(series);\n                var total = ref$1.total;\n                var points = ref$1.points;\n                for (var i = 0; i < points.length; i++) {\n                    var pointData = points[i];\n                    if (!pointData) {\n                        continue;\n                    }\n                    var fields = pointData.fields;\n                    if (!isFunction(series.color)) {\n                        series.color = fields.color || seriesColors[i % seriesColors.length];\n                    }\n                    fields = deepExtend({\n                        index: i,\n                        owner: this$1,\n                        series: series,\n                        dataItem: data[i],\n                        percentage: pointData.value / total\n                    }, fields, { visible: pointData.visible });\n                    var value = pointData.valueFields.value;\n                    var segment = this$1.createSegment(value, fields);\n                    var label = this$1.createLabel(value, fields);\n                    if (segment && label) {\n                        segment.append(label);\n                    }\n                }\n            },\n            evalSegmentOptions: function (options, value, fields) {\n                var series = fields.series;\n                evalOptions(options, {\n                    value: value,\n                    series: series,\n                    dataItem: fields.dataItem,\n                    index: fields.index\n                }, {\n                    defaults: series._defaults,\n                    excluded: [\n                        'data',\n                        'content',\n                        'template',\n                        'toggle',\n                        'visual'\n                    ]\n                });\n            },\n            createSegment: function (value, fields) {\n                var seriesOptions = deepExtend({}, fields.series);\n                this.evalSegmentOptions(seriesOptions, value, fields);\n                this.createLegendItem(value, seriesOptions, fields);\n                if (fields.visible !== false) {\n                    var segment = new FunnelSegment(value, seriesOptions, fields);\n                    $.extend(segment, fields);\n                    this.append(segment);\n                    this.points.push(segment);\n                    return segment;\n                }\n            },\n            createLabel: function (value, fields) {\n                var series = fields.series;\n                var dataItem = fields.dataItem;\n                var labels = deepExtend({}, this.options.labels, series.labels);\n                var text = value;\n                if (labels.visible) {\n                    var labelTemplate = getTemplate(labels);\n                    var data = {\n                        dataItem: dataItem,\n                        value: value,\n                        percentage: fields.percentage,\n                        category: fields.category,\n                        series: series\n                    };\n                    if (labelTemplate) {\n                        text = labelTemplate(data);\n                    } else if (labels.format) {\n                        text = this.plotArea.chartService.format.auto(labels.format, text);\n                    }\n                    if (!labels.color) {\n                        var brightnessValue = new Color(series.color).percBrightness();\n                        if (brightnessValue > 180) {\n                            labels.color = BLACK;\n                        } else {\n                            labels.color = WHITE;\n                        }\n                        if (!labels.background) {\n                            labels.background = series.color;\n                        }\n                    }\n                    this.evalSegmentOptions(labels, value, fields);\n                    var textBox = new TextBox(text, deepExtend({ vAlign: labels.position }, labels), data);\n                    this.labels.push(textBox);\n                    return textBox;\n                }\n            },\n            labelPadding: function () {\n                var labels = this.labels;\n                var padding = {\n                    left: 0,\n                    right: 0\n                };\n                for (var i = 0; i < labels.length; i++) {\n                    var label = labels[i];\n                    var align = label.options.align;\n                    if (align !== CENTER) {\n                        var width = labels[i].box.width();\n                        if (align === LEFT) {\n                            padding.left = Math.max(padding.left, width);\n                        } else {\n                            padding.right = Math.max(padding.right, width);\n                        }\n                    }\n                }\n                return padding;\n            },\n            dynamicSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var firstSegment = segments[0];\n                var maxSegment = firstSegment;\n                for (var idx = 0; idx < segments.length; idx++) {\n                    if (segments[idx].percentage > maxSegment.percentage) {\n                        maxSegment = segments[idx];\n                    }\n                }\n                var lastUpperSide = firstSegment.percentage / maxSegment.percentage * width;\n                var previousOffset = (width - lastUpperSide) / 2;\n                var previousHeight = 0;\n                for (var idx$1 = 0; idx$1 < count; idx$1++) {\n                    var percentage = segments[idx$1].percentage;\n                    var nextSegment = segments[idx$1 + 1];\n                    var nextPercentage = nextSegment ? nextSegment.percentage : percentage;\n                    var points = segments[idx$1].points = [];\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    var offset = void 0;\n                    if (!percentage) {\n                        offset = nextPercentage ? 0 : width / 2;\n                    } else {\n                        offset = (width - lastUpperSide * (nextPercentage / percentage)) / 2;\n                    }\n                    offset = limitValue(offset, 0, width);\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + offset, box.y1 + height + previousHeight));\n                    previousOffset = offset;\n                    previousHeight += height + options.segmentSpacing;\n                    lastUpperSide = limitValue(width - 2 * offset, 0, width);\n                }\n            },\n            constantSlopeReflow: function (box, width, totalHeight) {\n                var ref = this;\n                var options = ref.options;\n                var segments = ref.points;\n                var count = segments.length;\n                var decreasingWidth = options.neckRatio <= 1;\n                var neckRatio = decreasingWidth ? options.neckRatio * width : width;\n                var previousOffset = decreasingWidth ? 0 : (width - width / options.neckRatio) / 2;\n                var topMostWidth = decreasingWidth ? width : width - previousOffset * 2;\n                var finalNarrow = (topMostWidth - neckRatio) / 2;\n                var previousHeight = 0;\n                for (var idx = 0; idx < count; idx++) {\n                    var points = segments[idx].points = [];\n                    var percentage = segments[idx].percentage;\n                    var offset = options.dynamicHeight ? finalNarrow * percentage : finalNarrow / count;\n                    var height = options.dynamicHeight ? totalHeight * percentage : totalHeight / count;\n                    points.push(new GeometryPoint(box.x1 + previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset, box.y1 + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + width - previousOffset - offset, box.y1 + height + previousHeight));\n                    points.push(new GeometryPoint(box.x1 + previousOffset + offset, box.y1 + height + previousHeight));\n                    previousOffset += offset;\n                    previousHeight += height + options.segmentSpacing;\n                }\n            },\n            reflow: function (chartBox) {\n                var points = this.points;\n                var count = points.length;\n                if (!count) {\n                    return;\n                }\n                var options = this.options;\n                var box = chartBox.clone().unpad(this.labelPadding());\n                var totalHeight = box.height() - options.segmentSpacing * (count - 1);\n                var width = box.width();\n                if (options.dynamicSlope) {\n                    this.dynamicSlopeReflow(box, width, totalHeight);\n                } else {\n                    this.constantSlopeReflow(box, width, totalHeight);\n                }\n                for (var idx = 0; idx < count; idx++) {\n                    points[idx].reflow(chartBox);\n                }\n            }\n        });\n        setDefaultOptions(FunnelChart, {\n            neckRatio: 0.3,\n            width: 300,\n            dynamicSlope: false,\n            dynamicHeight: true,\n            segmentSpacing: 0,\n            labels: {\n                visible: false,\n                align: CENTER,\n                position: CENTER,\n                zIndex: 1\n            }\n        });\n        deepExtend(FunnelChart.prototype, PieChartMixin);\n        var FunnelPlotArea = PlotAreaBase.extend({\n            render: function () {\n                this.createFunnelChart(this.series);\n            },\n            createFunnelChart: function (series) {\n                var firstSeries = series[0];\n                var funnelChart = new FunnelChart(this, {\n                    series: series,\n                    legend: this.options.legend,\n                    neckRatio: firstSeries.neckRatio,\n                    dynamicHeight: firstSeries.dynamicHeight,\n                    dynamicSlope: firstSeries.dynamicSlope,\n                    segmentSpacing: firstSeries.segmentSpacing,\n                    highlight: firstSeries.highlight\n                });\n                this.appendChart(funnelChart);\n            },\n            appendChart: function (chart, pane) {\n                PlotAreaBase.fn.appendChart.call(this, chart, pane);\n                append(this.options.legend.items, chart.legendItems);\n            }\n        });\n        var COLOR = 'color';\n        var FIRST = 'first';\n        var FROM = 'from';\n        var MAX = 'max';\n        var MIN = 'min';\n        var NOTE_TEXT = 'noteText';\n        var SUMMARY_FIELD = 'summary';\n        var TO = 'to';\n        PlotAreaFactory.current.register(CategoricalPlotArea, [\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            CANDLESTICK,\n            OHLC,\n            BULLET,\n            VERTICAL_BULLET,\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT,\n            RANGE_COLUMN,\n            RANGE_BAR,\n            WATERFALL,\n            HORIZONTAL_WATERFALL,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ]);\n        PlotAreaFactory.current.register(XYPlotArea, [\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ]);\n        PlotAreaFactory.current.register(PiePlotArea, [PIE]);\n        PlotAreaFactory.current.register(DonutPlotArea, [DONUT]);\n        PlotAreaFactory.current.register(FunnelPlotArea, [FUNNEL]);\n        PlotAreaFactory.current.register(PolarPlotArea, [\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ]);\n        PlotAreaFactory.current.register(RadarPlotArea, [\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ]);\n        SeriesBinder.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            ERROR_LOW_FIELD,\n            ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ], [\n            FROM,\n            TO\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT,\n            SUMMARY_FIELD\n        ]);\n        SeriesBinder.current.register([\n            POLAR_AREA,\n            POLAR_LINE,\n            POLAR_SCATTER\n        ], [\n            X,\n            Y\n        ], [COLOR]);\n        SeriesBinder.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], [VALUE], [COLOR]);\n        SeriesBinder.current.register([FUNNEL], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            'visible'\n        ]);\n        DefaultAggregates.current.register([\n            BAR,\n            COLUMN,\n            LINE,\n            VERTICAL_LINE,\n            AREA,\n            VERTICAL_AREA,\n            WATERFALL,\n            HORIZONTAL_WATERFALL\n        ], {\n            value: MAX,\n            color: FIRST,\n            noteText: FIRST,\n            errorLow: MIN,\n            errorHigh: MAX\n        });\n        DefaultAggregates.current.register([\n            RANGE_COLUMN,\n            RANGE_BAR,\n            RANGE_AREA,\n            VERTICAL_RANGE_AREA\n        ], {\n            from: MIN,\n            to: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        DefaultAggregates.current.register([\n            RADAR_AREA,\n            RADAR_COLUMN,\n            RADAR_LINE\n        ], {\n            value: MAX,\n            color: FIRST\n        });\n        SeriesBinder.current.register([\n            SCATTER,\n            SCATTER_LINE,\n            BUBBLE\n        ], [\n            X,\n            Y\n        ], [\n            COLOR,\n            NOTE_TEXT,\n            X_ERROR_LOW_FIELD,\n            X_ERROR_HIGH_FIELD,\n            Y_ERROR_LOW_FIELD,\n            Y_ERROR_HIGH_FIELD\n        ]);\n        SeriesBinder.current.register([BUBBLE], [\n            X,\n            Y,\n            'size'\n        ], [\n            COLOR,\n            CATEGORY,\n            NOTE_TEXT\n        ]);\n        SeriesBinder.current.register([\n            CANDLESTICK,\n            OHLC\n        ], [\n            'open',\n            'high',\n            'low',\n            'close'\n        ], [\n            CATEGORY,\n            COLOR,\n            'downColor',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            CANDLESTICK,\n            OHLC\n        ], {\n            open: MAX,\n            high: MAX,\n            low: MIN,\n            close: MAX,\n            color: FIRST,\n            downColor: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], [\n            'lower',\n            'q1',\n            'median',\n            'q3',\n            'upper',\n            'mean',\n            'outliers'\n        ], [\n            CATEGORY,\n            COLOR,\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BOX_PLOT,\n            VERTICAL_BOX_PLOT\n        ], {\n            lower: MAX,\n            q1: MAX,\n            median: MAX,\n            q3: MAX,\n            upper: MAX,\n            mean: MAX,\n            outliers: FIRST,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], [\n            'current',\n            'target'\n        ], [\n            CATEGORY,\n            COLOR,\n            'visibleInLegend',\n            NOTE_TEXT\n        ]);\n        DefaultAggregates.current.register([\n            BULLET,\n            VERTICAL_BULLET\n        ], {\n            current: MAX,\n            target: MAX,\n            color: FIRST,\n            noteText: FIRST\n        });\n        SeriesBinder.current.register([\n            PIE,\n            DONUT\n        ], [VALUE], [\n            CATEGORY,\n            COLOR,\n            'explode',\n            'visibleInLegend',\n            'visible'\n        ]);\n        var AXIS_NAMES = [\n            CATEGORY,\n            VALUE,\n            X,\n            Y\n        ];\n        var MOUSEMOVE = 'mousemove';\n        var CONTEXTMENU = 'contextmenu';\n        var MOUSELEAVE = 'mouseleave';\n        var MOUSEMOVE_DELAY = 20;\n        var Chart = Class.extend({\n            init: function (element, userOptions, themeOptions, context) {\n                var this$1 = this;\n                if (context === void 0) {\n                    context = {};\n                }\n                this.observers = [];\n                this.addObserver(context.observer);\n                this.chartService = new services.ChartService(this, context);\n                this.chartService.theme = themeOptions;\n                this._initElement(element);\n                var options = deepExtend({}, this.options, userOptions);\n                this._originalOptions = deepExtend({}, options);\n                this._theme = themeOptions;\n                this._initTheme(options, themeOptions);\n                this._initHandlers();\n                this._initSurface();\n                this.bindCategories();\n                dataviz.FontLoader.preloadFonts(userOptions, function () {\n                    this$1.fontLoaded = true;\n                    if (!this$1._destroyed) {\n                        this$1.trigger('init');\n                        this$1._redraw();\n                        this$1._attachEvents();\n                    }\n                });\n            },\n            _initElement: function (element) {\n                this._setElementClass(element);\n                element.style.position = 'relative';\n                while (element.firstChild) {\n                    element.removeChild(element.firstChild);\n                }\n                this.element = element;\n            },\n            _setElementClass: function (element) {\n                dataviz.addClass(element, 'k-chart');\n            },\n            _initTheme: function (options, themeOptions) {\n                var seriesCopies = [];\n                var series = options.series || [];\n                for (var i = 0; i < series.length; i++) {\n                    seriesCopies.push($.extend({}, series[i]));\n                }\n                options.series = seriesCopies;\n                resolveAxisAliases(options);\n                this.applyDefaults(options, themeOptions);\n                if (options.seriesColors === null) {\n                    delete options.seriesColors;\n                }\n                this.options = deepExtend({}, themeOptions, options);\n                this.applySeriesColors();\n            },\n            getSize: function () {\n                var chartArea = this.options.chartArea || {};\n                var width = chartArea.width ? parseInt(chartArea.width, 10) : Math.floor(this.element.offsetWidth);\n                var height = chartArea.height ? parseInt(chartArea.height, 10) : Math.floor(this.element.offsetHeight);\n                return {\n                    width: width,\n                    height: height\n                };\n            },\n            resize: function (force) {\n                var size = this.getSize();\n                var currentSize = this._size;\n                var hasSize = size.width > 0 || size.height > 0;\n                if (force || hasSize && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {\n                    this._size = size;\n                    this._resize(size, force);\n                    this.trigger('resize', size);\n                } else if (hasSize && this._selections && this._selections.find(function (s) {\n                        return !s.visible;\n                    })) {\n                    this._destroySelections();\n                    this._setupSelection();\n                }\n            },\n            _resize: function () {\n                this._noTransitionsRedraw();\n            },\n            redraw: function (paneName) {\n                this.applyDefaults(this.options);\n                this.applySeriesColors();\n                if (paneName) {\n                    var plotArea = this._model._plotArea;\n                    var pane = plotArea.findPane(paneName);\n                    plotArea.redraw(pane);\n                } else {\n                    this._redraw();\n                }\n            },\n            getAxis: function (name) {\n                return findAxisByName(name, this._plotArea.axes);\n            },\n            findAxisByName: function (name) {\n                return this.getAxis(name);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(panes[idx]);\n                }\n            },\n            plotArea: function () {\n                return new ChartPlotArea(this._plotArea);\n            },\n            toggleHighlight: function (show, filter) {\n                var plotArea = this._plotArea;\n                var firstSeries = (plotArea.srcSeries || plotArea.series || [])[0];\n                var points;\n                if (isFunction(filter)) {\n                    points = plotArea.filterPoints(filter);\n                } else {\n                    var seriesName, categoryName;\n                    if (isObject(filter)) {\n                        seriesName = filter.series;\n                        categoryName = filter.category;\n                    } else {\n                        seriesName = categoryName = filter;\n                    }\n                    if (firstSeries.type === DONUT) {\n                        points = pointByCategoryName(plotArea.pointsBySeriesName(seriesName), categoryName);\n                    } else if (firstSeries.type === PIE || firstSeries.type === FUNNEL) {\n                        points = pointByCategoryName((plotArea.charts[0] || {}).points, categoryName);\n                    } else {\n                        points = plotArea.pointsBySeriesName(seriesName);\n                    }\n                }\n                if (points) {\n                    this.togglePointsHighlight(show, points);\n                }\n            },\n            togglePointsHighlight: function (show, points) {\n                var highlight = this._highlight;\n                for (var idx = 0; idx < points.length; idx++) {\n                    highlight.togglePointHighlight(points[idx], show);\n                }\n            },\n            showTooltip: function (filter) {\n                var shared = this._sharedTooltip();\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var plotArea = ref._plotArea;\n                var point, categoryIndex;\n                if (isFunction(filter)) {\n                    point = plotArea.findPoint(filter);\n                    if (point && shared) {\n                        categoryIndex = point.categoryIx;\n                    }\n                } else if (shared && defined(filter)) {\n                    categoryIndex = plotArea.categoryAxis.categoryIndex(filter);\n                }\n                if (shared) {\n                    if (categoryIndex >= 0) {\n                        var points = this._plotArea.pointsByCategoryIndex(categoryIndex);\n                        tooltip.showAt(points);\n                    }\n                } else if (point) {\n                    tooltip.show(point);\n                }\n            },\n            hideTooltip: function () {\n                this._tooltip.hide();\n            },\n            _initSurface: function () {\n                var surface = this.surface;\n                var wrap = this._surfaceWrap();\n                var chartArea = this.options.chartArea || {};\n                if (chartArea.width) {\n                    dataviz.elementSize(wrap, { width: chartArea.width });\n                }\n                if (chartArea.height) {\n                    dataviz.elementSize(wrap, { height: chartArea.height });\n                }\n                if (!surface || surface.options.type !== this.options.renderAs) {\n                    this._destroySurface();\n                    this.surface = drawing.Surface.create(wrap, { type: this.options.renderAs });\n                    this.surface.bind('mouseenter', this._surfaceMouseenterHandler);\n                    this.surface.bind('mouseleave', this._surfaceMouseleaveHandler);\n                } else {\n                    this.surface.clear();\n                    this.surface.resize();\n                }\n            },\n            _surfaceWrap: function () {\n                return this.element;\n            },\n            _redraw: function () {\n                var model = this._getModel();\n                this._size = {\n                    width: model.options.width,\n                    height: model.options.height\n                };\n                this._destroyView();\n                this._model = model;\n                this._plotArea = model._plotArea;\n                model.renderVisual();\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.setup();\n                        }\n                    });\n                }\n                this._initSurface();\n                this.surface.draw(model.visual);\n                if (this.options.transitions !== false) {\n                    model.traverse(function (element) {\n                        if (element.animation) {\n                            element.animation.play();\n                        }\n                    });\n                }\n                this._tooltip = this._createTooltip();\n                this._highlight = new Highlight();\n                this._setupSelection();\n                this._createPannable();\n                this._createZoomSelection();\n                this._createMousewheelZoom();\n                this.trigger(RENDER);\n                triggerPaneRender(this._plotArea.panes);\n                if (!this._navState) {\n                    this._cancelDomEvents();\n                }\n            },\n            exportVisual: function (exportOptions) {\n                var visual;\n                if (exportOptions && (exportOptions.width || exportOptions.height || exportOptions.options)) {\n                    var currentOptions = this.options;\n                    var options = deepExtend({}, exportOptions.options, {\n                        chartArea: {\n                            width: exportOptions.width,\n                            height: exportOptions.height\n                        }\n                    });\n                    clearMissingValues(this._originalOptions, options);\n                    this.options = deepExtend({}, this._originalOptions, options);\n                    this._initTheme(this.options, this._theme);\n                    this.bindCategories();\n                    var model = this._getModel();\n                    model.renderVisual();\n                    triggerPaneRender(model._plotArea.panes);\n                    visual = model.visual;\n                    this.options = currentOptions;\n                } else {\n                    visual = this.surface.exportVisual();\n                }\n                return visual;\n            },\n            _sharedTooltip: function () {\n                return this._plotArea instanceof CategoricalPlotArea && this.options.tooltip && this.options.tooltip.shared;\n            },\n            _createPannable: function () {\n                var options = this.options;\n                if (options.pannable !== false) {\n                    this._pannable = new Pannable(this._plotArea, options.pannable);\n                }\n            },\n            _createZoomSelection: function () {\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                if (zoomable !== false && selection !== false) {\n                    this._zoomSelection = new ZoomSelection(this, selection);\n                }\n            },\n            _createMousewheelZoom: function () {\n                var zoomable = this.options.zoomable;\n                var mousewheel = (zoomable || {}).mousewheel;\n                if (zoomable !== false && mousewheel !== false) {\n                    this._mousewheelZoom = new MousewheelZoom(this, mousewheel);\n                }\n            },\n            _toggleDragZoomEvents: function () {\n                var pannable = this.options.pannable;\n                var zoomable = this.options.zoomable;\n                var selection = (zoomable || {}).selection;\n                var mousewheel = (zoomable || {}).mousewheel;\n                var allowDrag = !pannable && (zoomable === false || selection === false) && !this.requiresHandlers([\n                    DRAG_START,\n                    DRAG,\n                    DRAG_END\n                ]);\n                var allowZoom = (zoomable === false || mousewheel === false) && !this.requiresHandlers([\n                    ZOOM_START,\n                    ZOOM,\n                    ZOOM_END\n                ]);\n                var element = this.element;\n                if (this._dragZoomEnabled && allowDrag && allowZoom) {\n                    element.style.touchAction = this._touchAction || '';\n                    this._dragZoomEnabled = false;\n                } else if (!this._dragZoomEnabled && !(allowDrag && allowZoom)) {\n                    element.style.touchAction = 'none';\n                    this._dragZoomEnabled = true;\n                }\n                this._toggleDomEvents(!allowDrag, !allowZoom);\n            },\n            _toggleDomEvents: function (drag, zoom) {\n                var domEvents = this.domEvents;\n                if (!domEvents) {\n                    return;\n                }\n                if (domEvents.toggleDrag) {\n                    domEvents.toggleDrag(drag);\n                }\n                if (domEvents.toggleZoom) {\n                    domEvents.toggleZoom(zoom);\n                }\n            },\n            _createTooltip: function () {\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var tooltip;\n                if (this._sharedTooltip()) {\n                    tooltip = this._createSharedTooltip(tooltipOptions);\n                } else {\n                    tooltip = new Tooltip(this.chartService, tooltipOptions);\n                }\n                return tooltip;\n            },\n            _createSharedTooltip: function (options) {\n                return new SharedTooltip(this._plotArea, options);\n            },\n            applyDefaults: function (options, themeOptions) {\n                applyAxisDefaults(options, themeOptions);\n                applySeriesDefaults(options, themeOptions);\n            },\n            applySeriesColors: function () {\n                var options = this.options;\n                var series = options.series;\n                var colors = options.seriesColors || [];\n                for (var i = 0; i < series.length; i++) {\n                    var currentSeries = series[i];\n                    var seriesColor = colors[i % colors.length];\n                    var defaults = currentSeries._defaults;\n                    currentSeries.color = currentSeries.color || seriesColor;\n                    if (defaults) {\n                        defaults.color = defaults.color || seriesColor;\n                    }\n                }\n            },\n            _getModel: function () {\n                var options = this.options;\n                var plotArea = this._createPlotArea();\n                var model = new dataviz.RootElement(this._modelOptions());\n                model.chart = this;\n                model._plotArea = plotArea;\n                dataviz.Title.buildTitle(options.title, model);\n                if (options.legend && options.legend.visible) {\n                    model.append(new Legend(plotArea.options.legend, this.chartService));\n                }\n                model.append(plotArea);\n                model.reflow();\n                return model;\n            },\n            _modelOptions: function () {\n                var options = this.options;\n                var size = this.getSize();\n                return deepExtend({\n                    transitions: options.transitions,\n                    width: size.width || datavizConstants.DEFAULT_WIDTH,\n                    height: size.height || datavizConstants.DEFAULT_HEIGHT\n                }, options.chartArea);\n            },\n            _createPlotArea: function (skipSeries) {\n                var options = this.options;\n                var plotArea = PlotAreaFactory.current.create(skipSeries ? [] : options.series, options, this.chartService);\n                return plotArea;\n            },\n            _setupSelection: function () {\n                var this$1 = this;\n                var ref = this;\n                var axes = ref._plotArea.axes;\n                var selections = this._selections = [];\n                for (var i = 0; i < axes.length; i++) {\n                    var axis = axes[i];\n                    var options = axis.options;\n                    if (axis instanceof CategoryAxis && options.select && !options.vertical) {\n                        var range = axis.range();\n                        var selection = new Selection(this$1, axis, deepExtend({\n                            min: range.min,\n                            max: range.max\n                        }, options.select));\n                        selections.push(selection);\n                    }\n                }\n            },\n            _selectStart: function (e) {\n                return this.trigger(SELECT_START, e);\n            },\n            _select: function (e) {\n                return this.trigger(SELECT, e);\n            },\n            _selectEnd: function (e) {\n                return this.trigger(SELECT_END, e);\n            },\n            _initHandlers: function () {\n                this._clickHandler = this._click.bind(this);\n                this._mousewheelHandler = this._mousewheel.bind(this);\n                this._mouseleaveHandler = this._mouseleave.bind(this);\n                this._surfaceMouseenterHandler = this._mouseover.bind(this);\n                this._surfaceMouseleaveHandler = this._mouseout.bind(this);\n                this._mousemove = kendo.throttle(this._mousemove.bind(this), MOUSEMOVE_DELAY);\n            },\n            addObserver: function (observer) {\n                if (observer) {\n                    this.observers.push(observer);\n                }\n            },\n            removeObserver: function (observer) {\n                var index = this.observers.indexOf(observer);\n                if (index >= 0) {\n                    this.observers.splice(index, 1);\n                }\n            },\n            requiresHandlers: function (eventNames) {\n                var observers = this.observers;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].requiresHandlers(eventNames)) {\n                        return true;\n                    }\n                }\n            },\n            trigger: function (name, args) {\n                if (args === void 0) {\n                    args = {};\n                }\n                if (name === SHOW_TOOLTIP) {\n                    args.anchor.point = this._toDocumentCoordinates(args.anchor.point);\n                }\n                args.sender = this;\n                var observers = this.observers;\n                var isDefaultPrevented = false;\n                for (var idx = 0; idx < observers.length; idx++) {\n                    if (observers[idx].trigger(name, args)) {\n                        isDefaultPrevented = true;\n                    }\n                }\n                return isDefaultPrevented;\n            },\n            _attachEvents: function () {\n                var element = this.element;\n                this._touchAction = element.style.touchAction;\n                var obj;\n                bindEvents(element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj[MOUSELEAVE] = this._mouseleaveHandler, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n                this.domEvents = services.DomEventsBuilder.create(this.element, {\n                    start: this._start.bind(this),\n                    move: this._move.bind(this),\n                    end: this._end.bind(this),\n                    tap: this._tap.bind(this),\n                    gesturestart: this._gesturestart.bind(this),\n                    gesturechange: this._gesturechange.bind(this),\n                    gestureend: this._gestureend.bind(this)\n                });\n                this._toggleDragZoomEvents();\n            },\n            _mouseleave: function (e) {\n                if (this._hoveredPoint) {\n                    this._hoveredPoint.out(this, e);\n                    this._hoveredPoint = null;\n                }\n                if (this._plotArea.hovered) {\n                    this.trigger(PLOT_AREA_LEAVE);\n                    this._plotArea.hovered = false;\n                }\n            },\n            _cancelDomEvents: function () {\n                if (this.domEvents && this.domEvents.cancel) {\n                    this.domEvents.cancel();\n                }\n            },\n            _gesturestart: function (e) {\n                if (this._mousewheelZoom && !this._stopChartHandlers(e)) {\n                    this._gestureDistance = e.distance;\n                    this._unsetActivePoint();\n                    this.surface.suspendTracking();\n                }\n            },\n            _gestureend: function (e) {\n                if (this._zooming && !this._stopChartHandlers(e)) {\n                    if (this.surface) {\n                        this.surface.resumeTracking();\n                    }\n                    this._zooming = false;\n                    this.trigger(ZOOM_END, {});\n                }\n            },\n            _gesturechange: function (e) {\n                var mousewheelZoom = this._mousewheelZoom;\n                if (mousewheelZoom && !this._stopChartHandlers(e)) {\n                    e.preventDefault();\n                    var previousGestureDistance = this._gestureDistance;\n                    var scaleDelta = -e.distance / previousGestureDistance + 1;\n                    if (Math.abs(scaleDelta) >= 0.1) {\n                        scaleDelta = Math.round(scaleDelta * 10);\n                        this._gestureDistance = e.distance;\n                        var args = {\n                            delta: scaleDelta,\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        };\n                        if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                            if (!this._zooming) {\n                                this._zooming = true;\n                            }\n                            var ranges = args.axisRanges = mousewheelZoom.updateRanges(scaleDelta);\n                            if (ranges && !this.trigger(ZOOM, args)) {\n                                mousewheelZoom.zoom();\n                            }\n                        }\n                    }\n                }\n            },\n            _mouseout: function (e) {\n                if (e.element) {\n                    var element = this._drawingChartElement(e.element, e);\n                    if (element && element.leave) {\n                        element.leave(this, e.originalEvent);\n                    }\n                }\n            },\n            _start: function (e) {\n                var coords = this._eventCoordinates(e);\n                if (this._stopChartHandlers(e) || !this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (this.requiresHandlers([\n                        DRAG_START,\n                        DRAG,\n                        DRAG_END\n                    ])) {\n                    this._startNavigation(e, coords, DRAG_START);\n                }\n                if (this._pannable && this._pannable.start(e)) {\n                    this.surface.suspendTracking();\n                    this._unsetActivePoint();\n                    this._suppressHover = true;\n                    this.chartService.panning = true;\n                }\n                if (this._zoomSelection) {\n                    if (this._zoomSelection.start(e)) {\n                        this.trigger(ZOOM_START, {\n                            axisRanges: axisRanges(this._plotArea.axes),\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _move: function (e) {\n                var ref = this;\n                var state = ref._navState;\n                var pannable = ref._pannable;\n                if (this._stopChartHandlers(e)) {\n                    return;\n                }\n                if (pannable) {\n                    var ranges = pannable.move(e);\n                    if (ranges && !this.trigger(DRAG, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        pannable.pan();\n                    }\n                } else if (state) {\n                    var ranges$1 = {};\n                    var axes = state.axes;\n                    for (var i = 0; i < axes.length; i++) {\n                        var currentAxis = axes[i];\n                        var axisName = currentAxis.options.name;\n                        if (axisName) {\n                            var axis = currentAxis.options.vertical ? e.y : e.x;\n                            var delta = axis.startLocation - axis.location;\n                            if (delta !== 0) {\n                                ranges$1[currentAxis.options.name] = currentAxis.translateRange(delta);\n                            }\n                        }\n                    }\n                    state.axisRanges = ranges$1;\n                    this.trigger(DRAG, {\n                        axisRanges: ranges$1,\n                        originalEvent: e\n                    });\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.move(e);\n                }\n            },\n            _end: function (e) {\n                if (this._stopChartHandlers(e)) {\n                    return;\n                }\n                var pannable = this._pannable;\n                if (pannable && pannable.end(e)) {\n                    this.surface.resumeTracking();\n                    this.trigger(DRAG_END, {\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                    this.chartService.panning = false;\n                } else {\n                    this._endNavigation(e, DRAG_END);\n                }\n                if (this._zoomSelection) {\n                    var ranges = this._zoomSelection.end(e);\n                    if (ranges && !this.trigger(ZOOM, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        })) {\n                        this._zoomSelection.zoom();\n                        this.trigger(ZOOM_END, {\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                    }\n                }\n            },\n            _stopChartHandlers: function (e) {\n                var selections = this._selections || [];\n                if (!selections.length) {\n                    return false;\n                }\n                var coords = this._eventCoordinates(e);\n                var pane = this._plotArea.paneByPoint(coords);\n                if (pane) {\n                    for (var idx = 0; idx < selections.length; idx++) {\n                        if (selections[idx].onPane(pane)) {\n                            return true;\n                        }\n                    }\n                }\n            },\n            _mousewheel: function (e) {\n                var this$1 = this;\n                var delta = dataviz.mousewheelDelta(e);\n                var mousewheelZoom = this._mousewheelZoom;\n                var coords = this._eventCoordinates(e);\n                if (this._stopChartHandlers(e) || !this._plotArea.backgroundContainsPoint(coords)) {\n                    return;\n                }\n                if (mousewheelZoom) {\n                    var args = {\n                        delta: delta,\n                        axisRanges: axisRanges(this._plotArea.axes),\n                        originalEvent: e\n                    };\n                    if (this._zooming || !this.trigger(ZOOM_START, args)) {\n                        e.preventDefault();\n                        if (!this._zooming) {\n                            this._unsetActivePoint();\n                            this.surface.suspendTracking();\n                            this._zooming = true;\n                        }\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        args.axisRanges = mousewheelZoom.updateRanges(delta);\n                        if (args.axisRanges && !this.trigger(ZOOM, args)) {\n                            mousewheelZoom.zoom();\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1.trigger(ZOOM_END, args);\n                            this$1._zooming = false;\n                            if (this$1.surface) {\n                                this$1.surface.resumeTracking();\n                            }\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                } else {\n                    var state = this._navState;\n                    if (!state) {\n                        var prevented = this._startNavigation(e, coords, ZOOM_START);\n                        if (!prevented) {\n                            state = this._navState;\n                        }\n                    }\n                    if (state) {\n                        var totalDelta = state.totalDelta || delta;\n                        state.totalDelta = totalDelta + delta;\n                        var axes = this._navState.axes;\n                        var ranges = {};\n                        for (var i = 0; i < axes.length; i++) {\n                            var currentAxis = axes[i];\n                            var axisName = currentAxis.options.name;\n                            if (axisName) {\n                                ranges[axisName] = currentAxis.scaleRange(-totalDelta);\n                            }\n                        }\n                        this.trigger(ZOOM, {\n                            delta: delta,\n                            axisRanges: ranges,\n                            originalEvent: e\n                        });\n                        if (this._mwTimeout) {\n                            clearTimeout(this._mwTimeout);\n                        }\n                        this._mwTimeout = setTimeout(function () {\n                            this$1._endNavigation(e, ZOOM_END);\n                        }, MOUSEWHEEL_DELAY);\n                    }\n                }\n            },\n            _startNavigation: function (e, coords, chartEvent) {\n                var plotArea = this._model._plotArea;\n                var pane = plotArea.findPointPane(coords);\n                var axes = plotArea.axes.slice(0);\n                if (!pane) {\n                    return;\n                }\n                var ranges = axisRanges(axes);\n                var prevented = this.trigger(chartEvent, {\n                    axisRanges: ranges,\n                    originalEvent: e\n                });\n                if (prevented) {\n                    this._cancelDomEvents();\n                } else {\n                    this._suppressHover = true;\n                    this._unsetActivePoint();\n                    this._navState = {\n                        axisRanges: ranges,\n                        pane: pane,\n                        axes: axes\n                    };\n                }\n            },\n            _endNavigation: function (e, chartEvent) {\n                if (this._navState) {\n                    this.trigger(chartEvent, {\n                        axisRanges: this._navState.axisRanges,\n                        originalEvent: e\n                    });\n                    this._suppressHover = false;\n                    this._navState = null;\n                }\n            },\n            _getChartElement: function (e, match) {\n                var element = this.surface.eventTarget(e);\n                if (element) {\n                    return this._drawingChartElement(element, e, match);\n                }\n            },\n            _drawingChartElement: function (element, e, match) {\n                var current = element;\n                var chartElement;\n                while (current && !chartElement) {\n                    chartElement = current.chartElement;\n                    current = current.parent;\n                }\n                if (chartElement) {\n                    if (chartElement.aliasFor) {\n                        chartElement = chartElement.aliasFor(e, this._eventCoordinates(e));\n                    }\n                    if (match) {\n                        chartElement = chartElement.closest(match);\n                        if (chartElement && chartElement.aliasFor) {\n                            chartElement = chartElement.aliasFor();\n                        }\n                    }\n                    return chartElement;\n                }\n            },\n            _eventCoordinates: function (e) {\n                var coordinates = dataviz.eventCoordinates(e);\n                return this._toModelCoordinates(coordinates.x, coordinates.y);\n            },\n            _elementPadding: function () {\n                if (!this._padding) {\n                    var ref = elementStyles(this.element, [\n                        'paddingLeft',\n                        'paddingTop'\n                    ]);\n                    var paddingLeft = ref.paddingLeft;\n                    var paddingTop = ref.paddingTop;\n                    this._padding = {\n                        top: paddingTop,\n                        left: paddingLeft\n                    };\n                }\n                return this._padding;\n            },\n            _toDocumentCoordinates: function (point) {\n                var padding = this._elementPadding();\n                var offset = dataviz.elementOffset(this.element);\n                return {\n                    left: round(point.x + padding.left + offset.left),\n                    top: round(point.y + padding.top + offset.top)\n                };\n            },\n            _toModelCoordinates: function (clientX, clientY) {\n                var element = this.element;\n                var offset = dataviz.elementOffset(element);\n                var padding = this._elementPadding();\n                return new Point(clientX - offset.left - padding.left, clientY - offset.top - padding.top);\n            },\n            _tap: function (e) {\n                var this$1 = this;\n                var drawingElement = this.surface.eventTarget(e);\n                var element = this._drawingChartElement(drawingElement, e);\n                var sharedTooltip = this._sharedTooltip();\n                if (!this._startHover(drawingElement, e) && !sharedTooltip) {\n                    this._unsetActivePoint();\n                }\n                if (sharedTooltip) {\n                    this._trackSharedTooltip(this._eventCoordinates(e), e, true);\n                }\n                this._propagateClick(element, e);\n                this.handlingTap = true;\n                setTimeout(function () {\n                    this$1.handlingTap = false;\n                }, 0);\n            },\n            _click: function (e) {\n                var element = this._getChartElement(e);\n                this._propagateClick(element, e);\n            },\n            _propagateClick: function (element, e) {\n                var this$1 = this;\n                var current = element;\n                while (current) {\n                    if (current.click) {\n                        current.click(this$1, e);\n                    }\n                    current = current.parent;\n                }\n            },\n            _startHover: function (element, e) {\n                if (this._suppressHover) {\n                    return false;\n                }\n                var point = this._drawingChartElement(element, e, function (element) {\n                    return (element.hover || element.over) && !(element instanceof PlotAreaBase);\n                });\n                var activePoint = this._activePoint;\n                var hoveredPoint = this._hoveredPoint;\n                if (hoveredPoint && hoveredPoint !== point) {\n                    hoveredPoint.out(this, e);\n                    this._hoveredPoint = null;\n                }\n                if (point && hoveredPoint !== point && point.over) {\n                    this._hoveredPoint = point;\n                    point.over(this, e);\n                }\n                if (point && activePoint !== point && point.hover) {\n                    this._activePoint = point;\n                    if (!this._sharedTooltip() && !point.hover(this, e)) {\n                        var tooltipOptions = deepExtend({}, this.options.tooltip, point.options.tooltip);\n                        if (tooltipOptions.visible) {\n                            this._tooltip.show(point);\n                        }\n                        this._highlight.show(point);\n                    }\n                }\n                return point;\n            },\n            _mouseover: function (e) {\n                var point = this._startHover(e.element, e.originalEvent);\n                if (point && point.tooltipTracking && !this._mouseMoveTrackHandler && !this._sharedTooltip()) {\n                    this._mouseMoveTrackHandler = this._mouseMoveTracking.bind(this);\n                    var obj;\n                    bindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                }\n            },\n            _mouseMoveTracking: function (e) {\n                var ref = this;\n                var options = ref.options;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                var point = ref._activePoint;\n                var coords = this._eventCoordinates(e);\n                if (this._plotArea.box.containsPoint(coords)) {\n                    if (point && point.tooltipTracking && point.series && point.parent.getNearestPoint) {\n                        var seriesPoint = point.parent.getNearestPoint(coords.x, coords.y, point.seriesIx);\n                        if (seriesPoint && seriesPoint !== point) {\n                            this._activePoint = seriesPoint;\n                            if (!seriesPoint.hover(this, e)) {\n                                var tooltipOptions = deepExtend({}, options.tooltip, seriesPoint.options.tooltip);\n                                if (tooltipOptions.visible) {\n                                    tooltip.show(seriesPoint);\n                                }\n                                highlight.show(seriesPoint);\n                            }\n                        }\n                    }\n                } else {\n                    var obj;\n                    unbindEvents(document, (obj = {}, obj[MOUSEMOVE] = this._mouseMoveTrackHandler, obj));\n                    this._unsetActivePoint();\n                    this._mouseMoveTrackHandler = null;\n                }\n            },\n            _mousemove: function (e) {\n                var coords = this._eventCoordinates(e);\n                var plotArea = this._plotArea;\n                this._trackCrosshairs(coords);\n                if (plotArea.hover) {\n                    var overPlotArea = plotArea.backgroundContainsPoint(coords);\n                    if (overPlotArea) {\n                        plotArea.hovered = true;\n                        this._plotArea.hover(this, e);\n                    } else if (plotArea.hovered && !overPlotArea) {\n                        this.trigger(PLOT_AREA_LEAVE);\n                        plotArea.hovered = false;\n                    }\n                }\n                if (this._sharedTooltip()) {\n                    this._trackSharedTooltip(coords, e);\n                }\n            },\n            _trackCrosshairs: function (coords) {\n                var crosshairs = this._plotArea.crosshairs;\n                for (var i = 0; i < crosshairs.length; i++) {\n                    var current = crosshairs[i];\n                    if (current.box.containsPoint(coords)) {\n                        current.showAt(coords);\n                    } else {\n                        current.hide();\n                    }\n                }\n            },\n            _trackSharedTooltip: function (coords, e, toggle) {\n                if (this._suppressHover) {\n                    return;\n                }\n                var ref = this;\n                var tooltipOptions = ref.options.tooltip;\n                var plotArea = ref._plotArea;\n                var categoryAxis = ref._plotArea.categoryAxis;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                if (plotArea.backgroundContainsPoint(coords)) {\n                    var index = categoryAxis.pointCategoryIndex(coords);\n                    if (index !== this._tooltipCategoryIx || !this._sharedHighlight && toggle) {\n                        var points = plotArea.pointsByCategoryIndex(index);\n                        var pointArgs = points.map(function (point) {\n                            return point.eventArgs(e);\n                        });\n                        var hoverArgs = pointArgs[0] || {};\n                        hoverArgs.categoryPoints = pointArgs;\n                        if (points.length > 0 && !this.trigger(SERIES_HOVER, hoverArgs)) {\n                            if (tooltipOptions.visible) {\n                                tooltip.showAt(points, coords);\n                            }\n                            highlight.show(points);\n                            this._sharedHighlight = true;\n                        } else {\n                            tooltip.hide();\n                        }\n                        this._tooltipCategoryIx = index;\n                    } else if (toggle && this._sharedHighlight) {\n                        highlight.hide();\n                        tooltip.hide();\n                        this._sharedHighlight = false;\n                    }\n                } else if (this._sharedHighlight) {\n                    highlight.hide();\n                    tooltip.hide();\n                    this._tooltipCategoryIx = null;\n                    this._sharedHighlight = false;\n                }\n            },\n            hideElements: function () {\n                var plotArea = this._plotArea;\n                this._mousemove.cancel();\n                plotArea.hideCrosshairs();\n                this._unsetActivePoint();\n            },\n            _unsetActivePoint: function () {\n                var ref = this;\n                var tooltip = ref._tooltip;\n                var highlight = ref._highlight;\n                this._activePoint = null;\n                this._hoveredPoint = null;\n                if (tooltip) {\n                    tooltip.hide();\n                }\n                this._tooltipCategoryIx = null;\n                this._sharedHighlight = false;\n                if (highlight) {\n                    highlight.hide();\n                }\n            },\n            _deferRedraw: function () {\n                this._redraw();\n            },\n            _clearRedrawTimeout: function () {\n                if (this._redrawTimeout) {\n                    clearInterval(this._redrawTimeout);\n                    this._redrawTimeout = null;\n                }\n            },\n            bindCategories: function () {\n                var this$1 = this;\n                var options = this.options;\n                var definitions = [].concat(options.categoryAxis);\n                for (var axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    var axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        this$1.bindCategoryAxisFromSeries(axis, axisIx);\n                    }\n                }\n            },\n            bindCategoryAxisFromSeries: function (axis, axisIx) {\n                var this$1 = this;\n                var series = this.options.series;\n                var seriesLength = series.length;\n                var uniqueCategories = new dataviz.HashMap();\n                var items = [];\n                var bindable = false;\n                var dateAxis;\n                for (var seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    var s = series[seriesIx];\n                    var onAxis = s.categoryAxis === axis.name || !s.categoryAxis && axisIx === 0;\n                    var data = s.data;\n                    var dataLength = data.length;\n                    var bind = s.categoryField && onAxis;\n                    bindable = bind || bindable;\n                    if (bind && dataLength > 0) {\n                        dateAxis = isDateAxis(axis, getField(s.categoryField, data[0]));\n                        var getFn = dateAxis ? getDateField : getField;\n                        for (var dataIx = 0; dataIx < dataLength; dataIx++) {\n                            var dataRow = data[dataIx];\n                            var category = getFn(s.categoryField, dataRow, this$1.chartService.intl);\n                            if (dateAxis || !uniqueCategories.get(category)) {\n                                items.push([\n                                    category,\n                                    dataRow\n                                ]);\n                                if (!dateAxis) {\n                                    uniqueCategories.set(category, true);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (items.length > 0) {\n                    if (dateAxis) {\n                        items = uniqueDates(items, function (a, b) {\n                            return dataviz.dateComparer(a[0], b[0]);\n                        });\n                    }\n                    var result = transpose(items);\n                    axis.categories = result[0];\n                } else if (bindable) {\n                    axis.categories = [];\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series);\n                var result = true;\n                for (var i = 0; i < valueFields.length; i++) {\n                    var field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _noTransitionsRedraw: function () {\n                var options = this.options;\n                var transitionsState;\n                if (options.transitions !== false) {\n                    options.transitions = false;\n                    transitionsState = true;\n                }\n                this._redraw();\n                if (transitionsState) {\n                    options.transitions = true;\n                }\n            },\n            _legendItemHover: function (seriesIndex, pointIndex) {\n                var ref = this;\n                var plotArea = ref._plotArea;\n                var highlight = ref._highlight;\n                var currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                var items;\n                if (inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ])) {\n                    items = plotArea.findPoint(function (point) {\n                        return point.series.index === seriesIndex && point.index === pointIndex;\n                    });\n                } else {\n                    items = plotArea.pointsBySeriesIndex(seriesIndex);\n                }\n                highlight.show(items);\n            },\n            _shouldAttachMouseMove: function () {\n                return this._plotArea.crosshairs.length || this._tooltip && this._sharedTooltip() || this.requiresHandlers([\n                    PLOT_AREA_HOVER,\n                    PLOT_AREA_LEAVE\n                ]);\n            },\n            updateMouseMoveHandler: function () {\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[MOUSEMOVE] = this._mousemove, obj));\n                if (this._shouldAttachMouseMove()) {\n                    var obj$1;\n                    bindEvents(this.element, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mousemove, obj$1));\n                }\n            },\n            applyOptions: function (options, theme) {\n                clearMissingValues(this._originalOptions, options);\n                this._originalOptions = deepExtend(this._originalOptions, options);\n                this.options = deepExtend({}, this._originalOptions);\n                if (theme) {\n                    this._theme = theme;\n                    this.chartService.theme = theme;\n                }\n                this._initTheme(this.options, this._theme);\n                this._toggleDragZoomEvents();\n            },\n            setOptions: function (options, theme) {\n                this.applyOptions(options, theme);\n                this.bindCategories();\n                this.redraw();\n                this.updateMouseMoveHandler();\n            },\n            setDirection: function (rtl) {\n                this.chartService.rtl = Boolean(rtl);\n                if (this.surface && this.surface.type === 'svg') {\n                    this._destroySurface();\n                }\n            },\n            setIntlService: function (intl) {\n                this.chartService.intl = intl;\n            },\n            noTransitionsRedraw: function () {\n                this._noTransitionsRedraw();\n            },\n            destroy: function () {\n                this._destroyed = true;\n                var obj;\n                unbindEvents(this.element, (obj = {}, obj[CONTEXTMENU] = this._clickHandler, obj[MOUSEWHEEL] = this._mousewheelHandler, obj[MOUSEMOVE] = this._mousemove, obj[MOUSELEAVE] = this._mouseleaveHandler, obj));\n                if (this.domEvents) {\n                    this.domEvents.destroy();\n                    delete this.domEvents;\n                }\n                if (this._mouseMoveTrackHandler) {\n                    var obj$1;\n                    unbindEvents(document, (obj$1 = {}, obj$1[MOUSEMOVE] = this._mouseMoveTrackHandler, obj$1));\n                }\n                this._destroyView();\n                this._destroySurface();\n                this._clearRedrawTimeout();\n            },\n            _destroySurface: function () {\n                var surface = this.surface;\n                if (surface) {\n                    surface.unbind('mouseenter', this._surfaceMouseenterHandler);\n                    surface.unbind('mouseleave', this._surfaceMouseleaveHandler);\n                    surface.destroy();\n                    this.surface = null;\n                }\n            },\n            _destroySelections: function () {\n                var selections = this._selections;\n                if (selections) {\n                    while (selections.length > 0) {\n                        selections.shift().destroy();\n                    }\n                }\n            },\n            _destroyView: function () {\n                var model = this._model;\n                if (model) {\n                    model.destroy();\n                    this._model = null;\n                }\n                this._unsetActivePoint();\n                this._destroySelections();\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                }\n                if (this._highlight) {\n                    this._highlight.destroy();\n                }\n                if (this._zoomSelection) {\n                    this._zoomSelection.destroy();\n                    delete this._zoomSelection;\n                }\n                if (this._pannable) {\n                    this._pannable.destroy();\n                    delete this._pannable;\n                }\n                if (this._mousewheelZoom) {\n                    this._mousewheelZoom.destroy();\n                    delete this._mousewheelZoom;\n                }\n            }\n        });\n        function resolveAxisAliases(options) {\n            var aliases = AXIS_NAMES;\n            for (var idx = 0; idx < aliases.length; idx++) {\n                var alias = aliases[idx] + 'Axes';\n                if (options[alias]) {\n                    options[aliases[idx] + 'Axis'] = options[alias];\n                    delete options[alias];\n                }\n            }\n        }\n        function pointByCategoryName(points, name) {\n            if (points) {\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (points[idx].category === name) {\n                        return [points[idx]];\n                    }\n                }\n            }\n        }\n        function applyAxisDefaults(options, themeOptions) {\n            var themeAxisDefaults = (themeOptions || {}).axisDefaults || {};\n            var axisName, axisDefaults, axes;\n            function mapAxisOptions(axisOptions) {\n                var axisColor = (axisOptions || {}).color || axisDefaults.color;\n                var result = deepExtend({}, themeAxisDefaults, themeAxisDefaults[axisName], axisDefaults, axisDefaults[axisName], {\n                    line: { color: axisColor },\n                    labels: { color: axisColor },\n                    title: { color: axisColor }\n                }, axisOptions);\n                delete result[axisName];\n                return result;\n            }\n            for (var idx = 0; idx < AXIS_NAMES.length; idx++) {\n                axisName = AXIS_NAMES[idx] + 'Axis';\n                axisDefaults = options.axisDefaults || {};\n                axes = [].concat(options[axisName]);\n                axes = axes.map(mapAxisOptions);\n                options[axisName] = axes.length > 1 ? axes : axes[0];\n            }\n        }\n        function applySeriesDefaults(options, themeOptions) {\n            var series = options.series;\n            var seriesLength = series.length;\n            var seriesDefaults = options.seriesDefaults;\n            var commonDefaults = deepExtend({}, options.seriesDefaults);\n            var themeSeriesDefaults = themeOptions ? deepExtend({}, themeOptions.seriesDefaults) : {};\n            var commonThemeDefaults = deepExtend({}, themeSeriesDefaults);\n            cleanupNestedSeriesDefaults(commonDefaults);\n            cleanupNestedSeriesDefaults(commonThemeDefaults);\n            for (var i = 0; i < seriesLength; i++) {\n                var seriesType = series[i].type || options.seriesDefaults.type;\n                var baseOptions = deepExtend({ data: [] }, commonThemeDefaults, themeSeriesDefaults[seriesType], { tooltip: options.tooltip }, commonDefaults, seriesDefaults[seriesType]);\n                series[i]._defaults = baseOptions;\n                series[i] = deepExtend({}, baseOptions, series[i]);\n                series[i].data = series[i].data || [];\n            }\n        }\n        function cleanupNestedSeriesDefaults(seriesDefaults) {\n            delete seriesDefaults.bar;\n            delete seriesDefaults.column;\n            delete seriesDefaults.rangeColumn;\n            delete seriesDefaults.line;\n            delete seriesDefaults.verticalLine;\n            delete seriesDefaults.pie;\n            delete seriesDefaults.donut;\n            delete seriesDefaults.area;\n            delete seriesDefaults.verticalArea;\n            delete seriesDefaults.scatter;\n            delete seriesDefaults.scatterLine;\n            delete seriesDefaults.bubble;\n            delete seriesDefaults.candlestick;\n            delete seriesDefaults.ohlc;\n            delete seriesDefaults.boxPlot;\n            delete seriesDefaults.bullet;\n            delete seriesDefaults.verticalBullet;\n            delete seriesDefaults.polarArea;\n            delete seriesDefaults.polarLine;\n            delete seriesDefaults.radarArea;\n            delete seriesDefaults.radarLine;\n            delete seriesDefaults.waterfall;\n        }\n        function axisRanges(axes) {\n            var ranges = {};\n            for (var i = 0; i < axes.length; i++) {\n                var axis = axes[i];\n                var axisName = axis.options.name;\n                if (axisName) {\n                    ranges[axisName] = axis.range();\n                }\n            }\n            return ranges;\n        }\n        function sortDates(dates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            for (var i = 1, length = dates.length; i < length; i++) {\n                if (comparer(dates[i], dates[i - 1]) < 0) {\n                    dates.sort(comparer);\n                    break;\n                }\n            }\n            return dates;\n        }\n        function uniqueDates(srcDates, comparer) {\n            if (comparer === void 0) {\n                comparer = dataviz.dateComparer;\n            }\n            var dates = sortDates(srcDates, comparer);\n            var length = dates.length;\n            var result = length > 0 ? [dates[0]] : [];\n            for (var i = 1; i < length; i++) {\n                if (comparer(dates[i], last(result)) !== 0) {\n                    result.push(dates[i]);\n                }\n            }\n            return result;\n        }\n        function transpose(rows) {\n            var rowCount = rows.length;\n            var result = [];\n            for (var rowIx = 0; rowIx < rowCount; rowIx++) {\n                var row = rows[rowIx];\n                var colCount = row.length;\n                for (var colIx = 0; colIx < colCount; colIx++) {\n                    result[colIx] = result[colIx] || [];\n                    result[colIx].push(row[colIx]);\n                }\n            }\n            return result;\n        }\n        var DATA_FIELDS = [\n            'data',\n            'categories'\n        ];\n        function clearMissingValues(originalOptions, options) {\n            for (var field in options) {\n                if (!inArray(field, DATA_FIELDS) && options.hasOwnProperty(field)) {\n                    var fieldValue = options[field];\n                    var originalValue = originalOptions[field];\n                    if (defined(originalValue)) {\n                        var nullValue = fieldValue === null;\n                        if (nullValue || !defined(fieldValue)) {\n                            delete originalOptions[field];\n                            if (nullValue) {\n                                delete options[field];\n                            }\n                        } else if (originalValue && isObject(fieldValue)) {\n                            if (isObject(originalValue)) {\n                                clearMissingValues(originalValue, fieldValue);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        function triggerPaneRender(panes) {\n            for (var idx = 0; idx < panes.length; idx++) {\n                panes[idx].notifyRender();\n            }\n        }\n        setDefaultOptions(Chart, {\n            renderAs: '',\n            chartArea: {},\n            legend: {\n                visible: true,\n                labels: {}\n            },\n            categoryAxis: {},\n            seriesDefaults: {\n                type: COLUMN,\n                data: [],\n                highlight: { visible: true },\n                labels: {},\n                negativeValues: { visible: false }\n            },\n            series: [],\n            seriesColors: null,\n            tooltip: { visible: false },\n            transitions: true,\n            valueAxis: {},\n            plotArea: {},\n            title: {},\n            xAxis: {},\n            yAxis: {},\n            panes: [{}],\n            pannable: false,\n            zoomable: false\n        });\n        kendo.deepExtend(kendo.dataviz, {\n            constants: constants,\n            Aggregates: Aggregates,\n            AreaChart: AreaChart,\n            AreaSegment: AreaSegment,\n            AxisGroupRangeTracker: AxisGroupRangeTracker,\n            Bar: Bar,\n            BarChart: BarChart,\n            BarLabel: BarLabel,\n            BoxPlotChart: BoxPlotChart,\n            BoxPlot: BoxPlot,\n            BubbleChart: BubbleChart,\n            Bullet: Bullet,\n            BulletChart: BulletChart,\n            CandlestickChart: CandlestickChart,\n            Candlestick: Candlestick,\n            CategoricalChart: CategoricalChart,\n            CategoricalErrorBar: CategoricalErrorBar,\n            CategoricalPlotArea: CategoricalPlotArea,\n            Chart: Chart,\n            ChartContainer: ChartContainer,\n            ClipAnimation: ClipAnimation,\n            ClusterLayout: ClusterLayout,\n            Crosshair: Crosshair,\n            CrosshairTooltip: CrosshairTooltip,\n            DefaultAggregates: DefaultAggregates,\n            DonutChart: DonutChart,\n            DonutPlotArea: DonutPlotArea,\n            DonutSegment: DonutSegment,\n            ErrorBarBase: ErrorBarBase,\n            ErrorRangeCalculator: ErrorRangeCalculator,\n            Highlight: Highlight,\n            SharedTooltip: SharedTooltip,\n            Legend: Legend,\n            LegendItem: LegendItem,\n            LegendLayout: LegendLayout,\n            LineChart: LineChart,\n            LinePoint: LinePoint,\n            LineSegment: LineSegment,\n            Pane: Pane,\n            PieAnimation: PieAnimation,\n            PieChart: PieChart,\n            PieChartMixin: PieChartMixin,\n            PiePlotArea: PiePlotArea,\n            PieSegment: PieSegment,\n            PlotAreaBase: PlotAreaBase,\n            PlotAreaEventsMixin: PlotAreaEventsMixin,\n            PlotAreaFactory: PlotAreaFactory,\n            PointEventsMixin: PointEventsMixin,\n            RangeBar: RangeBar,\n            RangeBarChart: RangeBarChart,\n            RangeAreaPoint: RangeAreaPoint,\n            RangeAreaChart: RangeAreaChart,\n            ScatterChart: ScatterChart,\n            ScatterErrorBar: ScatterErrorBar,\n            ScatterLineChart: ScatterLineChart,\n            Selection: Selection,\n            SeriesAggregator: SeriesAggregator,\n            SeriesBinder: SeriesBinder,\n            SplineSegment: SplineSegment,\n            SplineAreaSegment: SplineAreaSegment,\n            StackWrap: StackWrap,\n            Tooltip: Tooltip,\n            OHLCChart: OHLCChart,\n            OHLCPoint: OHLCPoint,\n            WaterfallChart: WaterfallChart,\n            WaterfallSegment: WaterfallSegment,\n            XYPlotArea: XYPlotArea,\n            MousewheelZoom: MousewheelZoom,\n            ZoomSelection: ZoomSelection,\n            Pannable: Pannable,\n            ChartAxis: ChartAxis,\n            ChartPane: ChartPane,\n            ChartPlotArea: ChartPlotArea,\n            findAxisByName: findAxisByName,\n            anyHasZIndex: anyHasZIndex,\n            appendIfNotNull: appendIfNotNull,\n            areNumbers: areNumbers,\n            bindSegments: bindSegments,\n            categoriesCount: categoriesCount,\n            countNumbers: countNumbers,\n            equalsIgnoreCase: equalsIgnoreCase,\n            evalOptions: evalOptions,\n            filterSeriesByType: filterSeriesByType,\n            getDateField: getDateField,\n            getField: getField,\n            hasGradientOverlay: hasGradientOverlay,\n            hasValue: hasValue,\n            isDateAxis: isDateAxis,\n            segmentVisible: segmentVisible,\n            singleItemOrArray: singleItemOrArray,\n            createOutOfRangePoints: createOutOfRangePoints\n        });\n    }(window.kendo.jQuery));\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('dataviz/chart/chart', [\n        'dataviz/chart/kendo-chart',\n        'kendo.data',\n        'kendo.dataviz.core',\n        'kendo.dataviz.themes',\n        'kendo.drawing',\n        'kendo.userevents'\n    ], f);\n}(function () {\n    (function ($, undefined) {\n        var NS = '.kendoChart';\n        var kendo = window.kendo;\n        var Class = kendo.Class;\n        var outerWidth = kendo._outerWidth;\n        var outerHeight = kendo._outerHeight;\n        var dataviz = kendo.dataviz;\n        var constants = dataviz.constants;\n        var KendoChart = dataviz.Chart;\n        var SeriesBinder = dataviz.SeriesBinder;\n        var Widget = kendo.ui.Widget;\n        var DataSource = kendo.data.DataSource;\n        var deepExtend = kendo.deepExtend;\n        var defined = dataviz.defined;\n        var getField = dataviz.getField;\n        var InstanceObserver = dataviz.InstanceObserver;\n        var inArray = dataviz.inArray;\n        var services = dataviz.services;\n        var proxy = $.proxy;\n        var isArray = $.isArray;\n        var extend = $.extend;\n        var template = kendo.template;\n        var MOUSELEAVE_NS = 'mouseleave' + NS;\n        var AXIS_LABEL_CLICK = constants.AXIS_LABEL_CLICK;\n        var LEGEND_ITEM_CLICK = constants.LEGEND_ITEM_CLICK;\n        var LEGEND_ITEM_HOVER = constants.LEGEND_ITEM_HOVER;\n        var LEGEND_ITEM_LEAVE = constants.LEGEND_ITEM_LEAVE;\n        var SERIES_CLICK = constants.SERIES_CLICK;\n        var SERIES_HOVER = constants.SERIES_HOVER;\n        var SERIES_OVER = constants.SERIES_OVER;\n        var SERIES_LEAVE = constants.SERIES_LEAVE;\n        var PANE_RENDER = constants.PANE_RENDER;\n        var PLOT_AREA_CLICK = constants.PLOT_AREA_CLICK;\n        var PLOT_AREA_HOVER = constants.PLOT_AREA_HOVER;\n        var PLOT_AREA_LEAVE = constants.PLOT_AREA_LEAVE;\n        var DRAG = constants.DRAG;\n        var DRAG_END = constants.DRAG_END;\n        var DRAG_START = constants.DRAG_START;\n        var ZOOM_START = constants.ZOOM_START;\n        var ZOOM = constants.ZOOM;\n        var ZOOM_END = constants.ZOOM_END;\n        var SELECT_START = constants.SELECT_START;\n        var SELECT = constants.SELECT;\n        var SELECT_END = constants.SELECT_END;\n        var RENDER = constants.RENDER;\n        var NOTE_CLICK = constants.NOTE_CLICK;\n        var NOTE_HOVER = constants.NOTE_HOVER;\n        var NOTE_LEAVE = constants.NOTE_LEAVE;\n        var CHANGE = 'change';\n        var DATABOUND = 'dataBound';\n        var LEAVE = 'leave';\n        var VALUE = constants.VALUE;\n        var PIE = constants.PIE;\n        var DONUT = constants.DONUT;\n        var FUNNEL = constants.FUNNEL;\n        var Observable = kendo.Observable;\n        var TOOLTIP_ANIMATION_DURATION = 150;\n        var TOOLTIP_SHOW_DELAY = 100;\n        var TOOLTIP_INVERSE = 'k-chart-tooltip-inverse';\n        var SHARED_TOOLTIP_CLASS = 'k-chart-shared-tooltip';\n        var RTL = 'rtl';\n        services.DomEventsBuilder.register({\n            create: function (element, events) {\n                return new kendo.UserEvents(element, deepExtend({\n                    global: true,\n                    multiTouch: true,\n                    fastTap: true\n                }, events));\n            }\n        });\n        var ChartInstanceObserver = InstanceObserver.extend({\n            handlerMap: {\n                showTooltip: '_showTooltip',\n                hideTooltip: '_hideTooltip',\n                legendItemClick: '_onLegendItemClick',\n                render: '_onRender',\n                init: '_onInit'\n            }\n        });\n        var Chart = Widget.extend({\n            init: function (element, userOptions) {\n                var dataSource;\n                kendo.destroy(element);\n                Widget.fn.init.call(this, element);\n                if (userOptions) {\n                    dataSource = userOptions.dataSource;\n                    delete userOptions.dataSource;\n                }\n                this.options = deepExtend({}, this.options, userOptions);\n                this.wrapper = this.element;\n                this._attachEvents();\n                if (userOptions) {\n                    userOptions.dataSource = dataSource;\n                }\n                this._seriesVisibility = new SeriesVisibilityState();\n                this.bind(this.events, this.options);\n                this._initDataSource(userOptions);\n                kendo.notify(this, dataviz.ui);\n            },\n            events: [\n                DATABOUND,\n                SERIES_CLICK,\n                SERIES_HOVER,\n                SERIES_OVER,\n                SERIES_LEAVE,\n                AXIS_LABEL_CLICK,\n                LEGEND_ITEM_CLICK,\n                LEGEND_ITEM_HOVER,\n                LEGEND_ITEM_LEAVE,\n                PANE_RENDER,\n                PLOT_AREA_CLICK,\n                PLOT_AREA_HOVER,\n                PLOT_AREA_LEAVE,\n                DRAG_START,\n                DRAG,\n                DRAG_END,\n                ZOOM_START,\n                ZOOM,\n                ZOOM_END,\n                SELECT_START,\n                SELECT,\n                SELECT_END,\n                NOTE_CLICK,\n                NOTE_HOVER,\n                NOTE_LEAVE,\n                RENDER\n            ],\n            options: {\n                name: 'Chart',\n                renderAs: '',\n                theme: 'default',\n                axisDefaults: {},\n                chartArea: {},\n                legend: {},\n                categoryAxis: {},\n                autoBind: true,\n                seriesDefaults: {},\n                series: [],\n                seriesColors: null,\n                tooltip: {},\n                transitions: true,\n                valueAxis: {},\n                plotArea: {},\n                title: {},\n                xAxis: {},\n                yAxis: {},\n                panes: [{}],\n                pannable: false,\n                zoomable: false\n            },\n            items: function () {\n                return $();\n            },\n            refresh: function () {\n                var chart = this;\n                var instance = chart._instance;\n                instance.applyDefaults(chart.options);\n                instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                chart.trigger(DATABOUND);\n                chart._redraw();\n            },\n            getSize: function () {\n                return kendo.dimensions(this.element);\n            },\n            redraw: function (paneName) {\n                this._size = null;\n                this._instance.redraw(paneName);\n            },\n            setOptions: function (options) {\n                var chart = this, dataSource = options.dataSource;\n                delete options.dataSource;\n                Widget.fn._setEvents.call(chart, options);\n                this._instance.applyOptions(options, this._getThemeOptions(options));\n                this.options = this._instance.options;\n                this._tooltip.setOptions(this.options.tooltip);\n                this._seriesVisibility.setOptions(this.options);\n                this._sourceSeries = null;\n                if (dataSource) {\n                    chart.setDataSource(dataSource);\n                }\n                if (chart._hasDataSource) {\n                    chart._onDataChanged();\n                } else {\n                    chart._bindCategories();\n                    chart.redraw();\n                }\n                chart._instance.updateMouseMoveHandler();\n            },\n            setDataSource: function (dataSource) {\n                var chart = this;\n                chart.dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                chart.dataSource = dataSource = DataSource.create(dataSource);\n                chart._hasDataSource = true;\n                chart._hasData = false;\n                dataSource.bind(CHANGE, chart._dataChangeHandler);\n                if (chart.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            destroy: function () {\n                var chart = this, dataSource = chart.dataSource;\n                chart.element.off(NS);\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, chart._dataChangeHandler);\n                }\n                if (chart._instance) {\n                    chart._instance.destroy();\n                    delete this._instance;\n                }\n                if (this._tooltip) {\n                    this._tooltip.destroy();\n                    delete this._tooltip;\n                }\n                this._destroyCrosshairTooltips();\n                Widget.fn.destroy.call(chart);\n            },\n            findPaneByName: function (name) {\n                var panes = this._plotArea.panes;\n                for (var idx = 0; idx < panes.length; idx++) {\n                    if (panes[idx].options.name === name) {\n                        return new ChartPane(this, panes[idx]);\n                    }\n                }\n            },\n            findPaneByIndex: function (idx) {\n                var panes = this._plotArea.panes;\n                if (panes[idx]) {\n                    return new ChartPane(this, panes[idx]);\n                }\n            },\n            findSeries: function (callback) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                for (var idx = 0; idx < series.length; idx++) {\n                    if (callback(series[idx])) {\n                        return new ChartSeries(this, series[idx]);\n                    }\n                }\n            },\n            findSeriesByName: function (name) {\n                return this._createSeries({ name: name });\n            },\n            findSeriesByIndex: function (index) {\n                return this._createSeries({ index: index });\n            },\n            exportVisual: function (options) {\n                var instance = this._instance;\n                if (!instance) {\n                    return;\n                }\n                var visual;\n                if (options && (options.width || options.height)) {\n                    var chartArea = instance.options.chartArea;\n                    var originalChartArea = instance._originalOptions.chartArea;\n                    deepExtend(chartArea, options);\n                    var model = instance._getModel();\n                    chartArea.width = originalChartArea.width;\n                    chartArea.height = originalChartArea.height;\n                    model.renderVisual();\n                    triggerPaneRender(model._plotArea.panes);\n                    visual = model.visual;\n                } else {\n                    visual = instance.exportVisual();\n                }\n                return visual;\n            },\n            _createSeries: function (options) {\n                var seriesOptions = this._seriesOptions(options);\n                if (seriesOptions) {\n                    return new ChartSeries(this, seriesOptions);\n                }\n            },\n            _seriesOptions: function (options) {\n                var plotArea = this._plotArea;\n                var series = plotArea.srcSeries || plotArea.series;\n                var seriesOptions;\n                if (defined(options.index)) {\n                    seriesOptions = series[options.index];\n                } else if (defined(options.name)) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (series[idx].name === options.name) {\n                            seriesOptions = series[idx];\n                            break;\n                        }\n                    }\n                }\n                return seriesOptions;\n            },\n            _attachEvents: function () {\n                this.element.on(MOUSELEAVE_NS, proxy(this._mouseleave, this));\n            },\n            _mouseleave: function (e) {\n                var instance = this._instance;\n                var tooltip = this._tooltip;\n                var target = e.relatedTarget;\n                if (!(target && $(target).closest(tooltip.element).length) && instance && !instance.handlingTap) {\n                    instance.hideElements();\n                }\n            },\n            _getThemeOptions: function (userOptions) {\n                var themeName = (userOptions || {}).theme;\n                if (themeName && dataviz.SASS_THEMES.indexOf(themeName.toLowerCase()) !== -1) {\n                    return dataviz.autoTheme().chart;\n                }\n                if (defined(themeName)) {\n                    var themes = dataviz.ui.themes || {};\n                    var theme = themes[themeName] || themes[themeName.toLowerCase()] || {};\n                    return theme.chart || {};\n                }\n            },\n            _initChart: function () {\n                this._createChart(this.options, this._getThemeOptions(this.options));\n                this.options = this._instance.options;\n                this._seriesVisibility.setOptions(this.options);\n            },\n            _createChart: function (options, themeOptions) {\n                this._instance = new KendoChart(this.element[0], options, themeOptions, {\n                    observer: new ChartInstanceObserver(this),\n                    sender: this,\n                    rtl: this._isRtl()\n                });\n            },\n            _onInit: function (e) {\n                this._instance = e.sender;\n            },\n            _initDataSource: function (userOptions) {\n                var chart = this, dataSource = (userOptions || {}).dataSource;\n                chart._dataChangeHandler = proxy(chart._onDataChanged, chart);\n                chart.dataSource = DataSource.create(dataSource).bind('change', chart._dataChangeHandler);\n                chart._bindCategories();\n                if (dataSource) {\n                    chart._hasDataSource = true;\n                }\n                this._initChart();\n                this._initTooltip();\n                if (dataSource) {\n                    if (chart.options.autoBind) {\n                        chart.dataSource.fetch();\n                    }\n                }\n            },\n            _destroyCrosshairTooltips: function () {\n                var tooltips = this._crosshairTooltips;\n                if (tooltips) {\n                    for (var key in tooltips) {\n                        tooltips[key].destroy();\n                    }\n                }\n                this._crosshairTooltips = {};\n            },\n            _getCrosshairTooltip: function (name, index) {\n                var tooltips = this._crosshairTooltips = this._crosshairTooltips || {};\n                var key = name + index;\n                var tooltip = tooltips[key];\n                if (!tooltip) {\n                    tooltip = tooltips[key] = new CrosshairTooltip(this.element);\n                }\n                return tooltip;\n            },\n            _showTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.show(e);\n                } else if (this._tooltip) {\n                    this._tooltip.show(e);\n                }\n            },\n            _hideTooltip: function (e) {\n                if (e.crosshair) {\n                    var tooltip = this._getCrosshairTooltip(e.axisName, e.axisIndex);\n                    tooltip.hide();\n                } else if (this._tooltip) {\n                    this._tooltip.hide(e);\n                }\n            },\n            _onRender: function (e) {\n                this._destroyCrosshairTooltips();\n                this._copyMembers(e.sender);\n                if (!this._hasDataSource || this._hasData || !this.options.autoBind) {\n                    this.trigger(RENDER);\n                }\n            },\n            _copyMembers: function (instance) {\n                this.options = instance.options;\n                this._originalOptions = instance._originalOptions;\n                this.surface = instance.surface;\n                this._plotArea = instance._plotArea;\n                this._model = instance._model;\n                this._highlight = instance._highlight;\n                this._selections = instance._selections;\n                this._pannable = instance._pannable;\n                this._zoomSelection = instance._zoomSelection;\n                this._mousewheelZoom = instance._mousewheelZoom;\n            },\n            requiresHandlers: function (names) {\n                var events = this._events;\n                for (var idx = 0; idx < names.length; idx++) {\n                    if (defined(events[names[idx]])) {\n                        return true;\n                    }\n                }\n            },\n            _initTooltip: function () {\n                this._tooltip = this._createTooltip();\n                this._tooltip.bind(LEAVE, proxy(this._tooltipleave, this));\n            },\n            _onLegendItemClick: function (e) {\n                if (!this.trigger(LEGEND_ITEM_CLICK, e)) {\n                    this._legendItemClick(e.seriesIndex, e.pointIndex);\n                }\n            },\n            _legendItemClick: function (seriesIndex, pointIndex) {\n                var chart = this._instance, plotArea = chart._plotArea, currentSeries = (plotArea.srcSeries || plotArea.series)[seriesIndex];\n                if ($.inArray(currentSeries.type, [\n                        PIE,\n                        DONUT,\n                        FUNNEL\n                    ]) >= 0) {\n                    var point = currentSeries.data[pointIndex];\n                    if (point && defined(point.visible)) {\n                        point.visible = !point.visible;\n                    } else {\n                        var pointVisibility = currentSeries.pointVisibility = currentSeries.pointVisibility || {};\n                        var visible = pointVisibility[pointIndex];\n                        pointVisibility[pointIndex] = defined(visible) ? !visible : false;\n                    }\n                } else {\n                    currentSeries.visible = !currentSeries.visible;\n                    this._seriesVisibility.save(currentSeries);\n                }\n                chart._noTransitionsRedraw();\n            },\n            _createTooltip: function () {\n                return new Tooltip(this.element, extend({}, this.options.tooltip, { rtl: this._isRtl() }));\n            },\n            _tooltipleave: function () {\n                if (this._instance) {\n                    this._instance.hideElements();\n                }\n            },\n            _bindData: function (e) {\n                var chart = this, options = chart.options, series = chart._sourceSeries || options.series, seriesIx, seriesLength = series.length, data = chart.dataSource.view(), grouped = (chart.dataSource.group() || []).length > 0, processedSeries = [], seriesVisibility = this._seriesVisibility, currentSeries, groupedSeries;\n                seriesVisibility.read();\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries) && grouped) {\n                        groupedSeries = groupSeries(currentSeries, data);\n                        processedSeries = processedSeries.concat(groupedSeries);\n                        seriesVisibility.applyByGroup(groupedSeries, e);\n                    } else {\n                        currentSeries = extend({}, currentSeries);\n                        processedSeries.push(currentSeries);\n                        seriesVisibility.applyByIndex(currentSeries, e);\n                    }\n                }\n                chart._sourceSeries = series;\n                options.series = processedSeries;\n                this._instance.applySeriesColors();\n                chart._bindSeries();\n                chart._bindCategories();\n                this._hasData = true;\n            },\n            _onDataChanged: function (e) {\n                this._bindData(e);\n                this.trigger(DATABOUND);\n                if (this._instance && this._instance.fontLoaded) {\n                    this._redraw();\n                }\n            },\n            _bindSeries: function () {\n                var chart = this, data = chart.dataSource.view(), series = chart.options.series, seriesIx, seriesLength = series.length, currentSeries, groupIx, seriesData;\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n                    if (chart._isBindable(currentSeries)) {\n                        groupIx = currentSeries._groupIx;\n                        seriesData = defined(groupIx) ? (data[groupIx] || {}).items : data;\n                        if (currentSeries.autoBind !== false) {\n                            currentSeries.data = seriesData;\n                        }\n                    }\n                }\n            },\n            _bindCategories: function () {\n                var chart = this, data = chart.dataSource.view() || [], grouped = (chart.dataSource.group() || []).length > 0, categoriesData = data, options = chart.options, definitions = [].concat(options.categoryAxis), axisIx, axis;\n                if (grouped) {\n                    if (data.length) {\n                        categoriesData = data[0].items;\n                    }\n                }\n                for (axisIx = 0; axisIx < definitions.length; axisIx++) {\n                    axis = definitions[axisIx];\n                    if (axis.autoBind !== false) {\n                        chart._bindCategoryAxis(axis, categoriesData, axisIx);\n                    }\n                }\n            },\n            _bindCategoryAxis: function (axis, data, axisIx) {\n                var count = (data || []).length, categoryIx, category, row;\n                if (axis.field) {\n                    axis.categories = [];\n                    for (categoryIx = 0; categoryIx < count; categoryIx++) {\n                        row = data[categoryIx];\n                        category = getField(axis.field, row);\n                        if (categoryIx === 0) {\n                            axis.categories = [category];\n                            axis.dataItems = [row];\n                        } else {\n                            axis.categories.push(category);\n                            axis.dataItems.push(row);\n                        }\n                    }\n                } else if (this._instance) {\n                    this._instance.bindCategoryAxisFromSeries(axis, axisIx);\n                }\n            },\n            _isBindable: function (series) {\n                var valueFields = SeriesBinder.current.valueFields(series), result = true, field, i;\n                for (i = 0; i < valueFields.length; i++) {\n                    field = valueFields[i];\n                    if (field === VALUE) {\n                        field = 'field';\n                    } else {\n                        field = field + 'Field';\n                    }\n                    if (!defined(series[field])) {\n                        result = false;\n                        break;\n                    }\n                }\n                return result;\n            },\n            _isRtl: function () {\n                return kendo.support.isRtl(this.element) && this.element.css('direction') === RTL;\n            }\n        });\n        var proxyMembers = [\n            'getAxis',\n            'findAxisByName',\n            'plotArea',\n            'toggleHighlight',\n            'showTooltip',\n            'hideTooltip',\n            '_resize',\n            '_redraw',\n            '_noTransitionsRedraw',\n            '_legendItemHover',\n            '_eventCoordinates'\n        ];\n        function createProxyMember(name) {\n            Chart.fn[name] = function () {\n                var instance = this._instance;\n                if (instance) {\n                    return instance[name].apply(instance, arguments);\n                }\n            };\n        }\n        for (var idx = 0; idx < proxyMembers.length; idx++) {\n            createProxyMember(proxyMembers[idx]);\n        }\n        function groupSeries(series, data) {\n            var result = [], nameTemplate, legacyTemplate = series.groupNameTemplate, groupIx, dataLength = data.length, seriesClone;\n            if (dataLength === 0) {\n                seriesClone = deepExtend({}, series);\n                seriesClone.visibleInLegend = false;\n                return [seriesClone];\n            }\n            if (defined(legacyTemplate)) {\n                kendo.logToConsole('\\'groupNameTemplate\\' is obsolete and will be removed in future versions. ' + 'Specify the group name template as \\'series.name\\'');\n                if (legacyTemplate) {\n                    nameTemplate = template(legacyTemplate);\n                }\n            } else {\n                nameTemplate = template(series.name || '');\n                if (nameTemplate._slotCount === 0) {\n                    nameTemplate = template(defined(series.name) ? '#= group.value #: #= series.name #' : '#= group.value #');\n                }\n            }\n            for (groupIx = 0; groupIx < dataLength; groupIx++) {\n                seriesClone = deepExtend({}, series);\n                if (!kendo.isFunction(seriesClone.color)) {\n                    seriesClone.color = undefined;\n                }\n                seriesClone._groupIx = groupIx;\n                seriesClone._groupValue = data[groupIx].value;\n                result.push(seriesClone);\n                if (nameTemplate) {\n                    seriesClone.name = nameTemplate({\n                        series: seriesClone,\n                        group: data[groupIx]\n                    });\n                }\n            }\n            return result;\n        }\n        dataviz.ExportMixin.extend(Chart.fn);\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Chart.fn);\n        }\n        dataviz.ui.plugin(Chart);\n        var SeriesVisibilityState = Class.extend({\n            init: function () {\n                this.groups = {};\n                this.index = {};\n                this.options = {};\n            },\n            applyByGroup: function (series, e) {\n                if (e && e.action || this.options.persistSeriesVisibility) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        if (this.groups[series[idx]._groupValue] === false) {\n                            series[idx].visible = false;\n                        }\n                    }\n                } else {\n                    this.groups = {};\n                }\n            },\n            applyByIndex: function (series, e) {\n                if (e && e.action || this.options.persistSeriesVisibility) {\n                    if (this.index[series.index] === false) {\n                        series.visible = false;\n                    }\n                } else {\n                    this.index = {};\n                }\n            },\n            save: function (series) {\n                if (!series) {\n                    return;\n                }\n                if (this.options.persistSeriesVisibility) {\n                    this.options.series[series.index].visible = series.visible;\n                } else {\n                    this.saveState(series);\n                }\n            },\n            setOptions: function (options) {\n                this.options = options;\n                this.groups = {};\n                this.index = {};\n            },\n            read: function () {\n                var options = this.options;\n                if (options.persistSeriesVisibility) {\n                    var series = options.series;\n                    for (var idx = 0; idx < series.length; idx++) {\n                        this.saveState(series[idx]);\n                    }\n                }\n            },\n            saveState: function (series) {\n                if (defined(series._groupValue)) {\n                    this.groups[series._groupValue] = series.visible;\n                } else {\n                    this.index[series.index] = series.visible;\n                }\n            }\n        });\n        var geom = kendo.geometry;\n        function normalizeStyle(style) {\n            for (var field in style) {\n                if (style[field] === undefined) {\n                    style[field] = '';\n                }\n            }\n            return style;\n        }\n        var Tooltip = Observable.extend({\n            init: function (chartElement, options) {\n                var tooltip = this;\n                Observable.fn.init.call(tooltip);\n                this.setOptions(options);\n                tooltip.chartElement = chartElement;\n                tooltip.template = Tooltip.template;\n                if (!tooltip.template) {\n                    tooltip.template = Tooltip.template = kendo.template('<div class=\\'k-tooltip k-chart-tooltip#= d.rtl ? \" k-rtl\" : \"\"#\\' ' + 'style=\\'display:none; position: absolute; font: #= d.font #;' + '#if (d.border) {# border: #= d.border.width #px solid; #}#' + 'opacity: #= d.opacity #; filter: alpha(opacity=#= d.opacity * 100 #);\\'>' + '</div>', {\n                        useWithBlock: false,\n                        paramName: 'd'\n                    });\n                }\n                tooltip.element = $(tooltip.template(tooltip.options));\n                tooltip.move = proxy(tooltip.move, tooltip);\n                tooltip._mouseleave = proxy(tooltip._mouseleave, tooltip);\n                var mobileScrollerSelector = kendo.format('[{0}=\\'content\\'],[{0}=\\'scroller\\']', kendo.attr('role'));\n                tooltip._mobileScroller = chartElement.closest(mobileScrollerSelector).data('kendoMobileScroller');\n            },\n            destroy: function () {\n                this._clearShowTimeout();\n                if (this.element) {\n                    this.element.off(MOUSELEAVE_NS).remove();\n                    this.element = null;\n                }\n            },\n            setOptions: function (options) {\n                this.options = deepExtend({}, this.options, options);\n            },\n            options: {\n                opacity: 1,\n                animation: { duration: TOOLTIP_ANIMATION_DURATION },\n                sharedTemplate: '<table>' + '<th colspan=\\'#= colspan #\\'>#= categoryText #</th>' + '# for(var i = 0; i < points.length; i++) { #' + '# var point = points[i]; #' + '<tr>' + '# if(colorMarker) { # ' + '<td><span class=\\'k-chart-shared-tooltip-marker\\' style=\\'background-color:#:point.series.color#\\'></span></td>' + '# } #' + '# if(nameColumn) { # ' + '<td> #if (point.series.name) {# #: point.series.name #: #} else {# &nbsp; #}#</td>' + '# } #' + '<td>#= content(point) #</td>' + '</tr>' + '# } #' + '</table>',\n                categoryFormat: '{0:d}'\n            },\n            move: function () {\n                var tooltip = this, options = tooltip.options, element = tooltip.element, offset;\n                if (!tooltip.anchor || !tooltip.element) {\n                    return;\n                }\n                offset = tooltip._offset();\n                if (!tooltip.visible) {\n                    element.css({\n                        top: offset.top,\n                        left: offset.left\n                    });\n                }\n                tooltip.visible = true;\n                tooltip._ensureElement(document.body);\n                element.stop(true, true).show().animate({\n                    left: offset.left,\n                    top: offset.top\n                }, options.animation.duration);\n            },\n            _clearShowTimeout: function () {\n                if (this.showTimeout) {\n                    clearTimeout(this.showTimeout);\n                    this.showTimeout = null;\n                }\n            },\n            getAnchor: function (size) {\n                var anchor = this.anchor;\n                var point = anchor.point;\n                var align = anchor.align;\n                var x = point.left;\n                var y = point.top;\n                if (align.horizontal === 'center') {\n                    x -= size.width / 2;\n                } else if (align.horizontal === 'right') {\n                    x -= size.width;\n                }\n                if (align.vertical === 'center') {\n                    y -= size.height / 2;\n                } else if (align.vertical === 'bottom') {\n                    y -= size.height;\n                }\n                return {\n                    x: x,\n                    y: y\n                };\n            },\n            _offset: function () {\n                var tooltip = this, size = tooltip._measure(), anchor = tooltip.getAnchor(size), top = anchor.y, left = anchor.x, zoomLevel = kendo.support.zoomLevel(), viewport = $(window), scrollTop = window.pageYOffset || document.documentElement.scrollTop || 0, scrollLeft = window.pageXOffset || document.documentElement.scrollLeft || 0, movable = (this._mobileScroller || {}).movable;\n                if (!movable || movable.scale === 1) {\n                    top += tooltip._fit(top - scrollTop, size.height, outerHeight(viewport) / zoomLevel);\n                    left += tooltip._fit(left - scrollLeft, size.width, outerWidth(viewport) / zoomLevel);\n                } else {\n                    var transform = geom.transform().scale(movable.scale, movable.scale, [\n                        movable.x,\n                        movable.y\n                    ]);\n                    var point = new geom.Point(left, top).transform(transform);\n                    left = point.x;\n                    top = point.y;\n                }\n                return {\n                    top: top,\n                    left: left\n                };\n            },\n            show: function (e) {\n                this.anchor = e.anchor;\n                this.element.css(normalizeStyle(e.style));\n                this.element.toggleClass(TOOLTIP_INVERSE, !!e.className);\n                this.element.toggleClass(SHARED_TOOLTIP_CLASS, !!e.shared);\n                var content = e.shared ? this._sharedContent(e) : this._pointContent(e.point);\n                this.element.html(content);\n                this._clearShowTimeout();\n                this.showTimeout = setTimeout(this.move, TOOLTIP_SHOW_DELAY);\n            },\n            hide: function () {\n                var tooltip = this;\n                clearTimeout(tooltip.showTimeout);\n                tooltip._hideElement();\n                if (tooltip.visible) {\n                    tooltip.point = null;\n                    tooltip.visible = false;\n                    tooltip.index = null;\n                }\n            },\n            _sharedContent: function (e) {\n                var points = e.points;\n                var nameColumn = dataviz.grep(points, function (point) {\n                    return defined(point.series.name);\n                }).length;\n                var colorMarker = e.series.length > 1;\n                var colspan = 1;\n                if (nameColumn) {\n                    colspan++;\n                }\n                if (colorMarker) {\n                    colspan++;\n                }\n                var template = kendo.template(this.options.sharedTemplate);\n                var content = template({\n                    points: points,\n                    category: e.category,\n                    categoryText: e.categoryText,\n                    content: this._pointContent,\n                    colorMarker: colorMarker,\n                    nameColumn: nameColumn,\n                    colspan: colspan\n                });\n                return content;\n            },\n            _measure: function () {\n                this._ensureElement();\n                var size = {\n                    width: outerWidth(this.element),\n                    height: outerHeight(this.element)\n                };\n                return size;\n            },\n            _ensureElement: function () {\n                if (this.element) {\n                    this.element.appendTo(document.body).on(MOUSELEAVE_NS, this._mouseleave);\n                }\n            },\n            _mouseleave: function (e) {\n                var target = e.relatedTarget;\n                var chart = this.chartElement[0];\n                if (target && target !== chart && !$.contains(chart, target)) {\n                    this.trigger(LEAVE);\n                }\n            },\n            _hideElement: function () {\n                var tooltip = this;\n                var element = this.element;\n                if (element) {\n                    element.fadeOut({\n                        always: function () {\n                            if (!tooltip.visible) {\n                                element.off(MOUSELEAVE_NS).remove();\n                            }\n                        }\n                    });\n                }\n            },\n            _pointContent: function (point) {\n                var tooltip = this, options = deepExtend({}, tooltip.options, point.options.tooltip), content, tooltipTemplate;\n                if (defined(point.value)) {\n                    content = point.value.toString();\n                }\n                if (options.template) {\n                    tooltipTemplate = template(options.template);\n                    content = tooltipTemplate({\n                        value: point.value,\n                        category: point.category,\n                        series: point.series,\n                        dataItem: point.dataItem,\n                        percentage: point.percentage,\n                        runningTotal: point.runningTotal,\n                        total: point.total,\n                        low: point.low,\n                        high: point.high,\n                        xLow: point.xLow,\n                        xHigh: point.xHigh,\n                        yLow: point.yLow,\n                        yHigh: point.yHigh\n                    });\n                } else if (options.format) {\n                    content = point.formatValue(options.format);\n                }\n                return content;\n            },\n            _fit: function (offset, size, viewPortSize) {\n                var output = 0;\n                if (offset + size > viewPortSize) {\n                    output = viewPortSize - (offset + size);\n                }\n                if (offset < 0) {\n                    output = -offset;\n                }\n                return output;\n            }\n        });\n        var CrosshairTooltip = Tooltip.extend({\n            init: function (chartElement, options) {\n                Tooltip.fn.init.call(this, chartElement, options);\n                this.element.addClass('k-chart-crosshair-tooltip');\n            },\n            show: function (e) {\n                var element = this.element;\n                if (element) {\n                    this.anchor = e.anchor;\n                    this.element.css(e.style);\n                    this.element.html(this.content(e));\n                    this.move();\n                }\n            },\n            move: function () {\n                var tooltip = this, element = tooltip.element, offset = tooltip._offset();\n                tooltip._ensureElement();\n                element.css({\n                    top: offset.top,\n                    left: offset.left\n                }).show();\n            },\n            content: function (e) {\n                var content = e.value, options = e.crosshair.options.tooltip;\n                if (options.template) {\n                    content = template(options.template)({ value: content });\n                }\n                return content;\n            },\n            hide: function () {\n                this.element.hide();\n            }\n        });\n        var ChartPane = Class.extend({\n            init: function (chart, pane) {\n                this._chart = chart;\n                this._pane = pane;\n                this.visual = pane.visual;\n                this.chartsVisual = pane.chartContainer.visual;\n                this.name = pane.options.name;\n            },\n            series: function () {\n                var chart = this._chart;\n                var seriesByPane = chart._plotArea.groupSeriesByPane();\n                var series = seriesByPane[this.name || 'default'];\n                var result = [];\n                if (series) {\n                    for (var idx = 0; idx < series.length; idx++) {\n                        result.push(new ChartSeries(chart, series[idx]));\n                    }\n                }\n                return result;\n            }\n        });\n        var ChartSeries = Class.extend({\n            init: function (chart, options) {\n                this._chart = chart;\n                this._options = options;\n            },\n            points: function (filter) {\n                var points = this._points;\n                if (!points) {\n                    var series = this._seriesOptions();\n                    var plotArea = this._chart._plotArea;\n                    this._points = points = plotArea.pointsBySeriesIndex(series.index);\n                }\n                if (kendo.isFunction(filter)) {\n                    points = this._filterPoints(points, filter);\n                }\n                return points;\n            },\n            data: function (data) {\n                var series = this._seriesOptions();\n                if (data) {\n                    var chart = this._chart;\n                    var plotArea = chart._plotArea;\n                    series.data = data;\n                    if (series.categoryField) {\n                        var axis = plotArea.seriesCategoryAxis(series);\n                        var options = [].concat(chart.options.categoryAxis);\n                        chart._instance.bindCategoryAxisFromSeries(options[axis.axisIndex], axis.axisIndex);\n                    }\n                    chart._noTransitionsRedraw();\n                    this._clearFields();\n                }\n                return series.data;\n            },\n            findPoint: function (filter) {\n                var points = this.points();\n                for (var idx = 0; idx < points.length; idx++) {\n                    if (filter(points[idx])) {\n                        return points[idx];\n                    }\n                }\n            },\n            toggleHighlight: function (show, elements) {\n                if (!elements) {\n                    elements = this.points();\n                } else if (kendo.isFunction(elements)) {\n                    elements = this.points(elements);\n                } else {\n                    elements = isArray(elements) ? elements : [elements];\n                }\n                this._chart._instance.togglePointsHighlight(show, elements);\n            },\n            toggleVisibility: function (visible, filter) {\n                var chart = this._chart;\n                var seriesOptions = this._seriesOptions();\n                var hasFilter = kendo.isFunction(filter);\n                if (!hasFilter) {\n                    seriesOptions.visible = visible;\n                    chart._seriesVisibility.save(seriesOptions);\n                } else {\n                    if (inArray(seriesOptions.type, [\n                            PIE,\n                            DONUT,\n                            FUNNEL\n                        ])) {\n                        var data = this._filterData(filter);\n                        for (var idx = 0; idx < data.length; idx++) {\n                            data[idx].visible = visible;\n                        }\n                    } else {\n                        seriesOptions.visible = function (data) {\n                            return filter(data.dataItem) ? visible : true;\n                        };\n                    }\n                }\n                chart._noTransitionsRedraw();\n                this._clearFields();\n            },\n            _filterData: function (filter) {\n                var data = this._seriesOptions().data;\n                var length = data.length;\n                var result = [];\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(data[idx])) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            _filterPoints: function (points, filter) {\n                var result = [];\n                var length = points.length;\n                for (var idx = 0; idx < length; idx++) {\n                    if (filter(points[idx])) {\n                        result.push(points[idx]);\n                    }\n                }\n                return result;\n            },\n            _seriesOptions: function () {\n                var series = this._series;\n                if (!series) {\n                    series = this._series = this._chart._seriesOptions(this._options);\n                }\n                return series;\n            },\n            _clearFields: function () {\n                delete this._points;\n                delete this._series;\n            }\n        });\n        function triggerPaneRender(panes) {\n            for (var idx = 0; idx < panes.length; idx++) {\n                panes[idx].notifyRender();\n            }\n        }\n        dataviz.Tooltip = Tooltip;\n        dataviz.CrosshairTooltip = CrosshairTooltip;\n        dataviz.ChartInstanceObserver = ChartInstanceObserver;\n        dataviz.ChartPane = ChartPane;\n        dataviz.ChartSeries = ChartSeries;\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));\n(function (f, define) {\n    define('kendo.dataviz.chart', [\n        'dataviz/chart/kendo-chart',\n        'dataviz/chart/chart'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'dataviz.chart',\n        name: 'Chart',\n        category: 'dataviz',\n        description: 'The Chart widget uses modern browser technologies to render high-quality data visualizations in the browser.',\n        depends: [\n            'data',\n            'userevents',\n            'drawing',\n            'dataviz.core',\n            'dataviz.themes'\n        ],\n        features: [{\n                id: 'dataviz.chart-pdf-export',\n                name: 'PDF export',\n                description: 'Export Chart as PDF',\n                depends: ['pdf']\n            }]\n    };\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}