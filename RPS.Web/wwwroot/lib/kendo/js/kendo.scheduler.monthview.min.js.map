{"version":3,"sources":["kendo.scheduler.monthview.js"],"names":["f","define","$","shiftArray","array","idx","slice","concat","firstVisibleMonthDay","date","calendarInfo","firstDay","firstVisibleDay","Date","getFullYear","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","getDay","kendo","setTime","MS_PER_DAY","isInDateRange","value","min","max","msValue","msMin","msMax","window","ui","SchedulerView","NS","extend","getDate","NUMBER_OF_ROWS","NUMBER_OF_COLUMNS","INVERSE_COLOR_CLASS","DAY_TEMPLATE","template","EVENT_WRAPPER_STRING","EVENT_TEMPLATE","CELL_INNER_SPACING","MORE_BUTTON_TEMPLATE","MonthGroupedView","Class","init","view","this","_view","_verticalRowCountForLevel","level","_rowCountForLevel","_horizontalGroupCountForLevel","_columnCountForLevel","_getCalendarRowsLength","cellsPerRow","cellCount","_createRows","start","startIdx","horizontalGroupCount","verticalGroupIndex","groupIdx","isVerticallyGrouped","_isVerticallyGrouped","html","_createRow","_adjustStartDate","addDays","_getContent","content","startDate","resources","_getTimeSlotByPosition","x","y","groupIndex","group","groups","daySlotByPosition","_nextSlotStartDate","nextDay","_createRowsLayout","rows","groupHeaderTemplate","_createVerticalColumnsLayout","columns","_createColumnsLayout","_verticalGroupCount","_horizontalGroupCount","_columnOffsetForResource","_positionMobileEvent","event","range","rangeCount","end","rangeIndex","occurrence","endDate","clone","head","tail","_createEventElement","_positionEvent","_addDaySlotCollections","groupCount","tableRows","rowMultiplier","rowIndex","collection","tableRow","cells","cellMultiplier","cellIndex","cell","columnCount","rowCount","addDaySlotCollection","children","setAttribute","addDaySlot","_changePeriodGroupIndex","reverse","length","_createResizeHint","left","startSlot","offsetLeft","top","offsetTop","width","innerWidth","height","clientHeight","hint","fn","call","_appendResizeHint","_createMoveHint","endSlot","css","firstChildHeight","options","eventHeight","index","addClass","inverseColor","_appendMoveHint","MonthGroupedByDateView","verticalStart","dateIdx","_groupCount","isLastRow","cellIdx","_createDateLayout","dataIndex","obj","resource","configuration","data","dataSource","text","htmlEncode","getter","dataTextField","color","dataColorField","field","title","name","dataValueField","className","push","subColumns","i","currentSlot","dateRange","startIndex","endIndex","_slots","daySlotRanges","dateIndex","currentTableIndex","currentCellIndex","currentGroupIndex","_daySlotCollections","vertical","selectionGroupIndex","slotIdx","slot","offsetWidth","offsetHeight","scheduler","MonthView","element","isGroupedByDate","adaptiveSlotHeight","that","eventsPerDay","moreButtonHeight","_groupedView","_getGroupedView","_isGroupedByDate","Error","_templates","_editable","_renderLayout","_groups","_updateDirection","selection","ranges","multiple","isSameSlot","isSameCollection","updateDirection","collectionIndex","backward","_changeDate","previous","collections","slotIndex","_getCollections","daySlotCollectionCount","_getNextHorizontalRange","method","horizontalRange","isVertical","_getNextVerticalRange","verticalRange","_changeViewPeriod","newStart","newEnd","pad","_isInRange","events","_continuousSlot","continuousSlot","_changeGroupContinuously","lastGroupIndex","_normalizeHorizontalSelection","_normalizeVerticalSelection","settings","Template","templateSettings","eventTemplate","_eventTmpl","dayTemplate","dateForTitle","format","selectedDateFormat","_firstDayOfMonth","_lastDayOfMonth","shortDateForTitle","selectedShortDateFormat","mobileDateForTitle","selectedMobileDateFormat","nextDate","previousDate","previousDay","_startDate","_endDate","firstDayOfMonth","lastDayOfMonth","createLayout","_layout","_content","_initSlotHeight","refreshLayout","on","e","offset","currentTarget","_slotByPosition","preventDefault","trigger","_footer","editable","_isMobile","_touchEditable","_mouseEditable","uid","closest","attr","create","resourceInfo","_resourceBySlot","eventInfo","isAllDay","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","useClickAsTap","browser","edge","filter","tap","_scrolling","target","selectionByElement","columnLevel","columnLevels","rowLevel","rowLevels","verticalGroupIdx","verticalGroupCount","groupedView","groupedResources","_createCalendar","find","_calcSlotHeight","eventSpacing","firstCell","dateHeader","firstChild","Math","round","rowHeight","isMobile","table","_adjustSlotHeight","weeks","_canAdjustSlotHeight","forEach","week","_events","eventIndex","slots","firstSlot","weekOffsetTop","weekHeight","eventMeta","actualEventCount","meta","adjSlot","adjMeta","indexOf","dirty","sort","first","second","order","slotHeight","firstChildTop","style","more","parentNode","bind","calendarRowsLength","rowIdx","weekStartDates","_slotIndices","_weekStartDates","classes","isToday","getTime","inner","weekDayNames","days","namesShort","map","names","showDelete","destroy","resizable","resize","ns","eventResources","messages","angular","elements","dataItem","_isInDateSlot","slotStart","slotEnd","lastSlot","startTime","toUtcTime","endTime","_slotIndex","slotRange","eventCount","container","collidingEvents","createRows","at","appendChild","addEvent","_continuousEvents","rightOffset","rowEvents","eventTop","j","eventLength","_collectionIndex","_startSlotIndex","_startSlot","clientWidth","parseInt","appendTo","_inverseEventColor","outerHeight","scrollTop","scrollLeft","ceil","_resizeHint","add","_updateResizeHint","_removeResizeHint","toString","timezone","toLocalDate","last","_updateMoveHint","distance","duration","_removeMoveHint","_moveHint","getElementsByTagName","_addResourceView","MS_PER_HOUR","render","remove","Query","dir","toArray","_renderGroups","_renderEvents","slotRanges","rangeStart","rangeEnd","setDate","middle","itemIdx","tmp","_resourceValue","operator","groupEqFilter","removeClass","off","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.scheduler.monthview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.monthview', ['kendo.scheduler.view'], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.monthview',\n        name: 'Scheduler Month View',\n        category: 'web',\n        description: 'The Scheduler Month View',\n        depends: ['scheduler.view'],\n        hidden: true\n    };\n    (function ($) {\n        var kendo = window.kendo, ui = kendo.ui, SchedulerView = ui.SchedulerView, NS = '.kendoMonthView', extend = $.extend, getDate = kendo.date.getDate, MS_PER_DAY = kendo.date.MS_PER_DAY, NUMBER_OF_ROWS = 6, NUMBER_OF_COLUMNS = 7, INVERSE_COLOR_CLASS = 'k-event-inverse', DAY_TEMPLATE = kendo.template('<span class=\"k-link k-nav-day\">#:kendo.toString(date, \"dd\")#</span>'), EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" data-#=ns#uid=\"#=uid#\"' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color #; border-color: #=resources[0].color#\"' + 'class=\"k-event\"' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if (data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-60-left\"></span>' + '#}#' + '# if (data.isException()) {#' + '<span class=\"k-icon k-i-non-recurrence\"></span>' + '# } else if (data.isRecurring()) {#' + '<span class=\"k-icon k-i-reload\"></span>' + '#}#' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\" title=\"${data.messages.destroy}\" aria-label=\"${data.messages.destroy}\"><span class=\"k-icon k-i-close\"></span></a>' + '#}#' + '# if (data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-60-right\"></span>' + '#}#' + '</span>' + '# if (resizable && !data.tail && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-w\"></span>' + '#}#' + '# if (resizable && !data.head && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-e\"></span>' + '#}#' + '</div>', EVENT_TEMPLATE = kendo.template('<div title=\"#=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template\">#:title#</div>' + '</div>');\n        var CELL_INNER_SPACING = 2;\n        var MORE_BUTTON_TEMPLATE = kendo.template('<div style=\"width:#=width#px;left:#=left#px;top:#=top#px\" class=\"k-more-events k-button\"><span class=\"k-icon k-i-more-horizontal\"></span></div>');\n        var MonthGroupedView = kendo.Class.extend({\n            init: function (view) {\n                this._view = view;\n            },\n            _verticalRowCountForLevel: function (level) {\n                var view = this._view;\n                return view._rowCountForLevel(level);\n            },\n            _horizontalGroupCountForLevel: function (level) {\n                var view = this._view;\n                return view._columnCountForLevel(level);\n            },\n            _getCalendarRowsLength: function (cellsPerRow, cellCount) {\n                return cellCount / cellsPerRow;\n            },\n            _createRows: function (start, startIdx, horizontalGroupCount, verticalGroupIndex) {\n                var view = this._view;\n                var cellsPerRow = NUMBER_OF_COLUMNS;\n                var isVerticallyGrouped = view._isVerticallyGrouped();\n                var html = '';\n                for (var groupIdx = 0; groupIdx < horizontalGroupCount; groupIdx++) {\n                    html += view._createRow(start, startIdx, cellsPerRow, isVerticallyGrouped ? verticalGroupIndex : groupIdx);\n                }\n                return html;\n            },\n            _adjustStartDate: function (start) {\n                return kendo.date.addDays(start, NUMBER_OF_COLUMNS);\n            },\n            _getContent: function (content, startDate, resources) {\n                return content({\n                    date: startDate,\n                    resources: resources\n                });\n            },\n            _getTimeSlotByPosition: function (x, y, groupIndex) {\n                var group = this._view.groups[groupIndex];\n                return group.daySlotByPosition(x, y);\n            },\n            _nextSlotStartDate: function (startDate) {\n                return kendo.date.nextDay(startDate);\n            },\n            _createRowsLayout: function (resources, rows, groupHeaderTemplate) {\n                var view = this._view;\n                return view._createRowsLayout(resources, rows, groupHeaderTemplate);\n            },\n            _createVerticalColumnsLayout: function (resources, rows, groupHeaderTemplate, columns) {\n                return columns;\n            },\n            _createColumnsLayout: function (resources, columns, groupHeaderTemplate) {\n                var view = this._view;\n                return view._createColumnsLayout(resources, columns, groupHeaderTemplate);\n            },\n            _verticalGroupCount: function (level) {\n                var view = this._view;\n                return view._rowCountForLevel(level);\n            },\n            _horizontalGroupCount: function (level) {\n                var view = this._view;\n                return view._columnCountForLevel(level) / view._columnOffsetForResource(level);\n            },\n            _positionMobileEvent: function (event, group, range, rangeCount, start, end, rangeIndex) {\n                var view = this._view;\n                if (rangeCount > 1) {\n                    if (rangeIndex === 0) {\n                        end = range.end.endDate();\n                    } else if (rangeIndex == rangeCount - 1) {\n                        start = range.start.startDate();\n                    } else {\n                        start = range.start.startDate();\n                        end = range.end.endDate();\n                    }\n                }\n                var occurrence = event.clone({\n                    start: start,\n                    end: end,\n                    head: range.head,\n                    tail: range.tail\n                });\n                view._positionMobileEvent(range, view._createEventElement(occurrence), group);\n            },\n            _positionEvent: function (event, group, range, rangeCount, start, end, rangeIndex) {\n                var view = this._view;\n                if (rangeCount > 1) {\n                    if (rangeIndex === 0) {\n                        end = range.end.endDate();\n                    } else if (rangeIndex == rangeCount - 1) {\n                        start = range.start.startDate();\n                    } else {\n                        start = range.start.startDate();\n                        end = range.end.endDate();\n                    }\n                }\n                var occurrence = event.clone({\n                    start: start,\n                    end: end,\n                    head: range.head,\n                    tail: range.tail\n                });\n                view._positionEvent(range, view._createEventElement(occurrence), group);\n            },\n            _addDaySlotCollections: function (groupCount, tableRows, startDate) {\n                var view = this._view;\n                var columnCount = NUMBER_OF_COLUMNS;\n                var rowCount = NUMBER_OF_ROWS;\n                for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                    var cellCount = 0;\n                    var rowMultiplier = 0;\n                    if (view._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n                    for (var rowIndex = rowMultiplier * rowCount; rowIndex < (rowMultiplier + 1) * rowCount; rowIndex++) {\n                        var group = view.groups[groupIndex];\n                        var collection = group.addDaySlotCollection(kendo.date.addDays(startDate, cellCount), kendo.date.addDays(startDate, cellCount + columnCount));\n                        var tableRow = tableRows[rowIndex];\n                        var cells = tableRow.children;\n                        var cellMultiplier = 0;\n                        tableRow.setAttribute('role', 'row');\n                        if (!view._isVerticallyGrouped()) {\n                            cellMultiplier = groupIndex;\n                        }\n                        for (var cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                            var cell = cells[cellIndex];\n                            view.addDaySlot(collection, cell, startDate, cellCount);\n                            cellCount++;\n                        }\n                    }\n                }\n            },\n            _changePeriodGroupIndex: function (reverse) {\n                var view = this._view;\n                return reverse ? view.groups.length - 1 : 0;\n            },\n            _createResizeHint: function (range) {\n                var view = this._view;\n                var left = range.startSlot().offsetLeft;\n                var top = range.start.offsetTop;\n                var width = range.innerWidth();\n                var height = range.start.clientHeight - 2;\n                var hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n                view._appendResizeHint(hint);\n            },\n            _createMoveHint: function (range, event) {\n                var view = this._view;\n                var startSlot = range.startSlot();\n                var endSlot = range.endSlot();\n                var hint = view._createEventElement(event.clone({\n                    head: range.head,\n                    tail: range.tail\n                }));\n                hint.css({\n                    left: startSlot.offsetLeft + 2,\n                    top: startSlot.offsetTop + startSlot.firstChildHeight,\n                    height: view.options.eventHeight === 'auto' ? 25 : view.options.eventHeight,\n                    width: range.innerWidth() - (startSlot.index !== endSlot.index ? 3 : 2)\n                });\n                hint.addClass('k-event-drag-hint');\n                if (event.inverseColor) {\n                    hint.addClass(INVERSE_COLOR_CLASS);\n                }\n                view._appendMoveHint(hint);\n            }\n        });\n        var MonthGroupedByDateView = kendo.Class.extend({\n            init: function (view) {\n                this._view = view;\n            },\n            _verticalRowCountForLevel: function () {\n                return 1;\n            },\n            _horizontalGroupCountForLevel: function (level) {\n                var view = this._view;\n                return view._columnCountForLevel(level + 1) / NUMBER_OF_COLUMNS;\n            },\n            _createRows: function (start, startIdx, horizontalGroupCount) {\n                var view = this._view;\n                var cellsPerRow = NUMBER_OF_COLUMNS;\n                var isVerticallyGrouped = view._isVerticallyGrouped();\n                var html = '';\n                var dateIdx = 0;\n                if (isVerticallyGrouped) {\n                    var verticalStart = new Date(start);\n                    var groupCount = view._groupCount();\n                    for (dateIdx; dateIdx < NUMBER_OF_ROWS; dateIdx++) {\n                        html += view._createRow(verticalStart, startIdx, groupCount, dateIdx);\n                        verticalStart = kendo.date.addDays(verticalStart, cellsPerRow);\n                    }\n                    start = kendo.date.nextDay(start);\n                } else {\n                    for (dateIdx; dateIdx < cellsPerRow; dateIdx++) {\n                        html += view._createRow(start, startIdx, horizontalGroupCount, dateIdx);\n                        start = kendo.date.nextDay(start);\n                    }\n                    start = kendo.date.addDays(start, cellsPerRow);\n                }\n                return html;\n            },\n            _adjustStartDate: function (start, isLastRow) {\n                var view = this._view;\n                var isVerticallyGrouped = view._isVerticallyGrouped();\n                if (isVerticallyGrouped) {\n                    if (isLastRow) {\n                        return kendo.date.addDays(start, NUMBER_OF_COLUMNS * (NUMBER_OF_ROWS - 1) + 1);\n                    } else {\n                        return kendo.date.nextDay(start);\n                    }\n                }\n                return kendo.date.addDays(start, NUMBER_OF_COLUMNS);\n            },\n            _getContent: function (content, startDate, resources, cellIdx) {\n                if (cellIdx === 0) {\n                    return content({\n                        date: startDate,\n                        resources: resources\n                    });\n                }\n                return '';\n            },\n            _getTimeSlotByPosition: function (x, y, groupIndex) {\n                var group = this._view.groups[groupIndex];\n                return group.daySlotByPosition(x, y, true);\n            },\n            _nextSlotStartDate: function (startDate) {\n                return startDate;\n            },\n            _getCalendarRowsLength: function () {\n                var view = this._view;\n                var isVerticallyGrouped = view._isVerticallyGrouped();\n                return isVerticallyGrouped ? NUMBER_OF_COLUMNS : NUMBER_OF_ROWS;\n            },\n            _createRowsLayout: function (resources, rows, groupHeaderTemplate, columns) {\n                var view = this._view;\n                return view._createDateLayout(columns, null, false);\n            },\n            _createVerticalColumnsLayout: function (resources, rows, groupHeaderTemplate) {\n                var view = this._view;\n                var resource = resources[0];\n                var configuration = [];\n                var data = resource.dataSource.view();\n                for (var dataIndex = 0; dataIndex < data.length * NUMBER_OF_ROWS; dataIndex++) {\n                    var obj = {\n                        text: groupHeaderTemplate({\n                            text: kendo.htmlEncode(kendo.getter(resource.dataTextField)(data[dataIndex % data.length])),\n                            color: kendo.getter(resource.dataColorField)(data[dataIndex % data.length]),\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            value: kendo.getter(resource.dataValueField)(data[dataIndex % data.length])\n                        }),\n                        className: 'k-slot-cell'\n                    };\n                    obj.columns = view._createColumnsLayout(resources.slice(1), null, groupHeaderTemplate);\n                    configuration.push(obj);\n                }\n                return configuration;\n            },\n            _createColumnsLayout: function (resources, columns, groupHeaderTemplate, subColumns) {\n                var view = this._view;\n                return view._createColumnsLayout(resources, columns, groupHeaderTemplate, subColumns, true);\n            },\n            _verticalGroupCount: function (level) {\n                var view = this._view;\n                return view._columnCountForLevel(level) / NUMBER_OF_ROWS;\n            },\n            _horizontalGroupCount: function (level) {\n                var view = this._view;\n                return view._columnCountForLevel(level) / NUMBER_OF_COLUMNS;\n            },\n            _positionMobileEvent: function (event, group, range, rangeCount, start, end) {\n                var view = this._view;\n                var startIndex = range.start.index;\n                var endIndex = range.end.index;\n                for (var i = range.start.index; i <= range.end.index; i++) {\n                    var currentSlot = range.collection._slots[i];\n                    var dateRange = group.daySlotRanges(currentSlot.start, currentSlot.start, true)[0];\n                    var occurrence = event.clone({\n                        start: i === startIndex ? start : currentSlot.startDate(),\n                        end: i === endIndex ? end : currentSlot.endDate(),\n                        head: i !== endIndex || range.head,\n                        tail: i !== startIndex || range.tail\n                    });\n                    view._positionMobileEvent(dateRange, view._createEventElement(occurrence), group);\n                }\n            },\n            _positionEvent: function (event, group, range, rangeCount, start, end) {\n                var view = this._view;\n                var startIndex = range.start.index;\n                var endIndex = range.end.index;\n                for (var i = range.start.index; i <= range.end.index; i++) {\n                    var currentSlot = range.collection._slots[i];\n                    var dateRange = group.daySlotRanges(currentSlot.start, currentSlot.start, true)[0];\n                    var occurrence = event.clone({\n                        start: i === startIndex ? start : currentSlot.startDate(),\n                        end: i === endIndex ? end : currentSlot.endDate(),\n                        head: i !== endIndex || range.head,\n                        tail: i !== startIndex || range.tail\n                    });\n                    view._positionEvent(dateRange, view._createEventElement(occurrence), group);\n                }\n            },\n            _addDaySlotCollections: function (groupCount, tableRows, startDate) {\n                var view = this._view;\n                var columnCount = NUMBER_OF_COLUMNS;\n                var rowCount = NUMBER_OF_ROWS;\n                var isVerticallyGrouped = view._isVerticallyGrouped();\n                for (var dateIndex = 0; dateIndex < columnCount; dateIndex++) {\n                    for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n                        var groupIndex = 0;\n                        var currentTableIndex = isVerticallyGrouped ? dateIndex : rowIndex;\n                        var tableRow = tableRows[currentTableIndex];\n                        var cells = tableRow.children;\n                        var cellMultiplier = 0;\n                        tableRow.setAttribute('role', 'row');\n                        if (!view._isVerticallyGrouped()) {\n                            cellMultiplier = dateIndex;\n                        }\n                        for (var cellIndex = cellMultiplier * groupCount; cellIndex < (cellMultiplier + 1) * groupCount; cellIndex++) {\n                            var cellCount = rowIndex * columnCount + dateIndex;\n                            var currentCellIndex = isVerticallyGrouped ? cellIndex + rowIndex * groupCount : cellIndex;\n                            var cell = cells[currentCellIndex];\n                            var currentGroupIndex = isVerticallyGrouped ? cellIndex : groupIndex;\n                            var group = view.groups[currentGroupIndex];\n                            var collection;\n                            if (dateIndex === 0) {\n                                collection = group.addDaySlotCollection(kendo.date.addDays(startDate, cellCount), kendo.date.addDays(startDate, cellCount + columnCount));\n                            } else {\n                                collection = group._daySlotCollections[rowIndex];\n                            }\n                            view.addDaySlot(collection, cell, startDate, cellCount);\n                            groupIndex++;\n                        }\n                    }\n                }\n            },\n            _changePeriodGroupIndex: function (reverse, vertical, selectionGroupIndex) {\n                var view = this._view;\n                if (vertical && view._isVerticallyGrouped()) {\n                    return reverse ? view.groups.length - 1 : 0;\n                }\n                return selectionGroupIndex;\n            },\n            _createResizeHint: function (range) {\n                var view = this._view;\n                var left, top, width, height, hint;\n                if (view._isVerticallyGrouped()) {\n                    left = range.startSlot().offsetLeft;\n                    top = range.start.offsetTop;\n                    width = range.startSlot().offsetWidth;\n                    height = range.endSlot().offsetTop + range.startSlot().offsetHeight - range.startSlot().offsetTop - 2;\n                    hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n                    view._appendResizeHint(hint);\n                } else {\n                    for (var slotIdx = range.startSlot().index; slotIdx <= range.endSlot().index; slotIdx++) {\n                        var slot = range.collection._slots[slotIdx];\n                        left = slot.offsetLeft;\n                        top = slot.offsetTop;\n                        width = slot.offsetWidth;\n                        height = slot.offsetHeight - 2;\n                        hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n                        view._appendResizeHint(hint);\n                    }\n                }\n            },\n            _createMoveHint: function (range, event) {\n                var view = this._view;\n                var startSlot = range.startSlot();\n                var endSlot = range.endSlot();\n                for (var slotIdx = startSlot.index; slotIdx <= endSlot.index; slotIdx++) {\n                    var slot = range.collection._slots[slotIdx];\n                    var hint = view._createEventElement(event.clone({\n                        head: range.head,\n                        tail: range.tail\n                    }));\n                    hint.css({\n                        left: slot.offsetLeft,\n                        top: slot.offsetTop + slot.firstChildHeight,\n                        height: view.options.eventHeight === 'auto' ? 25 : view.options.eventHeight,\n                        width: slot.offsetWidth - 2\n                    });\n                    hint.addClass('k-event-drag-hint');\n                    if (event.inverseColor) {\n                        hint.addClass(INVERSE_COLOR_CLASS);\n                    }\n                    view._appendMoveHint(hint);\n                }\n            }\n        });\n        kendo.ui.scheduler.MonthGroupedView = MonthGroupedView;\n        kendo.ui.scheduler.MonthGroupedByDateView = MonthGroupedByDateView;\n        ui.MonthView = SchedulerView.extend({\n            init: function (element, options) {\n                var that = this;\n                if (options.eventsPerDay === 0) {\n                    options.eventsPerDay = 1;\n                }\n                if (options.eventHeight === 0) {\n                    options.eventHeight = 1;\n                }\n                if (options.moreButtonHeight === 0) {\n                    options.moreButtonHeight = 1;\n                }\n                if (typeof options.eventHeight === 'string' && options.eventHeight !== 'auto') {\n                    options.eventHeight = 25;\n                }\n                if (options.eventHeight === 'auto') {\n                    options.adaptiveSlotHeight = true;\n                }\n                SchedulerView.fn.init.call(that, element, options);\n                that._groupedView = that._getGroupedView();\n                var isGroupedByDate = this._isGroupedByDate();\n                var adaptiveSlotHeight = this.options.adaptiveSlotHeight;\n                var eventHeight = this.options.eventHeight;\n                if (isGroupedByDate === true && adaptiveSlotHeight === true) {\n                    throw new Error('Incompatible options: adaptive slot height and date grouping!');\n                }\n                if (isGroupedByDate === true && eventHeight === 'auto') {\n                    throw new Error('Incompatible options: auto event height and date grouping!');\n                }\n                that.title = that.options.title;\n                that._templates();\n                that._editable();\n                that._renderLayout(that.options.date);\n                that._groups();\n            },\n            name: 'month',\n            _getGroupedView: function () {\n                if (this._isGroupedByDate()) {\n                    return new kendo.ui.scheduler.MonthGroupedByDateView(this);\n                } else {\n                    return new kendo.ui.scheduler.MonthGroupedView(this);\n                }\n            },\n            _updateDirection: function (selection, ranges, multiple, reverse, vertical) {\n                if (multiple) {\n                    var startSlot = ranges[0].start;\n                    var endSlot = ranges[ranges.length - 1].end;\n                    var isSameSlot = startSlot.index === endSlot.index;\n                    var isSameCollection = startSlot.collectionIndex === endSlot.collectionIndex;\n                    var updateDirection;\n                    if (vertical) {\n                        updateDirection = isSameSlot && isSameCollection || isSameCollection;\n                    } else {\n                        updateDirection = isSameSlot && isSameCollection;\n                    }\n                    if (updateDirection) {\n                        selection.backward = reverse;\n                    }\n                }\n            },\n            _changeDate: function (selection, slot, previous) {\n                var group = this.groups[selection.groupIndex];\n                var collections, index;\n                if (previous) {\n                    collections = group._getCollections(group.daySlotCollectionCount());\n                    index = slot.collectionIndex - 1;\n                    if (index >= 0) {\n                        return collections[index]._slots[collections[index]._slots.length - 1];\n                    }\n                } else {\n                    collections = group._getCollections(group.daySlotCollectionCount());\n                    index = slot.collectionIndex + 1;\n                    var slotIndex = 0;\n                    if (collections[index] && collections[index]._slots[slotIndex]) {\n                        return collections[index]._slots[slotIndex];\n                    }\n                }\n            },\n            _getNextHorizontalRange: function (group, method, horizontalRange) {\n                var isVertical = this._isVerticallyGrouped();\n                horizontalRange.startSlot = group[method](horizontalRange.startSlot, isVertical);\n                horizontalRange.endSlot = group[method](horizontalRange.endSlot, isVertical);\n                return horizontalRange;\n            },\n            _getNextVerticalRange: function (group, method, verticalRange, multiple) {\n                var isVertical = this._isVerticallyGrouped() && this._isGroupedByDate();\n                verticalRange.startSlot = group[method](verticalRange.startSlot, multiple, isVertical);\n                verticalRange.endSlot = group[method](verticalRange.endSlot, multiple, isVertical);\n                return verticalRange;\n            },\n            _changeViewPeriod: function (selection, reverse, vertical) {\n                var pad = vertical ? 7 : 1;\n                var newStart, newEnd;\n                if (reverse) {\n                    pad *= -1;\n                }\n                newStart = kendo.date.addDays(selection.start, pad);\n                newEnd = kendo.date.addDays(selection.end, pad);\n                if (this._isInRange(newStart, newEnd)) {\n                    return false;\n                }\n                selection.start = newStart;\n                selection.end = newEnd;\n                if (!vertical || vertical && this._isVerticallyGrouped()) {\n                    selection.groupIndex = this._groupedView._changePeriodGroupIndex(reverse, vertical, selection.groupIndex);\n                }\n                selection.events = [];\n                return true;\n            },\n            _continuousSlot: function (selection, ranges, reverse) {\n                var index = selection.backward ? 0 : ranges.length - 1;\n                var group = this.groups[selection.groupIndex];\n                return group.continuousSlot(ranges[index].start, reverse);\n            },\n            _changeGroupContinuously: function (selection, continuousSlot, multiple, reverse) {\n                if (!multiple) {\n                    var groupIndex = selection.groupIndex;\n                    var lastGroupIndex = this.groups.length - 1;\n                    var vertical = this._isVerticallyGrouped();\n                    var group = this.groups[groupIndex];\n                    if (!continuousSlot && vertical) {\n                        continuousSlot = group[reverse ? 'lastSlot' : 'firstSlot']();\n                        groupIndex += reverse ? -1 : 1;\n                    } else if (continuousSlot && !vertical) {\n                        groupIndex = reverse ? lastGroupIndex : 0;\n                    }\n                    if (groupIndex < 0 || groupIndex > lastGroupIndex) {\n                        groupIndex = reverse ? lastGroupIndex : 0;\n                        continuousSlot = null;\n                    }\n                    selection.groupIndex = groupIndex;\n                }\n                return continuousSlot;\n            },\n            _normalizeHorizontalSelection: function (selection, ranges, reverse) {\n                var slot;\n                if (reverse) {\n                    slot = ranges[0].start;\n                } else {\n                    slot = ranges[ranges.length - 1].end;\n                }\n                return slot;\n            },\n            _normalizeVerticalSelection: function (selection, ranges) {\n                var slot;\n                if (selection.backward) {\n                    slot = ranges[0].start;\n                } else {\n                    slot = ranges[ranges.length - 1].end;\n                }\n                return slot;\n            },\n            _templates: function () {\n                var options = this.options, settings = extend({}, kendo.Template, options.templateSettings);\n                this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n                this.dayTemplate = kendo.template(options.dayTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n            dateForTitle: function () {\n                return kendo.format(this.options.selectedDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n            },\n            shortDateForTitle: function () {\n                return kendo.format(this.options.selectedShortDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n            },\n            mobileDateForTitle: function () {\n                return kendo.format(this.options.selectedMobileDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n            },\n            nextDate: function () {\n                return kendo.date.nextDay(this._lastDayOfMonth);\n            },\n            previousDate: function () {\n                return kendo.date.previousDay(this._firstDayOfMonth);\n            },\n            startDate: function () {\n                return this._startDate;\n            },\n            endDate: function () {\n                return this._endDate;\n            },\n            _renderLayout: function (date) {\n                var that = this;\n                this._firstDayOfMonth = kendo.date.firstDayOfMonth(date);\n                this._lastDayOfMonth = kendo.date.lastDayOfMonth(date);\n                this._startDate = firstVisibleMonthDay(date, this.calendarInfo());\n                this.createLayout(this._layout());\n                this._content();\n                this._initSlotHeight();\n                this.refreshLayout();\n                this.content.on('click' + NS, '.k-nav-day,.k-more-events', function (e) {\n                    var offset = $(e.currentTarget).offset();\n                    var slot = that._slotByPosition(offset.left, offset.top);\n                    e.preventDefault();\n                    that.trigger('navigate', {\n                        view: 'day',\n                        date: slot.startDate()\n                    });\n                });\n                this._footer();\n            },\n            _editable: function () {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n            _mouseEditable: function () {\n                var that = this;\n                that.element.on('click' + NS, '.k-scheduler-monthview .k-event a:has(.k-i-close)', function (e) {\n                    that.trigger('remove', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                    e.preventDefault();\n                });\n                if (that.options.editable.create !== false) {\n                    that.element.on('dblclick' + NS, '.k-scheduler-monthview .k-scheduler-content td', function (e) {\n                        var offset = $(e.currentTarget).offset();\n                        var slot = that._slotByPosition(offset.left, offset.top);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger('add', {\n                                eventInfo: extend({\n                                    isAllDay: true,\n                                    start: slot.startDate(),\n                                    end: slot.startDate()\n                                }, resourceInfo)\n                            });\n                        }\n                        e.preventDefault();\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that.element.on('dblclick' + NS, '.k-scheduler-monthview .k-event', function (e) {\n                        that.trigger('edit', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                        e.preventDefault();\n                    });\n                }\n            },\n            _touchEditable: function () {\n                var that = this;\n                var threshold = 0;\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: '.k-scheduler-monthview .k-scheduler-content td',\n                        tap: function (e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var offset = $(e.target).offset();\n                            var slot = that._slotByPosition(offset.left, offset.top);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({\n                                        isAllDay: true,\n                                        start: slot.startDate(),\n                                        end: slot.startDate()\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n            selectionByElement: function (cell) {\n                var offset = $(cell).offset();\n                return this._slotByPosition(offset.left, offset.top);\n            },\n            _columnCountForLevel: function (level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n            _rowCountForLevel: function (level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n            _content: function () {\n                var html = '<tbody>';\n                var verticalGroupCount = 1;\n                var groupedView = this._groupedView;\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    if (this._isVerticallyGrouped()) {\n                        verticalGroupCount = groupedView._verticalRowCountForLevel(resources.length - 1);\n                    }\n                }\n                for (var verticalGroupIdx = 0; verticalGroupIdx < verticalGroupCount; verticalGroupIdx++) {\n                    html += this._createCalendar(verticalGroupIdx);\n                }\n                html += '</tbody>';\n                this.content.find('table').html(html);\n            },\n            _calcSlotHeight: function (eventsPerDay) {\n                var options = this.options;\n                var eventHeight = options.eventHeight;\n                var eventSpacing = options.eventSpacing;\n                var moreButtonHeight = options.moreButtonHeight;\n                var firstCell = this.content.find('table tr td')[0];\n                var dateHeader = firstCell.firstChild;\n                if (eventHeight === 'auto') {\n                    return undefined;\n                }\n                return Math.round(firstCell.offsetHeight - firstCell.clientHeight + dateHeader.offsetTop + dateHeader.offsetHeight + CELL_INNER_SPACING + eventsPerDay * eventHeight + (eventsPerDay - 1) * eventSpacing + (CELL_INNER_SPACING + moreButtonHeight) + CELL_INNER_SPACING);\n            },\n            _initSlotHeight: function () {\n                var options = this.options;\n                var eventsPerDay = options.eventsPerDay;\n                var eventHeight = options.eventHeight;\n                var isMobile = this._isMobile();\n                var table = this.content.find('table');\n                var rowHeight;\n                if (isMobile) {\n                    return;\n                }\n                if (typeof eventHeight === 'number') {\n                    table.addClass('k-scheduler-table-auto');\n                    rowHeight = this._calcSlotHeight(eventsPerDay);\n                    table.find('tr').height(rowHeight);\n                }\n            },\n            _adjustSlotHeight: function (group) {\n                var options = this.options;\n                var eventHeight = options.eventHeight;\n                var eventSpacing = options.eventSpacing;\n                var moreButtonHeight = options.moreButtonHeight;\n                if (this._canAdjustSlotHeight !== true) {\n                    return;\n                }\n                var weeks = group._daySlotCollections;\n                this.content.find('table').addClass('k-scheduler-table-auto');\n                weeks.forEach(function (week) {\n                    var events = week._events;\n                    var eventIndex = 0;\n                    var slots = week._slots;\n                    var firstSlot = slots[0];\n                    var weekOffsetTop = firstSlot.element.offsetTop;\n                    var weekHeight = 0;\n                    slots.forEach(function (slot) {\n                        if (!slot.eventMeta) {\n                            slot.eventMeta = [];\n                            slot.actualEventCount = 0;\n                        } else {\n                            slot.actualEventCount = slot.eventMeta.length;\n                        }\n                    });\n                    slots.forEach(function (slot, slotIndex) {\n                        slot.eventMeta.forEach(function (meta, eventIndex) {\n                            if (meta.startIndex !== slotIndex) {\n                                return;\n                            }\n                            if (meta.startIndex === meta.endIndex) {\n                                return;\n                            }\n                            slots.slice(slotIndex, meta.endIndex + 1).forEach(function (adjSlot) {\n                                var adjMeta = adjSlot.eventMeta;\n                                if (adjMeta.indexOf(meta) > -1) {\n                                    return;\n                                }\n                                adjMeta[adjMeta.length] = slot.eventMeta[eventIndex];\n                                adjSlot.actualEventCount = adjMeta.length;\n                                adjSlot.dirty = true;\n                            });\n                        });\n                        if (slot.dirty === true) {\n                            slot.eventMeta.sort(function (first, second) {\n                                return first.order - second.order;\n                            });\n                            delete slot.dirty;\n                        }\n                    });\n                    if (eventHeight === 'auto') {\n                        slots.forEach(function (slot, slotIndex) {\n                            var slotHeight = slot.firstChildTop + slot.firstChildHeight + CELL_INNER_SPACING;\n                            slot.eventMeta.forEach(function (meta, eventIndex) {\n                                meta.top = Math.max(meta.top, weekOffsetTop + slotHeight);\n                                slotHeight = meta.top - weekOffsetTop + eventSpacing + meta.height;\n                            });\n                        });\n                    }\n                    slots.forEach(function (slot, slotIndex) {\n                        var slotHeight = slot.firstChildTop + slot.firstChildHeight + CELL_INNER_SPACING;\n                        slot.eventMeta.forEach(function (meta) {\n                            meta.top = Math.max(meta.top, weekOffsetTop + slotHeight);\n                            slotHeight = meta.top - weekOffsetTop + eventSpacing + meta.height;\n                            if (meta.startIndex === slotIndex) {\n                                events[eventIndex].element[0].style.top = meta.top + 'px';\n                                eventIndex++;\n                            }\n                        });\n                        if (slot.eventMeta.length > 0) {\n                            slotHeight -= eventSpacing;\n                            slotHeight += CELL_INNER_SPACING;\n                        } else {\n                            slotHeight += eventHeight === 'auto' ? 25 : eventHeight;\n                        }\n                        if (slot.more) {\n                            slot.more[0].style.top = weekOffsetTop + slotHeight + 'px';\n                            slotHeight += CELL_INNER_SPACING + moreButtonHeight;\n                        }\n                        weekHeight = Math.max(weekHeight, slotHeight + 1);\n                    });\n                    firstSlot.element.parentNode.style.height = weekHeight + 'px';\n                    slots.forEach(function (slot) {\n                        slot.offsetTop = weekOffsetTop;\n                        slot.offsetHeight = weekHeight;\n                        slot.clientHeight = weekHeight - 1;\n                    });\n                }.bind(this));\n            },\n            _createCalendar: function (verticalGroupIndex) {\n                var start = this.startDate();\n                var cellCount = NUMBER_OF_COLUMNS * NUMBER_OF_ROWS;\n                var cellsPerRow = NUMBER_OF_COLUMNS;\n                var weekStartDates = [start];\n                var html = '';\n                var horizontalGroupCount = 1;\n                var isVerticallyGrouped = this._isVerticallyGrouped();\n                var groupedView = this._groupedView;\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    if (!isVerticallyGrouped) {\n                        horizontalGroupCount = groupedView._horizontalGroupCountForLevel(resources.length - 1);\n                    }\n                }\n                this._slotIndices = {};\n                var calendarRowsLength = groupedView._getCalendarRowsLength(cellsPerRow, cellCount);\n                for (var rowIdx = 0; rowIdx < calendarRowsLength; rowIdx++) {\n                    html += '<tr>';\n                    weekStartDates.push(start);\n                    var startIdx = rowIdx * cellsPerRow;\n                    html += groupedView._createRows(start, startIdx, horizontalGroupCount, verticalGroupIndex);\n                    start = groupedView._adjustStartDate(start, rowIdx === calendarRowsLength - 1);\n                    html += '</tr>';\n                }\n                this._weekStartDates = weekStartDates;\n                this._endDate = kendo.date.previousDay(start);\n                return html;\n            },\n            _createRow: function (startDate, startIdx, cellsPerRow, groupIndex) {\n                var that = this;\n                var min = that._firstDayOfMonth;\n                var max = that._lastDayOfMonth;\n                var content = that.dayTemplate;\n                var classes = '';\n                var html = '';\n                var groupedView = this._groupedView;\n                var resources = function () {\n                    return that._resourceBySlot({ groupIndex: groupIndex });\n                };\n                for (var cellIdx = 0; cellIdx < cellsPerRow; cellIdx++) {\n                    classes = '';\n                    if (kendo.date.isToday(startDate)) {\n                        classes += 'k-today';\n                    }\n                    if (!kendo.date.isInDateRange(startDate, min, max)) {\n                        classes += ' k-other-month';\n                    }\n                    html += '<td ';\n                    if (classes !== '') {\n                        html += 'class=\"' + classes + '\"';\n                    }\n                    html += '>';\n                    html += groupedView._getContent(content, startDate, resources, cellIdx);\n                    html += '</td>';\n                    that._slotIndices[getDate(startDate).getTime()] = startIdx + cellIdx;\n                    startDate = groupedView._nextSlotStartDate(startDate);\n                }\n                return html;\n            },\n            _layout: function () {\n                var calendarInfo = this.calendarInfo();\n                var weekDayNames = this._isMobile() ? calendarInfo.days.namesShort.map(function (name) {\n                    return name[0];\n                }) : calendarInfo.days.names;\n                var names = shiftArray(weekDayNames, calendarInfo.firstDay);\n                var columns = $.map(names, function (value) {\n                    return { text: value };\n                });\n                var resources = this.groupedResources;\n                var rows;\n                var groupedView = this._groupedView;\n                if (resources.length) {\n                    if (this._isVerticallyGrouped()) {\n                        var inner = [];\n                        for (var idx = 0; idx < 6; idx++) {\n                            inner.push({\n                                text: '<div>&nbsp;</div>',\n                                className: 'k-hidden k-slot-cell'\n                            });\n                        }\n                        rows = groupedView._createRowsLayout(resources, inner, this.groupHeaderTemplate, columns);\n                        columns = groupedView._createVerticalColumnsLayout(resources, inner, this.groupHeaderTemplate, columns);\n                    } else {\n                        columns = groupedView._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                    }\n                }\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n            _createEventElement: function (event) {\n                var options = this.options;\n                var editable = options.editable;\n                var isMobile = this._isMobile();\n                event.showDelete = editable && editable.destroy !== false && !isMobile;\n                event.resizable = editable && editable.resize !== false && !isMobile;\n                event.ns = kendo.ns;\n                event.resources = this.eventResources(event);\n                event.inverseColor = false;\n                event.messages = options.messages || { destroy: 'Delete' };\n                var element = $(this.eventTemplate(event));\n                this.angular('compile', function () {\n                    return {\n                        elements: element,\n                        data: [{ dataItem: event }]\n                    };\n                });\n                return element;\n            },\n            _isInDateSlot: function (event) {\n                var groups = this.groups[0];\n                var slotStart = groups.firstSlot().start;\n                var slotEnd = groups.lastSlot().end - 1;\n                var startTime = kendo.date.toUtcTime(event.start);\n                var endTime = kendo.date.toUtcTime(event.end);\n                return (isInDateRange(startTime, slotStart, slotEnd) || isInDateRange(endTime, slotStart, slotEnd) || isInDateRange(slotStart, startTime, endTime) || isInDateRange(slotEnd, startTime, endTime)) && (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay);\n            },\n            _slotIndex: function (date) {\n                return this._slotIndices[getDate(date).getTime()];\n            },\n            _positionMobileEvent: function (slotRange, element, group) {\n                var startSlot = slotRange.start;\n                if (slotRange.start.offsetLeft > slotRange.end.offsetLeft) {\n                    startSlot = slotRange.end;\n                }\n                var startIndex = slotRange.start.index;\n                var endIndex = startIndex;\n                var eventCount = 3;\n                var events = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n                events.push({\n                    element: element,\n                    start: startIndex,\n                    end: endIndex\n                });\n                var rows = SchedulerView.createRows(events);\n                var slot = slotRange.collection.at(startIndex);\n                var container = slot.container;\n                if (!container) {\n                    container = $(kendo.format('<div class=\"k-events-container\" style=\"top:{0};left:{1};width:{2}\"/>', startSlot.offsetTop + startSlot.firstChildTop + startSlot.firstChildHeight + 'px', startSlot.offsetLeft + 'px', startSlot.offsetWidth + 'px'));\n                    slot.container = container;\n                    this.content[0].appendChild(container[0]);\n                }\n                if (rows.length <= eventCount) {\n                    slotRange.addEvent({\n                        element: element,\n                        start: startIndex,\n                        end: endIndex,\n                        groupIndex: startSlot.groupIndex\n                    });\n                    group._continuousEvents.push({\n                        element: element,\n                        uid: element.attr(kendo.attr('uid')),\n                        start: slotRange.start,\n                        end: slotRange.end\n                    });\n                    container[0].appendChild(element[0]);\n                }\n            },\n            _positionEvent: function (slotRange, element, group) {\n                var eventHeight = this.options.eventHeight;\n                var eventSpacing = this.options.eventSpacing;\n                var startSlot = slotRange.start;\n                if (slotRange.start.offsetLeft > slotRange.end.offsetLeft) {\n                    startSlot = slotRange.end;\n                }\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n                var eventCount = startSlot.eventCount;\n                var events = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n                var rightOffset = startIndex !== endIndex ? 3 : 2;\n                events.push({\n                    element: element,\n                    start: startIndex,\n                    end: endIndex\n                });\n                var rows = SchedulerView.createRows(events);\n                for (var idx = 0, length = Math.min(rows.length, eventCount); idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    var eventTop = eventHeight === 'auto' ? '' : startSlot.offsetTop + startSlot.firstChildTop + startSlot.firstChildHeight + CELL_INNER_SPACING + idx * (eventHeight + eventSpacing) + 'px';\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        rowEvents[j].element[0].style.top = eventTop;\n                        rowEvents[j].element.attr(kendo.attr('order'), idx);\n                    }\n                }\n                if (rows.length > eventCount) {\n                    for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n                        var collection = slotRange.collection;\n                        var slot = collection.at(slotIndex);\n                        if (slot.more) {\n                            continue;\n                        }\n                        slot.more = $(MORE_BUTTON_TEMPLATE({\n                            ns: kendo.ns,\n                            start: slotIndex,\n                            end: slotIndex,\n                            width: slot.clientWidth - 2,\n                            left: slot.offsetLeft + 2,\n                            top: eventHeight === 'auto' ? '' : slot.offsetTop + slot.firstChildTop + slot.firstChildHeight + CELL_INNER_SPACING + eventCount * eventHeight + (eventCount - 1) * eventSpacing + CELL_INNER_SPACING\n                        }));\n                        this.content[0].appendChild(slot.more[0]);\n                    }\n                } else {\n                    slotRange.addEvent({\n                        element: element,\n                        start: startIndex,\n                        end: endIndex,\n                        groupIndex: startSlot.groupIndex\n                    });\n                    element[0].style.width = slotRange.innerWidth() - rightOffset + 'px';\n                    element[0].style.left = startSlot.offsetLeft + 2 + 'px';\n                    element[0].style.height = eventHeight === 'auto' ? '' : eventHeight + 'px';\n                    group._continuousEvents.push({\n                        element: element,\n                        uid: element.attr(kendo.attr('uid')),\n                        start: slotRange.start,\n                        end: slotRange.end,\n                        order: parseInt(element.attr(kendo.attr('order')), 10)\n                    });\n                    element.appendTo(this.content);\n                    this._inverseEventColor(element);\n                    var _collectionIndex = slotRange.start.collectionIndex;\n                    var _startSlotIndex = slotRange.start.index;\n                    var _startSlot = group._daySlotCollections[_collectionIndex]._slots[_startSlotIndex];\n                    if (!_startSlot.eventMeta) {\n                        _startSlot.eventMeta = [];\n                    }\n                    _startSlot.eventMeta.push({\n                        height: eventHeight === 'auto' ? element.outerHeight() : eventHeight,\n                        top: 0,\n                        startIndex: _startSlotIndex,\n                        endIndex: slotRange.end.index,\n                        uid: element.attr(kendo.attr('uid')),\n                        order: parseInt(element.attr(kendo.attr('order')), 10)\n                    });\n                }\n            },\n            _slotByPosition: function (x, y) {\n                var offset = this.content.offset();\n                x -= offset.left;\n                y -= offset.top;\n                y += this.content[0].scrollTop;\n                x += this.content[0].scrollLeft;\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    var slot = this._groupedView._getTimeSlotByPosition(x, y, groupIndex);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                return null;\n            },\n            _appendResizeHint: function (hint) {\n                hint.appendTo(this.content);\n                this._resizeHint = this._resizeHint.add(hint);\n            },\n            _updateResizeHint: function (event, groupIndex, startTime, endTime) {\n                this._removeResizeHint();\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(startTime, endTime, true, event.isAllDay);\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    this._groupedView._createResizeHint(ranges[rangeIndex]);\n                }\n                this._resizeHint.find('.k-label-top,.k-label-bottom').text('');\n                this._resizeHint.first().addClass('k-first').find('.k-label-top').text(kendo.toString(kendo.timezone.toLocalDate(startTime), 'M/dd'));\n                this._resizeHint.last().addClass('k-last').find('.k-label-bottom').text(kendo.toString(kendo.timezone.toLocalDate(endTime), 'M/dd'));\n            },\n            _updateMoveHint: function (event, groupIndex, distance) {\n                var start = kendo.date.toUtcTime(event.start) + distance;\n                var end = start + event.duration();\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(start, end, true, event.isAllDay);\n                this._removeMoveHint(event.uid);\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    this._groupedView._createMoveHint(ranges[rangeIndex], event);\n                }\n            },\n            _appendMoveHint: function (hint) {\n                hint.appendTo(this.content);\n                this._moveHint = this._moveHint.add(hint);\n            },\n            _groups: function () {\n                var groupCount = this._groupCount();\n                var tableRows = this.content[0].getElementsByTagName('tr');\n                var startDate = this.startDate();\n                this.groups = [];\n                for (var idx = 0; idx < groupCount; idx++) {\n                    this._addResourceView(idx);\n                }\n                this._groupedView._addDaySlotCollections(groupCount, tableRows, startDate);\n            },\n            addDaySlot: function (collection, cell, startDate, cellCount) {\n                var start = kendo.date.addDays(startDate, cellCount);\n                var end = kendo.date.MS_PER_DAY;\n                var eventsPerDay = this.options.eventsPerDay;\n                if (startDate.getHours() !== start.getHours()) {\n                    end += (startDate.getHours() - start.getHours()) * kendo.date.MS_PER_HOUR;\n                }\n                start = kendo.date.toUtcTime(start);\n                end += start;\n                cell.setAttribute('role', 'gridcell');\n                cell.setAttribute('aria-selected', false);\n                collection.addDaySlot(cell, start, end, eventsPerDay);\n            },\n            render: function (events) {\n                this.content.children('.k-event,.k-more-events,.k-events-container').remove();\n                this._groups();\n                events = new kendo.data.Query(events).sort([\n                    {\n                        field: 'start',\n                        dir: 'asc'\n                    },\n                    {\n                        field: 'end',\n                        dir: 'desc'\n                    }\n                ]).toArray().filter(function (event) {\n                    return this._isInDateSlot(event);\n                }.bind(this));\n                var resources = this.groupedResources;\n                var isMobile = this._isMobile();\n                var isGroupedByDate = this._isGroupedByDate();\n                var adaptiveSlotHeight = this.options.adaptiveSlotHeight;\n                this._canAdjustSlotHeight = isMobile !== true && isGroupedByDate !== true && resources.length === 0 && adaptiveSlotHeight === true;\n                if (resources.length) {\n                    this._renderGroups(events, resources, 0, 1);\n                } else {\n                    this._renderEvents(events, 0);\n                }\n                this.refreshLayout();\n                this.trigger('activate');\n            },\n            _renderEvents: function (events, groupIndex) {\n                var group = this.groups[groupIndex];\n                var view = this._groupedView._view;\n                var isMobile = view._isMobile();\n                if (!group._continuousEvents) {\n                    group._continuousEvents = [];\n                }\n                if (isMobile) {\n                    events.forEach(function (event) {\n                        var ranges = group.slotRanges(event, true);\n                        var range = ranges[0];\n                        var start = range.start.start;\n                        var end = range.end.end;\n                        var rangeStart = new Date(range.start.start);\n                        var rangeEnd = ranges[ranges.length - 1].end.end;\n                        var newStart = new Date(rangeStart);\n                        var newEnd = new Date(end);\n                        while (rangeStart.getTime() <= rangeEnd && event.end >= kendo.timezone.toLocalDate(rangeStart) && event.start <= kendo.timezone.toLocalDate(rangeEnd)) {\n                            var dateRange = group.daySlotRanges(newStart.getTime(), newEnd.getTime(), true)[0];\n                            newEnd.setDate(newEnd.getDate() + 1);\n                            newStart.setDate(newStart.getDate() + 1);\n                            if (dateRange) {\n                                dateRange.head = null;\n                                dateRange.middle = null;\n                                dateRange.tail = null;\n                                this._groupedView._positionMobileEvent(event, group, dateRange, 1, start, end, 0);\n                            }\n                            rangeStart = kendo.date.addDays(rangeStart, 1);\n                        }\n                    }.bind(this));\n                } else {\n                    events.forEach(function (event) {\n                        var range;\n                        var start = event.start;\n                        var end = event.end;\n                        var ranges = group.slotRanges(event, true);\n                        var rangeCount = ranges.length;\n                        for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                            range = ranges[rangeIndex];\n                            this._groupedView._positionEvent(event, group, range, rangeCount, start, end, rangeIndex);\n                        }\n                    }.bind(this));\n                    if (this._canAdjustSlotHeight === true) {\n                        this._adjustSlotHeight(group);\n                    }\n                }\n            },\n            _renderGroups: function (events, resources, offset, columnLevel) {\n                var resource = resources[0];\n                if (resource) {\n                    var view = resource.dataSource.view();\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n                        var tmp = new kendo.data.Query(events).filter({\n                            field: resource.field,\n                            operator: SchedulerView.groupEqFilter(value)\n                        }).toArray();\n                        if (resources.length > 1) {\n                            offset = this._renderGroups(tmp, resources.slice(1), offset++, columnLevel + 1);\n                        } else {\n                            this._renderEvents(tmp, offset++);\n                        }\n                    }\n                }\n                return offset;\n            },\n            _groupCount: function () {\n                var resources = this.groupedResources;\n                var groupedView = this._groupedView;\n                if (resources.length) {\n                    if (this._isVerticallyGrouped()) {\n                        return groupedView._verticalGroupCount(resources.length - 1);\n                    } else {\n                        return groupedView._horizontalGroupCount(resources.length);\n                    }\n                }\n                return 1;\n            },\n            _columnOffsetForResource: function (index) {\n                return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n            },\n            destroy: function () {\n                if (this.table) {\n                    this.table.removeClass('k-scheduler-monthview');\n                }\n                if (this.content) {\n                    this.content.off(NS);\n                }\n                if (this.element) {\n                    this.element.off(NS);\n                }\n                SchedulerView.fn.destroy.call(this);\n                if (this._isMobile() && this.options.editable) {\n                    if (this.options.editable.create !== false) {\n                        this._addUserEvents.destroy();\n                    }\n                }\n            },\n            events: [\n                'remove',\n                'add',\n                'edit',\n                'navigate'\n            ],\n            options: {\n                title: 'Month',\n                name: 'month',\n                eventHeight: 25,\n                moreButtonHeight: 13,\n                editable: true,\n                selectedDateFormat: '{0:y}',\n                selectedShortDateFormat: '{0:y}',\n                selectedMobileDateFormat: '{0:MMMM}',\n                groupHeaderTemplate: '#=text#',\n                dayTemplate: DAY_TEMPLATE,\n                eventTemplate: EVENT_TEMPLATE,\n                eventsPerDay: 2,\n                adaptiveSlotHeight: false,\n                eventSpacing: 3\n            }\n        });\n        function shiftArray(array, idx) {\n            return array.slice(idx).concat(array.slice(0, idx));\n        }\n        function firstVisibleMonthDay(date, calendarInfo) {\n            var firstDay = calendarInfo.firstDay, firstVisibleDay = new Date(date.getFullYear(), date.getMonth(), 0, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n            while (firstVisibleDay.getDay() != firstDay) {\n                kendo.date.setTime(firstVisibleDay, -1 * MS_PER_DAY);\n            }\n            return firstVisibleDay;\n        }\n        function isInDateRange(value, min, max) {\n            var msMin = min, msMax = max, msValue;\n            msValue = value;\n            return msValue >= msMin && msValue <= msMax;\n        }\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}