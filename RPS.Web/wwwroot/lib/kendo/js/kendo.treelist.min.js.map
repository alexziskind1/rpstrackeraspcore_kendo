{"version":3,"sources":["kendo.treelist.js"],"names":["f","define","$","undefined","is","field","object","not","func","isCellVisible","this","style","display","sortCells","cells","indexAttr","kendo","attr","sort","a","b","indexA","indexB","index","parseInt","leafDataCells","container","rows","find","filter","el","hasClass","length","add","last","createPlaceholders","options","i","level","spans","className","push","kendoDomElement","columnsWidth","cols","colWidth","idx","width","indexOf","syncTableHeight","table1","table2","lockedHeigth","tableHeigth","row","diff","offsetHeight","height","isInputElement","element","isLocked","column","parentColumn","locked","findParentColumnWithChildren","columns","source","rtl","target","targetLocked","findReorderTarget","before","masterColumns","parent","parentColumns","sourceIndex","targetIndex","columnParent","inArray","leafColumns","result","concat","getColumnsFields","visibleChildColumns","grep","hidden","isVisible","visibleColumns","normalizeColumns","hide","parentIds","map","uid","guid","headerAttributes","extend","headers","id","flatColumnsInDomOrder","flatColumns","lockedColumns","nonLockedColumns","targetParentContainerIndex","parentColumnsCells","cell","parentCellsWithChildren","offset","prevCells","parentCell","closest","headerRows","eq","prevAll","colSpan","Math","max","getAttribute","childColumnsCells","child","value","rowSpan","colSpanAttr","next","parents","columnParents","inserted","splice","children","columnPosition","cellCounts","updateCellIndex","thead","position","allColumns","depth","temp","updateRowSpans","containerDOMtree","each","attributes","rowspan","removeEmptyRows","emptyRows","shouldRemove","remove","focusTable","table","direct","scrollTop","scrollLeft","focusElement","one","e","preventDefault","focus","adjustRowHeight","row1","row2","offsetHeight1","offsetHeight2","isColumnEditable","model","selectable","command","editable","isDirtyColumn","dirty","dirtyFields","isUndefined","isNumber","isNaN","TreeListModel","TreeListDataSource","TreeListPager","Editor","PopupEditor","IncellEditor","TreeList","data","kendoDom","dom","kendoTextElement","text","kendoHtmlElement","html","outerWidth","_outerWidth","keys","outerHeight","_outerHeight","ui","DataBoundWidget","DataSource","ObservableArray","Query","Model","browser","support","kendoTemplate","template","activeElement","_activeElement","isArray","proxy","isPlainObject","Array","prototype","STRING","CHANGE","ITEM_CHANGE","ERROR","PROGRESS","DOT","NS","CLICK","INPUT","BEFORE_EDIT","EDIT","PAGE","PAGE_CHANGE","SAVE","SAVE_CHANGES","SORT","EXPAND","COLLAPSE","CELL_CLOSE","REMOVE","DATA_CELL","DATABINDING","DATABOUND","CANCEL","TABINDEX","FILTERMENUINIT","FILTERMENUOPEN","COLUMNHIDE","COLUMNSHOW","HEADERCELLS","COLUMNREORDER","COLUMNRESIZE","COLUMNMENUINIT","COLUMNMENUOPEN","COLUMNLOCK","COLUMNUNLOCK","PARENTIDFIELD","DRAGSTART","DRAG","DROP","DRAGEND","NAVROW","NAVCELL","NAVHEADER","NORECORDSCLASS","ITEMROW","FIRSTNAVITEM","LASTITEMROW","isRtl","HEIGHT","INCELL","INLINE","POPUP","TABLE","classNames","wrapper","header","button","alt","editCell","editRow","dirtyCell","group","gridToolbar","gridHeader","gridHeaderWrap","gridContent","gridContentWrap","gridFilter","footerTemplate","focused","loading","refresh","retry","selected","status","link","withIcon","filterable","icon","iconFilter","iconCollapse","iconExpand","iconHidden","iconPlaceHolder","input","dropPositions","dropTop","dropBottom","dropAdd","dropMiddle","dropDenied","dragStatus","dragClue","dragClueText","defaultCommands","create","imageClass","methodName","createchild","destroy","edit","update","canceledit","cancel","save","excel","pdf","search","TreeView","Class","init","that","defaultParentId","idField","parentIdField","childrenMap","dataItem","dataItemId","dataItemParentId","dataLength","_childrenMap","idsMap","_idMap","dataMaps","_dataMaps","ids","rootNodes","removeCollapsedSubtreesFromRootNodes","prunedTree","maxDepth","Infinity","removeCollapsedSubtrees","rootNode","childIdx","expanded","TreeQuery","constructor","process","inPlace","query","filterCallback","skip","take","total","filteredChildrenMap","view","prunedData","normalizeGroup","normalizeSort","toArray","processFromRootNodes","range","parentId","fields","type","nullable","fn","call","_loaded","get","accept","set","initiator","loaded","shouldSerialize","base","_getDataMaps","schema","modelBase","_addRange","_createNewModel","fromModel","_modelParentIdField","_isPageable","_shouldWrap","_push","operation","_readData","_getData","_data","newData","toJSON","_replaceData","sourceLength","_readAggregates","_aggregateResult","reader","aggregates","_defaultParentId","read","_modelOptions","_skip","_page","_collapsedTotal","root","_removeChildData","_removeFromDataMaps","removePristine","pageable","_getChildrenMap","items","_subtree","shouldRemovePristine","removedItems","_removeItems","pushDestroy","insert","newModel","_insertInDataMaps","_filterCallback","item","_modelIdField","parentSubtree","_parentNode","unshift","parentNode","len","_observeView","_createTreeView","_initIdsMap","_idsMap","_getIdsMap","_getFilteredChildrenMap","filteredChildren","_setFilteredChildrenMap","_initDataMaps","_initChildrenMapForParent","_defaultTreeModelOptions","modelOptions","_defaultDataItemType","ObservableObject","_calculateAggregates","subtree","pageableChildrenMap","aggregate","_queryProcess","hasLoadedChildren","_processPageableQuery","hasChildren","slice","_processTreeQuery","_replaceWithObservedData","_processDataItemsState","_replaceItemsInDataMaps","dataToAggregate","_dataToAggregate","_replaceInMapWithObservedData","firstDataItem","firstItemParents","_parentNodes","observableArray","directParent","viewIndex","itemType","_insertInIdsMap","_replaceInMap","replacement","itemInArray","itemIndex","dataToReplace","replacementArray","itemToReplace","itemToReplaceId","dataItemIndex","observableItem","_getById","at","key","_insertInChildrenMap","itemId","_removeFromIdsMap","_removeFromChildrenMap","_indexInChildrenMap","_itemIndexInMap","dataMap","_isLastItemInView","_defaultPageableQueryOptions","page","pageSize","serverPaging","_updateTotalForAction","action","_updateCollapsedTotalForAction","_calculateCollapsedTotal","_setFilterTotal","filterTotal","setDefaultValue","_setFilterCollapsedTotal","serverFiltering","collapsedTotal","_dataWithoutCollapsedSubtrees","_removeCollapsedSubtrees","_processDataItemState","_queueRequest","callback","_modelLoaded","childNodes","_modelError","_error","success","requestParams","_observe","_total","load","method","remote","serverSorting","serverGrouping","serverAggregates","defaultPromise","Deferred","resolve","promise","done","fail","contains","rootId","_byParentId","defaultId","current","defaults","_rootNode","_pageableRootNodes","nodesWithoutParentInView","node","_nodesWithoutParentInView","_parentNodesNotInView","parentInView","_parentInView","_pageableModelLevel","baseFilter","_pageableQueryOptions","_flatData","cancelChanges","_restorePageSizeAfterAddChild","_modelCanceled","_changesCanceled","_setAddChildPageSize","queryOptions","_addChildPageSize","_query","sync","then","_syncEnd","Pager","name","totalPages","dataSource","_filter","ceil","_createDataSource","Observable","bind","events","_fields","_initContainer","createEditable","Editable","clearContainer","change","_isEditable","format","editor","end","close","empty","removeAttr","_attachHandlers","cycleForm","open","window","modal","resizable","draggable","title","visible","formContent","append","_appendTemplate","_appendFields","_appendButtons","Tree","render","appendTo","Window","form","unescape","class","fieldRenderer","commandRenderer","closeHandler","_cancelProxy","_cancel","on","_saveProxy","_save","userTriggered","_detachHandlers","off","trigger","center","_dataSource","_aria","_columns","_layout","_navigatable","_selectable","_sortable","_resizable","_filterable","_attachEvents","_toolbar","_scrollable","_reorderable","_columnMenu","_minScreenSupport","_draggable","_pageable","autoBind","fetch","_hasLockedColumns","widget","addClass","_resizeHandler","resize","notify","move","touch","css","_dragging","HierarchicalDragAndDrop","$angular","autoScroll","itemSelector","allowedContainers","hintText","separator","join","destination","dest","src","itemFromTarget","tr","content","dragstart","drag","drop","removeClass","dragend","isPrevented","originalSrcParentId","originalSrcIndex","reorderable","dropHintContainer","dropPositionFrom","dropHint","itemFor","tbody","_itemFor","lockedContent","lockedTable","scrollables","touchScroller","scrollable","_wheelScroll","movable","_touchScroller","sender","x","y","delta","lockedDiv","ctrlKey","wheelDeltaY","currentTarget","scrollHeight","clientHeight","_progress","messages","_showStatus","_render","error","isCurrentInHeader","currentIndex","_cancelEditor","_adjustHeight","navigatable","_isActiveInTable","cellIndex","_restoreCurrent","_angularFooters","footer","allAggregates","footerRows","_footerItems","_angularFooter","angular","elements","col","_items","dataItems","n","tmp","_showNoRecordsTemplate","defaultTemplate","scrollableNoGridHeightStyles","_contentTree","_lockedContentTree","noRows","insertAfter","message","_hideStatus","_hideNoRecordsTempalte","show","isHeightSet","contentWrap","toolbar","pagerHeight","pager","scrollbar","initialHeight","newHeight","offsetWidth","clientWidth","_resize","size","force","_applyLockedContainersWidth","any","hideMinScreenCols","minScreenResizeHandler","_iterateMinScreenCols","screenWidth","minWidth","minScreenWidth","hideColumn","showColumn","innerWidth","screen","unbind","_refreshHandler","_errorHandler","_progressHandler","_navigatableTables","_current","_draggableInstance","_userEvents","_destroyEditor","_destroyPager","_autoExpandable","_dataSourceFetchProxy","lockedHeader","_statusTree","_headerTree","_lockedHeaderColsTree","_lockedContentColsTree","_lockedHeaderTree","sortable","columnMenu","requestFailed","commands","hierarchy","_toggle","expand","afterModelLoaded","_toggleData","_syncLockedContentHeight","_isIncellEditable","closeCell","always","_togglePageableData","_renderProgress","_refreshPager","collapse","_toggleChildren","event","tables","headerTables","_tableClick","_tableFocus","_tableBlur","_tableKeyDown","td","lockedColumnOffset","active","rowIndex","newCurrent","_updateCurrentAttr","_scrollCurrent","_lastCellIndex","_setCurrent","tableContainer","isInLockedContainer","isInContent","scrollableContainer","_scrollTo","_relatedRow","_findCurrentCell","elementToLowercase","tagName","toLowerCase","isHorizontal","elementOffsetDir","containerScroll","containerOffsetDir","elementOffset","abs","offsetLeft","bottomDistance","ieCorrection","firefoxCorrection","msie","edge","mozilla","_elementId","_currentDataIndex","lockedColumnsCount","_prevVerticalCell","_nextVerticalCell","tmpIndex","currentRowCells","hiddenColumns","_verticalContainer","up","step","floor","headerId","replace","handled","canHandle","isDefaultPrevented","keyCode","UP","_moveUp","shiftKey","DOWN","_moveDown","LEFT","RIGHT","altKey","_handleExpand","_moveRight","_handleCollapse","_moveLeft","PAGEDOWN","_handlePageDown","PAGEUP","_handlePageUp","ENTER","F2","_handleEnterKey","ESC","_handleEscKey","HOME","_handleHome","END","_handleEnd","TAB","_handleTabKey","stopPropagation","ctrl","prev","rowContainer","isInLockedTable","isInBody","currentTable","blur","cancelRow","first","version","document","body","has","focusable","click","_handleEditing","incellEditing","_tabNext","_preventPageSizeRestore","back","switchRow","nextAll","editContainer","isEdited","editedCell","isIE","nextFocusableCellRowIndex","nextFocusableCellIndex","currentFocusedCellRowIndex","currentFocusedCellIndex","opera","triggerHandler","saveRow","isHeader","headerTable","isInput","setTimeout","_setTabIndex","retryButton","UserEvents","press","_onPress","allowSelection","_commandClick","_search","_attachCellEditingEventHandlers","icons","multiple","relatedTarget","isLockedCell","clearTimeout","_closeCellTimeout","_commandByName","j","currentName","commandName","parentsUntil","_searchTimeOut","searchFields","expression","filters","logic","operator","_ensureExpandableColumn","expandableColumns","expandable","lockedCols","encoded","_columnTemplates","_columnAttributes","headerTemplate","convertStyle","properties","declaration","split","trim","camelCase","_clearSortClasses","layout","addBack","_initVirtualTrees","_renderCols","_renderHeader","_headerColsTree","_contentColsTree","buttons","_buildCommands","_lockedColumns","_nonLockedColumns","_templateColumns","_flushCache","maps","uidAttr","hasFooterTemplate","viewChildrenMap","_renderOptions","_dataToRender","_renderedModelLevel","select","_","_absoluteIndex","_angularItems","_clearRenderMap","buttonClass","_viewChildrenMap","_hasFooterTemplate","_trs","editedColumn","editedColumnIndex","contentResized","_muteAngularRebind","_togglePagerVisibility","_setExpanderElement","expander","hiddenDivClass","hiddenDiv","toggle","progress","parentsNotInView","parentNotInView","parentNotInViewId","childId","parentsCopy","parentIndex","_markNodeAsNonRenderable","_skipRenderingMap","nodeId","_adjustRowsHeight","rows2","containers","containersLength","heights","_ths","cellClasses","headerContent","ths","href","data-field","data-title","role","_cols","_clearColsCache","_retrieveFirstColumn","_updateFirstColumnClass","_updateRowSpans","included","_setColumnDataIndexes","_updateColumnCellIndex","_setParentsVisibility","predicate","p","_prepareColumns","parentRow","childRow","totalColSpan","_renderHeaderTree","tree","hasMultiColumnHeaders","rowsToRender","_syncLockedHeaderHeight","lockedWidth","nonLockedWidth","wrapperWidth","modelId","_edit","_tds","_td","data-parentId","_footerId","noop","c","renderer","editedColumnField","editColumn","iconClass","columnHasEditCommand","_cellContent","dirtyIndicator","_evalDirtyIndicatorTemplate","_evalColumnTemplate","_evalCustomColumnTemplate","templateSettings","_customTemplateSettings","columnTemplateAlias","paramName","templateString","_dirtyIndicatorTemplate","templateFunction","columnTemplate","dirtyIndicatorTemplate","dirtyField","charAt","expr","Template","_handleCommand","_button","data-command","_positionResizeHandle","th","resizeHandle","cellWidth","which","indicatorWidth","columnResizeHandleWidth","left","top","val","autoFitColumn","contentTable","footerTable","oldColumnWidth","newColumnWidth","totalWidth","visibleLocked","oldWidth","newWidth","_adjustLockedHorizontalScrollBar","_syncLockedScroll","treelist","Resizable","handle","start","colSelector","startLocation","location","columnWidth","rtlModifier","minColumnWidth","resizeend","sortableInstance","kendoColumnSorter","filterMenuInstance","filterInit","filterOpen","kendoFilterMenu","_change","_isLocked","useAllItems","multi","Selectable","parseOptions","aria","continuousItems","_continuousItems","_selectableTarget","SPACEBAR","clear","_lastActive","selectRange","_firstSelectee","lockedItems","nonLockedItems","apply","related","clearSelection","ds","_sortHandler","setDataSource","getByUid","_isPopupEditable","_editMode","_createEditor","_cancelEdit","args","addRow","inlineEditing","_isInlineEditable","showNewModelInView","_insertAt","_firstEditableColumnIndex","removeRow","_shouldRestorePageSize","mode","leafCols","_createIncellEditor","_editCell","values","isCancel","ns","saveChanges","valid","_toggleColumnVisibility","_findColumn","_adjustTablesWidth","selector","Draggable","hint","prepend","Reorderable","dragOverContainers","_allowDragOverContainers","inSameContainer","oldIndex","newIndex","reorderColumn","lockable","_reorderTrees","destSources","destContainer","destDomTree","sources","sourcesContainer","sourcesDomTree","destDomChildren","destRow","sourcesLeafs","destLeafs","reorderTaget","destThs","sourceDOM","sourceChildren","destColumn","_insertTree","leafs","domTr","_reorderHeader","rowsToAdd","sourcesDepth","targetDepth","sourceLocked","destLocked","destRows","destIndex","lockChanged","nonLockedColumnsLength","lockColumn","unlockColumn","menu","menuOptions","initHandler","_columnMenuInit","openHandler","_columnMenuOpen","lockedColumnsLength","compare","pane","owner","closeCallback","kendoColumnMenu","_createPager","alwaysVisible","ExcelMixin","PDFMixin","_drawPDF","allPages","startingPage","exportPage","doc","treeList","_drawPDFShadow","avoidLinks","pageNum","pageNumber","err","reject","paperSize","_drawPDF_autoPageBreak","_initPDFProgress","drawing","Group","deferred","progressBar","clone","kendoProgressBar","chunkCount","min","draw","cont","_destructive","drawDOM","renderPage","origBody","overflow","paddingRight","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.treelist.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.treelist', [\n        'kendo.dom',\n        'kendo.data',\n        'kendo.columnsorter',\n        'kendo.editable',\n        'kendo.window',\n        'kendo.filtermenu',\n        'kendo.selectable',\n        'kendo.resizable',\n        'kendo.treeview.draganddrop',\n        'kendo.pager'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'treelist',\n        name: 'TreeList',\n        category: 'web',\n        description: 'The TreeList widget displays self-referencing data and offers rich support for interacting with data, sorting, filtering, and selection.',\n        depends: [\n            'dom',\n            'data',\n            'pager'\n        ],\n        features: [\n            {\n                id: 'treelist-sorting',\n                name: 'Sorting',\n                description: 'Support for column sorting',\n                depends: ['columnsorter']\n            },\n            {\n                id: 'treelist-filtering',\n                name: 'Filtering',\n                description: 'Support for record filtering',\n                depends: ['filtermenu']\n            },\n            {\n                id: 'treelist-editing',\n                name: 'Editing',\n                description: 'Support for record editing',\n                depends: [\n                    'editable',\n                    'window'\n                ]\n            },\n            {\n                id: 'treelist-selection',\n                name: 'Selection',\n                description: 'Support for row selection',\n                depends: ['selectable']\n            },\n            {\n                id: 'treelist-column-resize',\n                name: 'Column resizing',\n                description: 'Support for column resizing',\n                depends: ['resizable']\n            },\n            {\n                id: 'treelist-dragging',\n                name: 'Drag & Drop',\n                description: 'Support for drag & drop of rows',\n                depends: ['treeview.draganddrop']\n            },\n            {\n                id: 'treelist-excel-export',\n                name: 'Excel export',\n                description: 'Export data as Excel spreadsheet',\n                depends: ['excel']\n            },\n            {\n                id: 'treelist-pdf-export',\n                name: 'PDF export',\n                description: 'Export data as PDF',\n                depends: [\n                    'pdf',\n                    'drawing'\n                ]\n            },\n            {\n                id: 'treelist-paging',\n                name: 'Paging',\n                description: 'Support for treelist paging',\n                depends: ['pager']\n            }\n        ]\n    };\n    (function ($, undefined) {\n        var data = kendo.data;\n        var kendoDom = kendo.dom;\n        var kendoDomElement = kendoDom.element;\n        var kendoTextElement = kendoDom.text;\n        var kendoHtmlElement = kendoDom.html;\n        var outerWidth = kendo._outerWidth;\n        var keys = kendo.keys;\n        var outerHeight = kendo._outerHeight;\n        var ui = kendo.ui;\n        var DataBoundWidget = ui.DataBoundWidget;\n        var DataSource = data.DataSource;\n        var ObservableArray = data.ObservableArray;\n        var Query = data.Query;\n        var Model = data.Model;\n        var browser = kendo.support.browser;\n        var kendoTemplate = kendo.template;\n        var activeElement = kendo._activeElement;\n        var isArray = $.isArray;\n        var extend = $.extend;\n        var proxy = $.proxy;\n        var map = $.map;\n        var grep = $.grep;\n        var inArray = $.inArray;\n        var isPlainObject = $.isPlainObject;\n        var push = Array.prototype.push;\n        var STRING = 'string';\n        var CHANGE = 'change';\n        var ITEM_CHANGE = 'itemChange';\n        var ERROR = 'error';\n        var PROGRESS = 'progress';\n        var DOT = '.';\n        var NS = '.kendoTreeList';\n        var CLICK = 'click';\n        var INPUT = 'input';\n        var BEFORE_EDIT = 'beforeEdit';\n        var EDIT = 'edit';\n        var PAGE = 'page';\n        var PAGE_CHANGE = 'pageChange';\n        var SAVE = 'save';\n        var SAVE_CHANGES = 'saveChanges';\n        var SORT = 'sort';\n        var EXPAND = 'expand';\n        var COLLAPSE = 'collapse';\n        var CELL_CLOSE = 'cellClose';\n        var REMOVE = 'remove';\n        var DATA_CELL = 'td:not(.k-group-cell):not(.k-hierarchy-cell):visible';\n        var DATABINDING = 'dataBinding';\n        var DATABOUND = 'dataBound';\n        var CANCEL = 'cancel';\n        var TABINDEX = 'tabIndex';\n        var FILTERMENUINIT = 'filterMenuInit';\n        var FILTERMENUOPEN = 'filterMenuOpen';\n        var COLUMNHIDE = 'columnHide';\n        var COLUMNSHOW = 'columnShow';\n        var HEADERCELLS = 'th.k-header';\n        var COLUMNREORDER = 'columnReorder';\n        var COLUMNRESIZE = 'columnResize';\n        var COLUMNMENUINIT = 'columnMenuInit';\n        var COLUMNMENUOPEN = 'columnMenuOpen';\n        var COLUMNLOCK = 'columnLock';\n        var COLUMNUNLOCK = 'columnUnlock';\n        var PARENTIDFIELD = 'parentId';\n        var DRAGSTART = 'dragstart';\n        var DRAG = 'drag';\n        var DROP = 'drop';\n        var DRAGEND = 'dragend';\n        var NAVROW = 'tr:visible';\n        var NAVCELL = 'td:visible';\n        var NAVHEADER = 'th:visible';\n        var NORECORDSCLASS = 'k-grid-norecords';\n        var ITEMROW = 'tr:not(.k-footer-template):visible';\n        var FIRSTNAVITEM = NAVROW + ' > td:first:visible';\n        var LASTITEMROW = ITEMROW + ':last';\n        var isRtl = false;\n        var HEIGHT = 'height';\n        var INCELL = 'incell';\n        var INLINE = 'inline';\n        var POPUP = 'popup';\n        var TABLE = 'table';\n        var classNames = {\n            wrapper: 'k-treelist k-grid k-widget k-grid-display-block',\n            header: 'k-header',\n            button: 'k-button',\n            alt: 'k-alt',\n            editCell: 'k-edit-cell',\n            editRow: 'k-grid-edit-row',\n            dirtyCell: 'k-dirty-cell',\n            group: 'k-treelist-group',\n            gridToolbar: 'k-grid-toolbar',\n            gridHeader: 'k-grid-header',\n            gridHeaderWrap: 'k-grid-header-wrap',\n            gridContent: 'k-grid-content',\n            gridContentWrap: 'k-grid-content',\n            gridFilter: 'k-grid-filter',\n            footerTemplate: 'k-footer-template',\n            focused: 'k-state-focused',\n            loading: 'k-i-loading',\n            refresh: 'k-i-reload',\n            retry: 'k-request-retry',\n            selected: 'k-state-selected',\n            status: 'k-status',\n            link: 'k-link',\n            withIcon: 'k-with-icon',\n            filterable: 'k-filterable',\n            icon: 'k-icon',\n            iconFilter: 'k-i-filter',\n            iconCollapse: 'k-i-collapse',\n            iconExpand: 'k-i-expand',\n            iconHidden: 'k-i-none',\n            iconPlaceHolder: 'k-icon k-i-none',\n            input: 'k-input',\n            dropPositions: 'k-i-insert-up k-i-insert-down k-i-plus k-i-insert-middle',\n            dropTop: 'k-i-insert-up',\n            dropBottom: 'k-i-insert-down',\n            dropAdd: 'k-i-plus',\n            dropMiddle: 'k-i-insert-middle',\n            dropDenied: 'k-i-cancel',\n            dragStatus: 'k-drag-status',\n            dragClue: 'k-drag-clue',\n            dragClueText: 'k-clue-text'\n        };\n        var defaultCommands = {\n            create: {\n                imageClass: 'k-i-plus',\n                className: 'k-grid-add',\n                methodName: 'addRow'\n            },\n            createchild: {\n                imageClass: 'k-i-plus',\n                className: 'k-grid-add',\n                methodName: 'addRow'\n            },\n            destroy: {\n                imageClass: 'k-i-close',\n                className: 'k-grid-delete',\n                methodName: 'removeRow'\n            },\n            edit: {\n                imageClass: 'k-i-edit',\n                className: 'k-grid-edit',\n                methodName: 'editRow'\n            },\n            update: {\n                imageClass: 'k-i-check',\n                className: 'k-primary k-grid-update',\n                methodName: 'saveRow'\n            },\n            canceledit: {\n                imageClass: 'k-i-cancel',\n                className: 'k-grid-cancel',\n                methodName: '_cancelEdit'\n            },\n            cancel: {\n                imageClass: 'k-icon k-i-cancel',\n                text: 'Cancel changes',\n                className: 'k-grid-cancel-changes',\n                methodName: 'cancelChanges'\n            },\n            save: {\n                imageClass: 'k-icon k-i-check',\n                text: 'Save changes',\n                className: 'k-grid-save-changes',\n                methodName: 'saveChanges'\n            },\n            excel: {\n                imageClass: 'k-i-file-excel',\n                className: 'k-grid-excel',\n                methodName: 'saveAsExcel'\n            },\n            pdf: {\n                imageClass: 'k-i-file-pdf',\n                className: 'k-grid-pdf',\n                methodName: 'saveAsPDF'\n            },\n            search: { template: '<span class=\\'k-textbox k-grid-search k-display-flex\\'>' + '<input autocomplete=\\'off\\' placeholder=\\'' + '#= message #' + '\\' title=\\'' + '#= message #' + '\\' class=\\'k-input\\' />' + '<span class=\\'k-input-icon\\'><span class=\\'k-icon k-i-search\\'></span></span>' + '</span>' }\n        };\n        var TreeView = kendo.Class.extend({\n            init: function (data, options) {\n                var that = this;\n                that.data = data || [];\n                that.options = extend(that.options, options);\n            },\n            options: {\n                defaultParentId: null,\n                idField: 'id',\n                parentIdField: PARENTIDFIELD\n            },\n            childrenMap: function () {\n                var that = this;\n                var childrenMap = {};\n                var dataLength = that.data.length;\n                var dataItem;\n                var dataItemId;\n                var dataItemParentId;\n                var idField = that.options.idField;\n                var parentIdField = that.options.parentIdField;\n                if (that._childrenMap) {\n                    return that._childrenMap;\n                }\n                for (var i = 0; i < dataLength; i++) {\n                    dataItem = this.data[i];\n                    dataItemId = dataItem[idField];\n                    dataItemParentId = dataItem[parentIdField];\n                    childrenMap[dataItemId] = childrenMap[dataItemId] || [];\n                    childrenMap[dataItemParentId] = childrenMap[dataItemParentId] || [];\n                    childrenMap[dataItemParentId].push(dataItem);\n                }\n                that._childrenMap = childrenMap;\n                return childrenMap;\n            },\n            idsMap: function () {\n                var that = this;\n                var idsMap = {};\n                var data = that.data;\n                var dataLength = data.length;\n                var dataItem;\n                var idField = that.options.idField;\n                if (that._idMap) {\n                    return that._idMap;\n                }\n                for (var i = 0; i < dataLength; i++) {\n                    dataItem = data[i];\n                    idsMap[dataItem[idField]] = dataItem;\n                }\n                that.idsMap = idsMap;\n                return idsMap;\n            },\n            dataMaps: function () {\n                var that = this;\n                var childrenMap = {};\n                var data = that.data;\n                var dataLength = data.length;\n                var idsMap = {};\n                var dataItem;\n                var dataItemId;\n                var dataItemParentId;\n                var idField = that.options.idField;\n                var parentIdField = that.options.parentIdField;\n                if (that._dataMaps) {\n                    return that._dataMaps;\n                }\n                for (var i = 0; i < dataLength; i++) {\n                    dataItem = data[i];\n                    dataItemId = dataItem[idField];\n                    dataItemParentId = dataItem[parentIdField];\n                    idsMap[dataItemId] = dataItem;\n                    childrenMap[dataItemId] = childrenMap[dataItemId] || [];\n                    childrenMap[dataItemParentId] = childrenMap[dataItemParentId] || [];\n                    childrenMap[dataItemParentId].push(dataItem);\n                }\n                that._dataMaps = {\n                    children: childrenMap,\n                    ids: idsMap\n                };\n                return that._dataMaps;\n            },\n            rootNodes: function () {\n                var that = this;\n                var data = that.data;\n                var defaultParentId = that.options.defaultParentId;\n                var dataLength = data.length;\n                var rootNodes = [];\n                var dataItem;\n                var parentIdField = that.options.parentIdField;\n                for (var i = 0; i < dataLength; i++) {\n                    dataItem = data[i];\n                    if (dataItem[parentIdField] === defaultParentId) {\n                        rootNodes.push(dataItem);\n                    }\n                }\n                return rootNodes;\n            },\n            removeCollapsedSubtreesFromRootNodes: function (options) {\n                options = options || {};\n                var that = this;\n                var rootNodes = that.rootNodes();\n                var result = [];\n                var prunedTree;\n                that._childrenMap = options.childrenMap = options.childrenMap || that.childrenMap();\n                options.maxDepth = options.maxDepth || Infinity;\n                for (var i = 0; i < rootNodes.length; i++) {\n                    prunedTree = that.removeCollapsedSubtrees(rootNodes[i], options);\n                    result = result.concat(prunedTree);\n                }\n                return result;\n            },\n            removeCollapsedSubtrees: function (rootNode, options) {\n                options = options || {};\n                var that = this;\n                var result = [];\n                var childIdx;\n                var prunedTree;\n                var childrenMap = options.childrenMap || {};\n                var maxDepth = options.maxDepth || Infinity;\n                var idField = that.options.idField;\n                var children = childrenMap[rootNode[idField]] || [];\n                var expanded = isUndefined(rootNode.expanded) ? options.expanded : rootNode.expanded;\n                result.push(rootNode);\n                if (children && expanded) {\n                    for (childIdx = 0; childIdx < children.length; childIdx++) {\n                        if (result.length >= maxDepth) {\n                            break;\n                        }\n                        prunedTree = that.removeCollapsedSubtrees(children[childIdx], options);\n                        result = result.concat(prunedTree);\n                    }\n                }\n                return result;\n            }\n        });\n        var TreeQuery = function (data) {\n            this.data = data || [];\n        };\n        TreeQuery.prototype = new Query();\n        TreeQuery.prototype.constructor = TreeQuery;\n        TreeQuery.process = function (data, options, inPlace) {\n            options = options || {};\n            var query = new TreeQuery(data);\n            var group = options.group;\n            var sort = Query.normalizeGroup(group || []).concat(Query.normalizeSort(options.sort || []));\n            var filterCallback = options.filterCallback;\n            var filter = options.filter;\n            var skip = options.skip;\n            var take = options.take;\n            var total;\n            var childrenMap;\n            var filteredChildrenMap;\n            var view;\n            var prunedData;\n            if (sort && inPlace) {\n                query = query.sort(sort, undefined, undefined, inPlace);\n            }\n            if (filter) {\n                query = query.filter(filter);\n                if (filterCallback) {\n                    query = filterCallback(query);\n                }\n                total = query.toArray().length;\n            }\n            if (sort && !inPlace) {\n                query = query.sort(sort);\n                if (group) {\n                    data = query.toArray();\n                }\n            }\n            if (options.processFromRootNodes) {\n                view = new TreeView(query.toArray(), options);\n                if (filter) {\n                    filteredChildrenMap = view.childrenMap();\n                }\n                prunedData = view.removeCollapsedSubtreesFromRootNodes({\n                    childrenMap: filter || sort && sort.length ? undefined : options.childrenMap,\n                    expanded: options.expanded,\n                    maxDepth: skip + take || Infinity\n                });\n                childrenMap = view.childrenMap();\n                query = new TreeQuery(prunedData);\n            }\n            if (skip !== undefined && take !== undefined) {\n                query = query.range(skip, take);\n            }\n            if (group) {\n                query = query.group(group, data);\n            }\n            return {\n                total: total,\n                data: query.toArray(),\n                childrenMap: childrenMap,\n                filteredChildrenMap: filteredChildrenMap\n            };\n        };\n        var TreeListModel = Model.define({\n            id: 'id',\n            parentId: PARENTIDFIELD,\n            fields: {\n                id: { type: 'number' },\n                parentId: {\n                    type: 'number',\n                    nullable: true\n                }\n            },\n            init: function (value) {\n                Model.fn.init.call(this, value);\n                this._loaded = false;\n                if (!this.parentIdField) {\n                    this.parentIdField = PARENTIDFIELD;\n                }\n                this.parentId = this.get(this.parentIdField);\n            },\n            accept: function (data) {\n                Model.fn.accept.call(this, data);\n                this.parentId = this.get(this.parentIdField);\n            },\n            set: function (field, value, initiator) {\n                if (field == PARENTIDFIELD && this.parentIdField != PARENTIDFIELD) {\n                    this[this.parentIdField] = value;\n                }\n                Model.fn.set.call(this, field, value, initiator);\n                if (field == this.parentIdField) {\n                    this.parentId = this.get(this.parentIdField);\n                }\n            },\n            loaded: function (value) {\n                if (value !== undefined) {\n                    this._loaded = value;\n                } else {\n                    return this._loaded;\n                }\n            },\n            shouldSerialize: function (field) {\n                return Model.fn.shouldSerialize.call(this, field) && field !== '_loaded' && field != '_error' && field != '_edit' && !(this.parentIdField !== 'parentId' && field === 'parentId');\n            }\n        });\n        TreeListModel.parentIdField = PARENTIDFIELD;\n        TreeListModel.define = function (base, options) {\n            if (options === undefined) {\n                options = base;\n                base = TreeListModel;\n            }\n            var parentId = options.parentId || PARENTIDFIELD;\n            options.parentIdField = parentId;\n            var model = Model.define(base, options);\n            if (parentId) {\n                model.parentIdField = parentId;\n            }\n            return model;\n        };\n        function is(field) {\n            return function (object) {\n                return object[field];\n            };\n        }\n        function not(func) {\n            return function (object) {\n                return !func(object);\n            };\n        }\n        var TreeListDataSource = DataSource.extend({\n            init: function (options) {\n                options = options || {};\n                var that = this;\n                that._dataMaps = that._getDataMaps();\n                options.schema = extend(true, {}, {\n                    modelBase: TreeListModel,\n                    model: TreeListModel\n                }, options.schema);\n                DataSource.fn.init.call(this, options);\n            },\n            _addRange: function () {\n            },\n            _createNewModel: function (data) {\n                var that = this;\n                var model = {};\n                var fromModel = data instanceof Model;\n                var parentIdField = this._modelParentIdField();\n                if (fromModel) {\n                    model = data;\n                }\n                model = DataSource.fn._createNewModel.call(this, model);\n                if (!fromModel) {\n                    if (data.parentId) {\n                        data[model.parentIdField] = data.parentId;\n                    } else if (that._isPageable() && data[parentIdField]) {\n                        data[model.parentIdField] = data[parentIdField];\n                    }\n                    model.accept(data);\n                }\n                return model;\n            },\n            _shouldWrap: function () {\n                return true;\n            },\n            _push: function (result, operation) {\n                var data = DataSource.fn._readData.call(this, result);\n                if (!data) {\n                    data = result;\n                }\n                this[operation](data);\n            },\n            _getData: function () {\n                return this._data || [];\n            },\n            _readData: function (newData) {\n                var that = this;\n                var data = that._isPageable() ? that._getData().toJSON() : that.data();\n                newData = DataSource.fn._readData.call(this, newData);\n                this._replaceData((data.toJSON ? data.toJSON() : data).concat(newData), data);\n                if (newData instanceof ObservableArray) {\n                    return newData;\n                }\n                return data;\n            },\n            _replaceData: function (source, target) {\n                var sourceLength = source.length;\n                for (var i = 0; i < sourceLength; i++) {\n                    target[i] = source[i];\n                }\n                target.length = sourceLength;\n            },\n            _readAggregates: function (data) {\n                var result = extend(this._aggregateResult, this.reader.aggregates(data));\n                if ('' in result) {\n                    result[this._defaultParentId()] = result[''];\n                    delete result[''];\n                }\n                return result;\n            },\n            read: function (data) {\n                var that = this;\n                if (that._isPageable()) {\n                    that._dataMaps = {};\n                    if (!that._modelOptions().expanded) {\n                        that._skip = 0;\n                        that._page = 1;\n                        that._collapsedTotal = undefined;\n                    }\n                }\n                return DataSource.fn.read.call(that, data);\n            },\n            remove: function (root) {\n                this._removeChildData(root);\n                this._removeFromDataMaps(root);\n                DataSource.fn.remove.call(this, root);\n            },\n            _removeChildData: function (model, removePristine) {\n                var that = this;\n                var pageable = that._isPageable();\n                var data = pageable ? this._getData() : this.data();\n                var childrenMap = pageable ? that._getChildrenMap() || that.childrenMap(data) : that._childrenMap(data);\n                var items = this._subtree(childrenMap, model.id);\n                var shouldRemovePristine = isUndefined(removePristine) ? false : removePristine;\n                var removedItems = this._removeItems(items, shouldRemovePristine);\n                that._removeFromDataMaps(removedItems);\n            },\n            pushDestroy: function (items) {\n                var that = this;\n                if (!isArray(items)) {\n                    items = [items];\n                }\n                for (var i = 0; i < items.length; i++) {\n                    that._removeChildData(items[i], true);\n                    that._removeFromDataMaps(items[i]);\n                }\n                DataSource.fn.pushDestroy.call(that, items);\n            },\n            insert: function (index, model) {\n                var that = this;\n                var newModel = that._createNewModel(model);\n                that._insertInDataMaps(newModel);\n                return DataSource.fn.insert.call(that, index, newModel);\n            },\n            _filterCallback: function (query) {\n                var that = this;\n                var i, item;\n                var map = {};\n                var result = [];\n                var data = query.toArray();\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var pageable = that._isPageable();\n                var parentSubtree = [];\n                var parent;\n                for (i = 0; i < data.length; i++) {\n                    item = data[i];\n                    if (pageable) {\n                        parentSubtree = [];\n                        if (!map[item[idField]]) {\n                            map[item[idField]] = true;\n                            parentSubtree.push(item);\n                        }\n                        parent = that._parentNode(item);\n                        while (parent) {\n                            if (!map[parent[idField]]) {\n                                map[parent[idField]] = true;\n                                parentSubtree.unshift(parent);\n                                parent = that._parentNode(parent);\n                            } else {\n                                break;\n                            }\n                        }\n                        if (parentSubtree.length) {\n                            result = result.concat(parentSubtree);\n                        }\n                    } else {\n                        while (item) {\n                            if (!map[item[idField]]) {\n                                map[item[idField]] = true;\n                                result.push(item);\n                            }\n                            if (!map[item[parentIdField]]) {\n                                map[item[parentIdField]] = true;\n                                item = this.parentNode(item);\n                                if (item) {\n                                    result.push(item);\n                                }\n                            } else {\n                                break;\n                            }\n                        }\n                    }\n                }\n                return new Query(result);\n            },\n            _subtree: function (map, id) {\n                var that = this;\n                var result = map[id] || [];\n                var defaultParentId = that._defaultParentId();\n                var idField = that._modelIdField();\n                for (var i = 0, len = result.length; i < len; i++) {\n                    if (result[i][idField] !== defaultParentId) {\n                        result = result.concat(that._subtree(map, result[i][idField]));\n                    }\n                }\n                return result;\n            },\n            _childrenMap: function (data) {\n                var map = {};\n                var i, item, id, parentId;\n                data = this._observeView(data);\n                for (i = 0; i < data.length; i++) {\n                    item = data[i];\n                    id = item.id;\n                    parentId = item.parentId;\n                    map[id] = map[id] || [];\n                    map[parentId] = map[parentId] || [];\n                    map[parentId].push(item);\n                }\n                return map;\n            },\n            childrenMap: function (data) {\n                var view = this._createTreeView(data);\n                var map = view.childrenMap();\n                return map;\n            },\n            _getChildrenMap: function () {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                return dataMaps.children;\n            },\n            _initIdsMap: function (data) {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                if (isUndefined(dataMaps.ids)) {\n                    dataMaps.ids = that._idsMap(data);\n                }\n                return dataMaps.ids;\n            },\n            _idsMap: function (data) {\n                var view = this._createTreeView(data);\n                var map = view.idsMap();\n                return map;\n            },\n            _getIdsMap: function () {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                return dataMaps.ids || {};\n            },\n            _getFilteredChildrenMap: function () {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                return dataMaps.filteredChildren;\n            },\n            _setFilteredChildrenMap: function (map) {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                dataMaps.filteredChildren = map;\n            },\n            _initDataMaps: function (data) {\n                var that = this;\n                var view = that._createTreeView(data);\n                that._dataMaps = view.dataMaps();\n                return that._dataMaps;\n            },\n            _initChildrenMapForParent: function (parent) {\n                var that = this;\n                var data = that._getData();\n                var childrenMap = that._getChildrenMap();\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var parentId = (parent || {})[idField];\n                if (childrenMap && parent) {\n                    childrenMap[parentId] = [];\n                    for (var i = 0; i < data.length; i++) {\n                        if (data[i][parentIdField] === parentId) {\n                            childrenMap[parentId].push(data[i]);\n                        }\n                    }\n                }\n            },\n            _getDataMaps: function () {\n                var that = this;\n                that._dataMaps = that._dataMaps || {};\n                return that._dataMaps;\n            },\n            _createTreeView: function (data, options) {\n                var view = new TreeView(data, extend(options, this._defaultTreeModelOptions()));\n                return view;\n            },\n            _defaultTreeModelOptions: function () {\n                var that = this;\n                var modelOptions = that._modelOptions();\n                return {\n                    defaultParentId: that._defaultParentId(),\n                    idField: that._modelIdField(),\n                    parentIdField: that._modelParentIdField(),\n                    expanded: modelOptions.expanded\n                };\n            },\n            _defaultDataItemType: function () {\n                return this.reader.model || kendo.data.ObservableObject;\n            },\n            _calculateAggregates: function (data, options) {\n                options = options || {};\n                var that = this;\n                var result = {};\n                var item, subtree, i;\n                var filter = options.filter;\n                var skip = options.skip;\n                var take = options.take;\n                var maxDepth = !isUndefined(skip) && !isUndefined(take) ? skip + take : Infinity;\n                var pageable = that._isPageable();\n                var filteredChildrenMap = options.filteredChildrenMap;\n                var childrenMap = options.childrenMap;\n                var pageableChildrenMap;\n                if (pageable) {\n                    if (isUndefined(options.aggregate)) {\n                        return result;\n                    }\n                    if (filteredChildrenMap) {\n                        pageableChildrenMap = filteredChildrenMap;\n                    } else if (childrenMap) {\n                        pageableChildrenMap = childrenMap;\n                    } else {\n                        pageableChildrenMap = that.childrenMap(that._getData());\n                    }\n                }\n                if (!pageable && filter) {\n                    data = Query.process(data, {\n                        filter: filter,\n                        filterCallback: proxy(this._filterCallback, this)\n                    }).data;\n                }\n                var map = pageable ? pageableChildrenMap : that._childrenMap(data);\n                result[this._defaultParentId()] = new Query(this._subtree(map, this._defaultParentId())).aggregate(options.aggregate);\n                for (i = 0; i < data.length; i++) {\n                    if (i >= maxDepth) {\n                        break;\n                    }\n                    item = data[i];\n                    subtree = this._subtree(map, item.id);\n                    result[item.id] = new Query(subtree).aggregate(options.aggregate);\n                }\n                return result;\n            },\n            _queryProcess: function (data, options) {\n                var that = this;\n                var result = {};\n                options = options || {};\n                options.filterCallback = proxy(this._filterCallback, this);\n                if (that._isPageable()) {\n                    return that._processPageableQuery(data, options);\n                } else {\n                    var defaultParentId = this._defaultParentId();\n                    result = Query.process(data, options);\n                    var map = this._childrenMap(result.data);\n                    var hasLoadedChildren, i, item, children;\n                    data = map[defaultParentId] || [];\n                    for (i = 0; i < data.length; i++) {\n                        item = data[i];\n                        if (item.id === defaultParentId) {\n                            continue;\n                        }\n                        children = map[item.id];\n                        hasLoadedChildren = !!(children && children.length);\n                        if (!item.loaded()) {\n                            item.loaded(hasLoadedChildren || !item.hasChildren);\n                        }\n                        if (item.loaded() || item.hasChildren !== true) {\n                            item.hasChildren = hasLoadedChildren;\n                        }\n                        if (hasLoadedChildren) {\n                            data = data.slice(0, i + 1).concat(children, data.slice(i + 1));\n                        }\n                    }\n                    result.data = data;\n                }\n                return result;\n            },\n            _processPageableQuery: function (data, options) {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                var result;\n                var filteredChildrenMap;\n                if (that._getData() !== data || !dataMaps.children || !dataMaps.ids) {\n                    dataMaps = that._initDataMaps(that._getData());\n                }\n                options.childrenMap = dataMaps.children || {};\n                options.idsMap = dataMaps.ids || {};\n                result = that._processTreeQuery(data, options);\n                that._replaceWithObservedData(result.data, data);\n                that._processDataItemsState(result.data, result.childrenMap);\n                that._replaceItemsInDataMaps(result.data);\n                result.dataToAggregate = that._dataToAggregate(result.data, options);\n                if (options.filter) {\n                    filteredChildrenMap = result.filteredChildrenMap;\n                    that._replaceInMapWithObservedData(filteredChildrenMap, data);\n                    that._setFilteredChildrenMap(filteredChildrenMap);\n                    options.filteredChildrenMap = filteredChildrenMap;\n                }\n                return result;\n            },\n            _dataToAggregate: function (data) {\n                var that = this;\n                var firstDataItem = data[0] || {};\n                var firstItemParents = that._parentNodes(firstDataItem);\n                var dataToAggregate = firstItemParents.concat(data);\n                return dataToAggregate;\n            },\n            _replaceItemsInDataMaps: function (observableArray) {\n                var that = this;\n                var view = isArray(observableArray) ? observableArray : [observableArray];\n                var itemType = that._defaultDataItemType();\n                var defaultParentId = that._defaultParentId();\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var dataMaps = that._getDataMaps();\n                var item;\n                var parents;\n                var directParent;\n                for (var viewIndex = 0; viewIndex < view.length; viewIndex++) {\n                    item = view[viewIndex];\n                    if (!(item instanceof itemType)) {\n                        continue;\n                    }\n                    that._insertInIdsMap(item);\n                    parents = that._parentNodes(item);\n                    directParent = parents && parents.length ? parents[parents.length - 1] : undefined;\n                    if (item[parentIdField] === defaultParentId) {\n                        that._replaceInMap(dataMaps.children, defaultParentId, item, itemType);\n                    } else if (directParent) {\n                        that._replaceInMap(dataMaps.children, directParent[idField], item, itemType);\n                    }\n                }\n            },\n            _replaceInMap: function (map, id, replacement, itemType) {\n                var idField = this._modelIdField();\n                map[id] = map[id] || [];\n                itemType = itemType || this._defaultDataItemType();\n                var itemInArray = map[id].filter(function (element) {\n                    return replacement[idField] === element[idField];\n                })[0];\n                var itemIndex = itemInArray ? map[id].indexOf(itemInArray) : -1;\n                if (itemIndex !== -1 && !(itemInArray instanceof itemType)) {\n                    map[id][itemIndex] = replacement;\n                }\n            },\n            _replaceWithObservedData: function (dataToReplace, replacementArray) {\n                var that = this;\n                var idsMap = that._getDataMaps().ids || {};\n                var idField = that._modelIdField();\n                var itemType = that._defaultDataItemType();\n                var itemToReplace;\n                var itemToReplaceId;\n                var dataItem;\n                var dataItemIndex;\n                var observableItem;\n                for (var i = 0; i < dataToReplace.length; i++) {\n                    itemToReplace = dataToReplace[i];\n                    itemToReplaceId = itemToReplace[idField];\n                    if (!(itemToReplace instanceof itemType)) {\n                        if (!(idsMap[itemToReplaceId] instanceof itemType)) {\n                            dataItem = that._getById(itemToReplaceId);\n                            dataItemIndex = replacementArray.indexOf(dataItem);\n                            if (dataItem && dataItemIndex !== -1) {\n                                observableItem = replacementArray.at(dataItemIndex);\n                                dataToReplace[i] = observableItem;\n                            }\n                        } else {\n                            dataToReplace[i] = idsMap[itemToReplaceId];\n                        }\n                    }\n                }\n            },\n            _replaceInMapWithObservedData: function (map, replacementArray) {\n                var that = this;\n                for (var key in map) {\n                    that._replaceWithObservedData(map[key], replacementArray);\n                }\n            },\n            _insertInDataMaps: function (item) {\n                var that = this;\n                if (that._isPageable()) {\n                    that._insertInIdsMap(item);\n                    that._insertInChildrenMap(item);\n                }\n            },\n            _insertInIdsMap: function (item) {\n                var that = this;\n                var idsMap = that._getIdsMap();\n                var idField = that._modelIdField();\n                if (!isUndefined(item[idField])) {\n                    idsMap[item[idField]] = item;\n                }\n            },\n            _insertInChildrenMap: function (item, index) {\n                var that = this;\n                var childrenMap = that._getChildrenMap() || {};\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var itemId = item[idField];\n                var parentId = item[parentIdField];\n                index = index || 0;\n                childrenMap[itemId] = childrenMap[itemId] || [];\n                childrenMap[parentId] = childrenMap[parentId] || [];\n                childrenMap[parentId].splice(index, 0, item);\n            },\n            _removeFromDataMaps: function (items) {\n                var that = this;\n                items = isArray(items) ? items : [items];\n                if (that._isPageable()) {\n                    for (var i = 0; i < items.length; i++) {\n                        that._removeFromIdsMap(items[i]);\n                        that._removeFromChildrenMap(items[i]);\n                    }\n                }\n            },\n            _removeFromIdsMap: function (item) {\n                var that = this;\n                var idsMap = that._getIdsMap();\n                var idField = that._modelIdField();\n                if (!isUndefined(item[idField])) {\n                    idsMap[item[idField]] = undefined;\n                }\n            },\n            _removeFromChildrenMap: function (item) {\n                var that = this;\n                var childrenMap = that._getChildrenMap() || {};\n                var parentIdField = that._modelParentIdField();\n                var parentId = item[parentIdField];\n                childrenMap[parentId] = childrenMap[parentId] || [];\n                var itemIndex = that._indexInChildrenMap(item);\n                if (itemIndex !== -1) {\n                    childrenMap[parentId].splice(itemIndex, 1);\n                }\n            },\n            _indexInChildrenMap: function (item) {\n                var that = this;\n                return that._itemIndexInMap(item, that._getChildrenMap());\n            },\n            _itemIndexInMap: function (item, dataMap) {\n                var that = this;\n                var map = dataMap || {};\n                var parentIdField = that._modelParentIdField();\n                var parentId = item[parentIdField];\n                map[parentId] = map[parentId] || [];\n                var itemInArray = map[parentId].filter(function (element) {\n                    return item.uid === element.uid;\n                })[0];\n                var itemIndex = itemInArray ? map[parentId].indexOf(itemInArray) : -1;\n                return itemIndex;\n            },\n            _getById: function (id) {\n                var that = this;\n                var idField = that._modelIdField();\n                var data = that._getData();\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i][idField] === id) {\n                        return data[i];\n                    }\n                }\n            },\n            _isLastItemInView: function (dataItem) {\n                var view = this.view();\n                return view.length && view[view.length - 1] === dataItem;\n            },\n            _defaultPageableQueryOptions: function () {\n                var that = this;\n                var dataMaps = that._getDataMaps();\n                var options = {\n                    skip: that.skip(),\n                    take: that.take(),\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that.sort(),\n                    filter: that.filter(),\n                    group: that.group(),\n                    aggregate: that.aggregate(),\n                    filterCallback: proxy(that._filterCallback, that),\n                    childrenMap: dataMaps.children,\n                    idsMap: dataMaps.ids\n                };\n                return options;\n            },\n            _isPageable: function () {\n                var pageSize = this.pageSize();\n                return !isUndefined(pageSize) && pageSize > 0 && !this.options.serverPaging;\n            },\n            _updateTotalForAction: function (action, items) {\n                var that = this;\n                DataSource.fn._updateTotalForAction.call(that, action, items);\n                if (that._isPageable()) {\n                    that._updateCollapsedTotalForAction(action, items);\n                }\n            },\n            _updateCollapsedTotalForAction: function (action, items) {\n                var that = this;\n                var total = parseInt(that._collapsedTotal, 10);\n                if (!isNumber(that._collapsedTotal)) {\n                    that._calculateCollapsedTotal();\n                    return;\n                }\n                if (action === 'add') {\n                    total += items.length;\n                } else if (action === 'remove') {\n                    total -= items.length;\n                } else if (action !== 'itemchange' && action !== 'sync' && !that.options.serverPaging) {\n                    total = that._calculateCollapsedTotal();\n                } else if (action === 'sync') {\n                    total = that._calculateCollapsedTotal();\n                }\n                that._collapsedTotal = total;\n            },\n            _setFilterTotal: function (filterTotal, setDefaultValue) {\n                var that = this;\n                DataSource.fn._setFilterTotal.call(that, filterTotal, setDefaultValue);\n                that._setFilterCollapsedTotal(filterTotal);\n            },\n            _setFilterCollapsedTotal: function (filterTotal) {\n                var that = this;\n                if (!that.options.serverFiltering) {\n                    if (filterTotal !== undefined) {\n                        that._collapsedTotal = filterTotal;\n                    } else {\n                        if (that._getFilteredChildrenMap()) {\n                            that._calculateCollapsedTotal();\n                        }\n                        that._setFilteredChildrenMap(undefined);\n                    }\n                }\n            },\n            collapsedTotal: function () {\n                var that = this;\n                if (!isUndefined(that._collapsedTotal)) {\n                    return that._collapsedTotal;\n                }\n                return that._calculateCollapsedTotal();\n            },\n            _calculateCollapsedTotal: function () {\n                var that = this;\n                var data = that._dataWithoutCollapsedSubtrees();\n                if (data.length) {\n                    that._collapsedTotal = data.length;\n                }\n                return that._collapsedTotal;\n            },\n            _dataWithoutCollapsedSubtrees: function () {\n                return this._removeCollapsedSubtrees(this._getData());\n            },\n            _removeCollapsedSubtrees: function (data) {\n                var that = this;\n                var view = that._createTreeView(data);\n                var result = view.removeCollapsedSubtreesFromRootNodes({\n                    expanded: that._modelOptions().expanded,\n                    childrenMap: that._getChildrenMap()\n                });\n                return result;\n            },\n            _processTreeQuery: function (data, options) {\n                var result = TreeQuery.process(data, extend(options, this._defaultTreeModelOptions(), { processFromRootNodes: true }));\n                return result;\n            },\n            _processDataItemsState: function (data, childrenMap) {\n                var dataLength = data.length;\n                var i;\n                for (i = 0; i < dataLength; i++) {\n                    this._processDataItemState(data[i], childrenMap);\n                }\n            },\n            _processDataItemState: function (dataItem, childrenMap) {\n                var defaultParentId = this._defaultParentId();\n                if (dataItem.id === defaultParentId) {\n                    return;\n                }\n                var children = childrenMap[dataItem.id] || [];\n                var hasLoadedChildren = !!(children && children.length);\n                if (!dataItem.loaded) {\n                    return;\n                }\n                if (!dataItem.loaded()) {\n                    dataItem.loaded(hasLoadedChildren || !dataItem.hasChildren);\n                }\n                if (dataItem.loaded() || dataItem.hasChildren !== true) {\n                    dataItem.hasChildren = hasLoadedChildren;\n                }\n            },\n            _queueRequest: function (options, callback) {\n                callback.call(this);\n            },\n            _modelLoaded: function (id) {\n                var model = this.get(id);\n                model.loaded(true);\n                model.hasChildren = this.childNodes(model).length > 0;\n            },\n            _modelError: function (id, e) {\n                this.get(id)._error = e;\n            },\n            success: function (data, requestParams) {\n                if (!requestParams || typeof requestParams.id == 'undefined') {\n                    this._data = this._observe([]);\n                }\n                DataSource.fn.success.call(this, data, requestParams);\n                this._total = this._data.length;\n            },\n            load: function (model) {\n                var method = '_query';\n                var remote = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;\n                var defaultPromise = $.Deferred().resolve().promise();\n                if (model.loaded()) {\n                    if (remote) {\n                        return defaultPromise;\n                    }\n                } else if (model.hasChildren) {\n                    method = 'read';\n                    this._removeChildData(model);\n                }\n                return this[method]({ id: model.id }).done(proxy(this._modelLoaded, this, model.id)).fail(proxy(this._modelError, this, model.id));\n            },\n            contains: function (root, child) {\n                var that = this;\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var rootId = root[idField];\n                var pageable = that._isPageable();\n                while (child) {\n                    if (child[parentIdField] === rootId) {\n                        return true;\n                    }\n                    child = pageable ? that._parentNode(child) : that.parentNode(child);\n                }\n                return false;\n            },\n            _byParentId: function (id, defaultId) {\n                var result = [];\n                var view = this.view();\n                var current;\n                if (id === defaultId) {\n                    return [];\n                }\n                for (var i = 0; i < view.length; i++) {\n                    current = view.at(i);\n                    if (current.parentId == id) {\n                        result.push(current);\n                    }\n                }\n                return result;\n            },\n            _defaultParentId: function () {\n                return this.reader.model.fn.defaults[this.reader.model.parentIdField];\n            },\n            _modelOptions: function () {\n                var modelOptions = (this.options.schema || {}).model || {};\n                return modelOptions;\n            },\n            _modelIdField: function () {\n                var modelOptions = this._modelOptions();\n                return modelOptions.id || 'id';\n            },\n            _modelParentIdField: function () {\n                var modelOptions = this._modelOptions();\n                return modelOptions.parentId || PARENTIDFIELD;\n            },\n            childNodes: function (model) {\n                return this._byParentId(model.id, this._defaultParentId());\n            },\n            rootNodes: function () {\n                return this._byParentId(this._defaultParentId());\n            },\n            _rootNode: function (child) {\n                return this._parentNodes(child)[0];\n            },\n            _pageableRootNodes: function (options) {\n                options = options || {};\n                var that = this;\n                var defaultParentId = that._defaultParentId();\n                var parentIdField = that._modelParentIdField();\n                var result = [];\n                var nodesWithoutParentInView = that._nodesWithoutParentInView(options);\n                var node;\n                var root;\n                for (var i = 0; i < nodesWithoutParentInView.length; i++) {\n                    node = nodesWithoutParentInView[i];\n                    if (node[parentIdField] === defaultParentId) {\n                        result.push(node);\n                    } else {\n                        root = that._rootNode(node);\n                        if (root && result.indexOf(root) === -1) {\n                            result.push(root);\n                        }\n                    }\n                }\n                return result;\n            },\n            parentNode: function (model) {\n                return this.get(model.parentId);\n            },\n            _parentNode: function (child) {\n                var that = this;\n                var parentIdField = that._modelParentIdField();\n                var idsMap = that._initIdsMap(that._getData());\n                var parentId = child[parentIdField];\n                var parent = idsMap[parentId] || that._getById(parentId);\n                return parent;\n            },\n            _parentNodes: function (child) {\n                var that = this;\n                var parent = that._parentNode(child);\n                var parents = [];\n                while (parent) {\n                    parents.unshift(parent);\n                    parent = that._parentNode(parent);\n                }\n                return parents;\n            },\n            _parentNodesNotInView: function () {\n                var that = this;\n                var view = that.view();\n                var result = [];\n                var defaultParentId = that._defaultParentId();\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var parentInView;\n                var parents = [];\n                var directParent;\n                var dataItem;\n                var dataItemId;\n                var dataItemParentId;\n                for (var i = 0; i < view.length; i++) {\n                    dataItem = view[i];\n                    dataItemId = dataItem[idField];\n                    dataItemParentId = dataItem[parentIdField];\n                    parentInView = that._parentInView(dataItemParentId);\n                    if (!parentInView && dataItemParentId !== defaultParentId) {\n                        parents = that._parentNodes(dataItem);\n                        directParent = parents && parents.length ? parents[parents.length - 1] : that._getById(dataItemParentId);\n                        if (directParent && result.indexOf(directParent) === -1) {\n                            result.push(directParent);\n                        }\n                    }\n                }\n                return result;\n            },\n            _nodesWithoutParentInView: function (options) {\n                options = options || {};\n                var that = this;\n                var view = that.view();\n                var childrenMap = options.childrenMap || that.childrenMap(that._getData());\n                var idField = that._modelIdField();\n                var parentIdField = that._modelParentIdField();\n                var dataItem;\n                var parentInView;\n                var children = [];\n                var result = [];\n                for (var i = 0; i < view.length; i++) {\n                    dataItem = view[i];\n                    children = childrenMap[dataItem[idField]];\n                    parentInView = that._parentInView(dataItem[parentIdField]);\n                    if (!parentInView) {\n                        result.push(dataItem);\n                    }\n                }\n                return result;\n            },\n            _parentInView: function (parentId) {\n                var view = this.view();\n                for (var i = 0; i < view.length; i++) {\n                    if (view[i].id === parentId) {\n                        return view[i];\n                    }\n                }\n            },\n            level: function (model) {\n                var result = -1;\n                if (!(model instanceof TreeListModel)) {\n                    model = this.get(model);\n                }\n                do {\n                    model = this.parentNode(model);\n                    result++;\n                } while (model);\n                return result;\n            },\n            _pageableModelLevel: function (model) {\n                var that = this;\n                if (!model || !that._isPageable()) {\n                    return 0;\n                }\n                var parents = that._parentNodes(model);\n                return parents.length;\n            },\n            filter: function (value) {\n                var baseFilter = DataSource.fn.filter;\n                if (value === undefined) {\n                    return baseFilter.call(this, value);\n                }\n                baseFilter.call(this, value);\n            },\n            _pageableQueryOptions: function (options) {\n                var dataMaps = this._getDataMaps();\n                options.childrenMap = dataMaps.children;\n                options.idsMap = dataMaps.ids;\n                return options;\n            },\n            _flatData: function (data, skip) {\n                skip = this._isPageable() ? true : skip;\n                return DataSource.fn._flatData.call(this, data, skip);\n            },\n            data: function (data) {\n                var that = this;\n                var result = DataSource.fn.data.call(that, data);\n                if (that._isPageable()) {\n                    that._initDataMaps(that._getData());\n                    that._calculateCollapsedTotal();\n                }\n                return result;\n            },\n            cancelChanges: function (model) {\n                var that = this;\n                DataSource.fn.cancelChanges.call(that, model);\n                that._restorePageSizeAfterAddChild();\n            },\n            _modelCanceled: function (model) {\n                var that = this;\n                if (that._isPageable()) {\n                    that._removeFromDataMaps(model);\n                }\n            },\n            _changesCanceled: function () {\n                var that = this;\n                if (that._isPageable()) {\n                    that._initDataMaps(that._getData());\n                }\n            },\n            _setAddChildPageSize: function () {\n                var that = this;\n                var queryOptions = {};\n                if (that._isPageable()) {\n                    that._addChildPageSize = that.pageSize() + 1;\n                    queryOptions = that._defaultPageableQueryOptions();\n                    queryOptions.take = that._addChildPageSize;\n                    queryOptions.pageSize = that._addChildPageSize;\n                    that._query(queryOptions);\n                }\n            },\n            _restorePageSizeAfterAddChild: function () {\n                var that = this;\n                var queryOptions = {};\n                if (that._isPageable()) {\n                    if (!isUndefined(that._addChildPageSize)) {\n                        queryOptions = that._defaultPageableQueryOptions();\n                        queryOptions.take = that._addChildPageSize - 1;\n                        queryOptions.pageSize = that._addChildPageSize - 1;\n                        that._query(queryOptions);\n                    }\n                }\n                that._addChildPageSize = undefined;\n            },\n            sync: function () {\n                var that = this;\n                return DataSource.fn.sync.call(that).then(function () {\n                    that._restorePageSizeAfterAddChild();\n                });\n            },\n            _syncEnd: function () {\n                var that = this;\n                if (that._isPageable()) {\n                    that._initDataMaps(that._getData());\n                }\n            }\n        });\n        TreeListDataSource.create = function (options) {\n            if ($.isArray(options)) {\n                options = { data: options };\n            } else if (options instanceof ObservableArray) {\n                options = { data: options.toJSON() };\n            }\n            return options instanceof TreeListDataSource ? options : new TreeListDataSource(options);\n        };\n        function isCellVisible() {\n            return this.style.display !== 'none';\n        }\n        function sortCells(cells) {\n            var indexAttr = kendo.attr('index');\n            return cells.sort(function (a, b) {\n                a = $(a);\n                b = $(b);\n                var indexA = a.attr(indexAttr);\n                var indexB = b.attr(indexAttr);\n                if (indexA === undefined) {\n                    indexA = $(a).index();\n                }\n                if (indexB === undefined) {\n                    indexB = $(b).index();\n                }\n                indexA = parseInt(indexA, 10);\n                indexB = parseInt(indexB, 10);\n                return indexA > indexB ? 1 : indexA < indexB ? -1 : 0;\n            });\n        }\n        function leafDataCells(container) {\n            var rows = container.find('>tr:not(.k-filter-row)');\n            var filter = function () {\n                var el = $(this);\n                return !el.hasClass('k-group-cell') && !el.hasClass('k-hierarchy-cell');\n            };\n            var cells = $();\n            if (rows.length > 1) {\n                cells = rows.find('th[data-index]').filter(filter);\n            }\n            cells = cells.add(rows.last().find('th').filter(filter));\n            return sortCells(cells);\n        }\n        function createPlaceholders(options) {\n            var spans = [];\n            var className = options.className;\n            for (var i = 0, level = options.level; i < level; i++) {\n                spans.push(kendoDomElement('span', { className: className }));\n            }\n            return spans;\n        }\n        function columnsWidth(cols) {\n            var colWidth, width = 0;\n            for (var idx = 0, length = cols.length; idx < length; idx++) {\n                colWidth = cols[idx].style.width;\n                if (colWidth && colWidth.indexOf('%') == -1) {\n                    width += parseInt(colWidth, 10);\n                }\n            }\n            return width;\n        }\n        function syncTableHeight(table1, table2) {\n            table1 = table1[0];\n            table2 = table2[0];\n            if (table1.rows.length && table2.rows.length && table1.rows.length !== table2.rows.length) {\n                var lockedHeigth = table1.offsetHeight;\n                var tableHeigth = table2.offsetHeight;\n                var row;\n                var diff;\n                if (lockedHeigth > tableHeigth) {\n                    row = table2.rows[table2.rows.length - 1];\n                    diff = lockedHeigth - tableHeigth;\n                } else {\n                    row = table1.rows[table1.rows.length - 1];\n                    diff = tableHeigth - lockedHeigth;\n                }\n                row.style.height = row.offsetHeight + diff + 'px';\n            }\n        }\n        var TreeListPager = ui.Pager.extend({\n            options: { name: 'TreeListPager' },\n            totalPages: function () {\n                var that = this;\n                var dataSource = that.dataSource;\n                if (dataSource && dataSource._filter) {\n                    return ui.Pager.fn.totalPages.call(that);\n                }\n                return Math.ceil((that._collapsedTotal() || 0) / (that.pageSize() || 1));\n            },\n            _createDataSource: function (options) {\n                this.dataSource = kendo.data.TreeListDataSource.create(options.dataSource);\n            },\n            _collapsedTotal: function () {\n                var dataSource = this.dataSource;\n                return dataSource ? dataSource.collapsedTotal() || 0 : 0;\n            }\n        });\n        var Editor = kendo.Observable.extend({\n            init: function (element, options) {\n                kendo.Observable.fn.init.call(this);\n                options = this.options = extend(true, {}, this.options, options);\n                this.element = element;\n                this.bind(this.events, options);\n                this.model = this.options.model;\n                this.fields = this._fields(this.options.columns);\n                this._initContainer();\n                this.createEditable();\n            },\n            events: [],\n            _initContainer: function () {\n                this.wrapper = this.element;\n            },\n            createEditable: function () {\n                var options = this.options;\n                this.editable = new ui.Editable(this.wrapper, {\n                    fields: this.fields,\n                    target: options.target,\n                    clearContainer: options.clearContainer,\n                    model: this.model,\n                    change: options.change\n                });\n            },\n            _isEditable: function (column) {\n                return isColumnEditable(column, this.model);\n            },\n            _fields: function (columns) {\n                var fields = [];\n                var idx, length, column;\n                for (idx = 0, length = columns.length; idx < length; idx++) {\n                    column = columns[idx];\n                    if (this._isEditable(column)) {\n                        fields.push({\n                            field: column.field,\n                            format: column.format,\n                            editor: column.editor\n                        });\n                    }\n                }\n                return fields;\n            },\n            end: function () {\n                return this.editable.end();\n            },\n            close: function () {\n                this.destroy();\n            },\n            destroy: function () {\n                this.editable.destroy();\n                this.editable.element.find('[' + kendo.attr('container-for') + ']').empty().end().removeAttr(kendo.attr('role'));\n                this.model = this.wrapper = this.element = this.columns = this.editable = null;\n            }\n        });\n        var PopupEditor = Editor.extend({\n            init: function (element, options) {\n                Editor.fn.init.call(this, element, options);\n                this._attachHandlers();\n                kendo.cycleForm(this.wrapper);\n                this.open();\n            },\n            events: [\n                CANCEL,\n                SAVE\n            ],\n            options: {\n                window: {\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: 'Edit',\n                    visible: false\n                }\n            },\n            _initContainer: function () {\n                var options = this.options;\n                var formContent = [];\n                this.wrapper = $('<div class=\"k-popup-edit-form\"/>').attr(kendo.attr('uid'), this.model.uid).append('<div class=\"k-edit-form-container\"/>');\n                if (options.template) {\n                    this._appendTemplate(formContent);\n                    this.fields = [];\n                } else {\n                    this._appendFields(formContent);\n                }\n                this._appendButtons(formContent);\n                new kendoDom.Tree(this.wrapper.children()[0]).render(formContent);\n                this.wrapper.appendTo(options.appendTo);\n                this.window = new ui.Window(this.wrapper, options.window);\n            },\n            _appendTemplate: function (form) {\n                var template = this.options.template;\n                if (typeof template === STRING) {\n                    template = kendo.unescape(template);\n                }\n                template = kendo.template(template)(this.model);\n                form.push(kendoHtmlElement(template));\n            },\n            _appendFields: function (form) {\n                var idx, length, column;\n                var columns = this.options.columns;\n                for (idx = 0, length = columns.length; idx < length; idx++) {\n                    column = columns[idx];\n                    if (column.command) {\n                        continue;\n                    }\n                    form.push(kendoHtmlElement('<div class=\"k-edit-label\"><label for=\"' + column.field + '\">' + (column.title || column.field || '') + '</label></div>'));\n                    if (this._isEditable(column)) {\n                        form.push(kendoHtmlElement('<div ' + kendo.attr('container-for') + '=\"' + column.field + '\" class=\"k-edit-field\"></div>'));\n                    } else {\n                        form.push(kendoDomElement('div', { 'class': 'k-edit-field' }, [this.options.fieldRenderer(column, this.model)]));\n                    }\n                }\n            },\n            _appendButtons: function (form) {\n                form.push(kendoDomElement('div', { 'class': 'k-edit-buttons k-state-default' }, this.options.commandRenderer()));\n            },\n            _attachHandlers: function () {\n                var closeHandler = this._cancelProxy = proxy(this._cancel, this);\n                this.wrapper.on(CLICK + NS, '.k-grid-cancel', this._cancelProxy);\n                this._saveProxy = proxy(this._save, this);\n                this.wrapper.on(CLICK + NS, '.k-grid-update', this._saveProxy);\n                this.window.bind('close', function (e) {\n                    if (e.userTriggered) {\n                        closeHandler(e);\n                    }\n                });\n            },\n            _detachHandlers: function () {\n                this._cancelProxy = null;\n                this._saveProxy = null;\n                this.wrapper.off(NS);\n            },\n            _cancel: function (e) {\n                this.trigger(CANCEL, e);\n            },\n            _save: function () {\n                this.trigger(SAVE);\n            },\n            open: function () {\n                this.window.center().open();\n            },\n            close: function () {\n                this.window.bind('deactivate', proxy(this.destroy, this)).close();\n            },\n            destroy: function () {\n                this.window.destroy();\n                this.window = null;\n                this._detachHandlers();\n                Editor.fn.destroy.call(this);\n            }\n        });\n        var IncellEditor = Editor.extend({\n            destroy: function () {\n                var that = this;\n                that.editable.destroy();\n                that.editable.element.off().empty().removeAttr(kendo.attr('role'));\n                that.model = that.wrapper = that.element = that.columns = that.editable = null;\n            }\n        });\n        var TreeList = DataBoundWidget.extend({\n            init: function (element, options) {\n                DataBoundWidget.fn.init.call(this, element, options);\n                isRtl = kendo.support.isRtl(element);\n                this._dataSource(this.options.dataSource);\n                this._aria();\n                this._columns();\n                this._layout();\n                this._navigatable();\n                this._selectable();\n                this._sortable();\n                this._resizable();\n                this._filterable();\n                this._attachEvents();\n                this._toolbar();\n                this._scrollable();\n                this._reorderable();\n                this._columnMenu();\n                this._minScreenSupport();\n                this._draggable();\n                this._pageable();\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n                if (this._hasLockedColumns) {\n                    var widget = this;\n                    this.wrapper.addClass('k-grid-lockedcolumns');\n                    this._resizeHandler = function () {\n                        widget.resize();\n                    };\n                    $(window).on('resize' + NS, this._resizeHandler);\n                }\n                kendo.notify(this);\n            },\n            _draggable: function () {\n                var that = this;\n                var editable = this.options.editable;\n                var dataSource = that.dataSource;\n                var idField = dataSource._modelIdField();\n                var parentIdField = dataSource._modelParentIdField();\n                var pageable = that._isPageable();\n                if (!editable || !editable.move) {\n                    return;\n                }\n                if (kendo.support.touch && editable.move) {\n                    that.element.find(DOT + classNames.gridContentWrap).css('touch-action', 'none');\n                }\n                this._dragging = new kendo.ui.HierarchicalDragAndDrop(this.wrapper, {\n                    $angular: this.$angular,\n                    autoScroll: true,\n                    filter: 'tbody>tr',\n                    itemSelector: 'tr',\n                    allowedContainers: this.wrapper,\n                    hintText: function (row) {\n                        var text = function () {\n                            return $(this).text();\n                        };\n                        var separator = '<span class=\\'k-header k-drag-separator\\' />';\n                        return row.children('td').map(text).toArray().join(separator);\n                    },\n                    contains: proxy(function (source, destination) {\n                        var dest = this.dataItem(destination);\n                        var src = this.dataItem(source);\n                        return src == dest || this.dataSource.contains(src, dest);\n                    }, this),\n                    itemFromTarget: function (target) {\n                        var tr = target.closest('tr');\n                        return {\n                            item: tr,\n                            content: tr\n                        };\n                    },\n                    dragstart: proxy(function (source) {\n                        this.wrapper.addClass('k-treelist-dragging');\n                        var model = this.dataItem(source);\n                        return this.trigger(DRAGSTART, { source: model });\n                    }, this),\n                    drag: proxy(function (e) {\n                        e.source = this.dataItem(e.source);\n                        this.trigger(DRAG, e);\n                    }, this),\n                    drop: proxy(function (e) {\n                        e.source = this.dataItem(e.source);\n                        e.destination = this.dataItem(e.destination);\n                        this.wrapper.removeClass('k-treelist-dragging');\n                        return this.trigger(DROP, e);\n                    }, this),\n                    dragend: proxy(function (e) {\n                        var dest = this.dataItem(e.destination);\n                        var src = this.dataItem(e.source);\n                        var originalSrcParentId = src[parentIdField];\n                        var originalSrcIndex = dataSource._indexInChildrenMap(src);\n                        if (pageable) {\n                            dataSource._removeFromChildrenMap(src);\n                            src[parentIdField] = dest ? dest[idField] : null;\n                            dataSource._initChildrenMapForParent(dest);\n                            src[parentIdField] = originalSrcParentId;\n                        }\n                        var isPrevented = src.set('parentId', dest ? dest.id : null);\n                        if (pageable && isPrevented) {\n                            dataSource._removeFromChildrenMap(src);\n                            src[parentIdField] = originalSrcParentId;\n                            dataSource._removeFromChildrenMap(src);\n                            dataSource._insertInChildrenMap(src, originalSrcIndex);\n                        }\n                        e.source = src;\n                        e.destination = dest;\n                        this.trigger(DRAGEND, e);\n                    }, this),\n                    reorderable: false,\n                    dropHintContainer: function (item) {\n                        return item.children('td:eq(1)');\n                    },\n                    dropPositionFrom: function (dropHint) {\n                        return dropHint.prevAll('.k-i-none').length > 0 ? 'after' : 'before';\n                    }\n                });\n            },\n            itemFor: function (model) {\n                if (typeof model == 'number') {\n                    model = this.dataSource.get(model);\n                }\n                return this.tbody.find('[' + kendo.attr('uid') + '=' + model.uid + ']');\n            },\n            _itemFor: function (model) {\n                var that = this;\n                var table = that.lockedContent ? that.lockedTable : that.table;\n                if (typeof model == 'number') {\n                    model = this.dataSource.get(model);\n                }\n                return table.find('[' + kendo.attr('uid') + '=' + model.uid + ']');\n            },\n            _scrollable: function () {\n                if (this.options.scrollable) {\n                    var scrollables = this.thead.closest('.k-grid-header-wrap');\n                    var lockedContent = $(this.lockedContent).bind('DOMMouseScroll' + NS + ' mousewheel' + NS, proxy(this._wheelScroll, this));\n                    this.content.bind('scroll' + NS, function () {\n                        scrollables.scrollLeft(this.scrollLeft);\n                        lockedContent.scrollTop(this.scrollTop);\n                    });\n                    var touchScroller = kendo.touchScroller(this.content);\n                    if (touchScroller && touchScroller.movable) {\n                        this._touchScroller = touchScroller;\n                        touchScroller.movable.bind('change', function (e) {\n                            scrollables.scrollLeft(-e.sender.x);\n                            if (lockedContent) {\n                                lockedContent.scrollTop(-e.sender.y);\n                            }\n                        });\n                    }\n                }\n            },\n            _wheelScroll: function (e) {\n                if (e.ctrlKey) {\n                    return;\n                }\n                var delta = kendo.wheelDeltaY(e);\n                var lockedDiv = $(e.currentTarget);\n                if (delta) {\n                    if (lockedDiv[0].scrollHeight > lockedDiv[0].clientHeight && (lockedDiv[0].scrollTop < lockedDiv[0].scrollHeight - lockedDiv[0].clientHeight && delta < 0 || lockedDiv[0].scrollTop > 0 && delta > 0)) {\n                        e.preventDefault();\n                    }\n                    lockedDiv.one('wheel' + NS, false);\n                    this.content.scrollTop(this.content.scrollTop() + -delta);\n                }\n            },\n            _progress: function () {\n                var messages = this.options.messages;\n                if (!this.tbody.find('tr').length) {\n                    this._showStatus(kendo.template('<span class=\\'#= className #\\' /> #: messages.loading #')({\n                        className: classNames.icon + ' ' + classNames.loading,\n                        messages: messages\n                    }));\n                }\n            },\n            _error: function (e) {\n                if (!this.dataSource.rootNodes().length) {\n                    this._render({ error: e });\n                }\n            },\n            refresh: function (e) {\n                e = e || {};\n                if (e.action == 'itemchange' && this.editor) {\n                    return;\n                }\n                if (this.trigger(DATABINDING)) {\n                    return;\n                }\n                var current = $(this.current());\n                var isCurrentInHeader = false;\n                var currentIndex;\n                this._cancelEditor();\n                this._render();\n                this._adjustHeight();\n                if (this.options.navigatable) {\n                    if (this._isActiveInTable() || this.editor) {\n                        isCurrentInHeader = current.is('th');\n                        currentIndex = Math.max(this.cellIndex(current), 0);\n                    }\n                    this._restoreCurrent(currentIndex, isCurrentInHeader);\n                }\n                this.trigger(DATABOUND);\n            },\n            _angularFooters: function (command) {\n                var i, footer, aggregates;\n                var allAggregates = this.dataSource.aggregates();\n                var footerRows = this._footerItems();\n                for (i = 0; i < footerRows.length; i++) {\n                    footer = footerRows.eq(i);\n                    aggregates = allAggregates[footer.attr('data-parentId')];\n                    this._angularFooter(command, footer.find('td').get(), aggregates);\n                }\n            },\n            _angularFooter: function (command, cells, aggregates) {\n                var columns = this.columns;\n                this.angular(command, function () {\n                    return {\n                        elements: cells,\n                        data: map(columns, function (col) {\n                            return {\n                                column: col,\n                                aggregate: aggregates && aggregates[col.field]\n                            };\n                        })\n                    };\n                });\n            },\n            items: function () {\n                if (this._hasLockedColumns) {\n                    return this._items(this.tbody).add(this._items(this.lockedTable));\n                } else {\n                    return this._items(this.tbody);\n                }\n            },\n            _items: function (container) {\n                return container.find('tr[data-uid]').filter(function () {\n                    return !$(this).hasClass(classNames.footerTemplate);\n                });\n            },\n            _footerItems: function () {\n                var container = this.tbody;\n                if (this._hasLockedColumns) {\n                    container = container.add(this.lockedTable);\n                }\n                return container.find('tr').filter(function () {\n                    return $(this).hasClass(classNames.footerTemplate);\n                });\n            },\n            dataItems: function () {\n                var dataItems = kendo.ui.DataBoundWidget.fn.dataItems.call(this);\n                if (this._hasLockedColumns) {\n                    var n = dataItems.length, tmp = new Array(2 * n);\n                    for (var i = n; --i >= 0;) {\n                        tmp[i] = tmp[i + n] = dataItems[i];\n                    }\n                    dataItems = tmp;\n                }\n                return dataItems;\n            },\n            _showNoRecordsTemplate: function () {\n                var wrapper = '<div class=\"{0}\">{1}</div>';\n                var defaultTemplate = '<div class=\"k-grid-norecords-template\"{1}>{0}</div>';\n                var scrollableNoGridHeightStyles = this.options.scrollable && !this.wrapper[0].style.height ? ' style=\"margin:0 auto;position:static;\"' : '';\n                var template;\n                this._contentTree.render([]);\n                if (this._hasLockedColumns) {\n                    this._lockedContentTree.render([]);\n                }\n                template = kendo.format(defaultTemplate, this.options.messages.noRows, scrollableNoGridHeightStyles);\n                $(kendo.template(kendo.format(wrapper, NORECORDSCLASS, template))({})).insertAfter(this.table);\n            },\n            _showStatus: function (message) {\n                var status = this.element.find('.k-status');\n                var content = $(this.content).add(this.lockedContent);\n                if (!status.length) {\n                    status = $('<div class=\\'k-status\\' />').appendTo(this.element);\n                }\n                this._contentTree.render([]);\n                if (this._hasLockedColumns) {\n                    this._lockedContentTree.render([]);\n                }\n                content.hide();\n                status.html(message);\n            },\n            _hideStatus: function () {\n                this.element.find('.k-status').remove();\n                this._hideNoRecordsTempalte();\n                $(this.content).add(this.lockedContent).show();\n            },\n            _hideNoRecordsTempalte: function () {\n                this.element.find('.' + NORECORDSCLASS).remove();\n            },\n            _adjustHeight: function () {\n                var that = this;\n                var element = this.element;\n                var contentWrap = element.find(DOT + classNames.gridContentWrap);\n                var header = element.find(DOT + classNames.gridHeader);\n                var toolbar = element.find(DOT + classNames.gridToolbar);\n                var status = element.find(DOT + classNames.status);\n                var pagerHeight = that._isPageable() && that.pager && that.pager.element.is(':visible') ? outerHeight(that.pager.element) : 0;\n                var height;\n                var scrollbar = kendo.support.scrollbar();\n                element.css(HEIGHT, this.options.height);\n                var isHeightSet = function (el) {\n                    var initialHeight, newHeight;\n                    if (el[0].style.height) {\n                        return true;\n                    } else {\n                        initialHeight = el.height();\n                    }\n                    el.height('auto');\n                    newHeight = el.height();\n                    el.height('');\n                    return initialHeight != newHeight;\n                };\n                if (isHeightSet(element)) {\n                    height = element.height() - outerHeight(header) - outerHeight(toolbar) - outerHeight(status) - pagerHeight;\n                    contentWrap.height(height);\n                    if (this._hasLockedColumns) {\n                        scrollbar = this.table[0].offsetWidth > this.table.parent()[0].clientWidth ? scrollbar : 0;\n                        this.lockedContent.height(height - scrollbar);\n                    }\n                }\n            },\n            _resize: function (size, force) {\n                this._applyLockedContainersWidth();\n                this._adjustHeight();\n                if (this.pager && this.pager.element) {\n                    this.pager.resize(force);\n                }\n            },\n            _minScreenSupport: function () {\n                var any = this.hideMinScreenCols();\n                if (any) {\n                    this.minScreenResizeHandler = proxy(this.hideMinScreenCols, this);\n                    $(window).on('resize', this.minScreenResizeHandler);\n                }\n            },\n            _iterateMinScreenCols: function (cols, screenWidth) {\n                var any = false;\n                for (var i = 0; i < cols.length; i++) {\n                    var col = cols[i];\n                    var minWidth = col.minScreenWidth;\n                    if (minWidth !== undefined && minWidth !== null) {\n                        any = true;\n                        if (minWidth > screenWidth) {\n                            this.hideColumn(col);\n                        } else {\n                            this.showColumn(col);\n                        }\n                    }\n                    if (!col.hidden && col.columns) {\n                        any = this._iterateMinScreenCols(col.columns, screenWidth) || any;\n                    }\n                }\n                return any;\n            },\n            hideMinScreenCols: function () {\n                var cols = this.columns, screenWidth = window.innerWidth > 0 ? window.innerWidth : screen.width;\n                return this._iterateMinScreenCols(cols, screenWidth);\n            },\n            destroy: function () {\n                DataBoundWidget.fn.destroy.call(this);\n                var dataSource = this.dataSource;\n                dataSource.unbind(CHANGE, this._refreshHandler);\n                dataSource.unbind(ERROR, this._errorHandler);\n                dataSource.unbind(PROGRESS, this._progressHandler);\n                this._navigatableTables = null;\n                this._current = null;\n                if (this._resizeHandler) {\n                    $(window).off('resize' + NS, this._resizeHandler);\n                }\n                if (this._dragging) {\n                    this._dragging.destroy();\n                    this._dragging = null;\n                }\n                if (this.resizable) {\n                    this.resizable.destroy();\n                    this.resizable = null;\n                }\n                if (this.reorderable) {\n                    this.reorderable.destroy();\n                    this.reorderable = null;\n                }\n                if (this._draggableInstance && this._draggableInstance.element) {\n                    this._draggableInstance.destroy();\n                    this._draggableInstance = null;\n                }\n                if (this._userEvents) {\n                    this._userEvents.destroy();\n                    this._userEvents = null;\n                }\n                if (this.minScreenResizeHandler) {\n                    $(window).off('resize', this.minScreenResizeHandler);\n                }\n                this._destroyEditor();\n                this.element.off(NS);\n                this.wrapper.off(NS);\n                if (this._touchScroller) {\n                    this._touchScroller.destroy();\n                }\n                this._destroyPager();\n                if (dataSource) {\n                    dataSource._dataMaps = null;\n                }\n                this._autoExpandable = null;\n                this._refreshHandler = this._errorHandler = this._progressHandler = this._dataSourceFetchProxy = null;\n                this.thead = this.content = this.tbody = this.table = this.element = this.lockedHeader = this.lockedContent = null;\n                this._statusTree = this._headerTree = this._contentTree = this._lockedHeaderColsTree = this._lockedContentColsTree = this._lockedHeaderTree = this._lockedContentTree = null;\n            },\n            options: {\n                name: 'TreeList',\n                columns: [],\n                autoBind: true,\n                scrollable: true,\n                selectable: false,\n                sortable: false,\n                toolbar: null,\n                height: null,\n                columnMenu: false,\n                messages: {\n                    noRows: 'No records to display',\n                    loading: 'Loading...',\n                    requestFailed: 'Request failed.',\n                    retry: 'Retry',\n                    commands: {\n                        edit: 'Edit',\n                        update: 'Update',\n                        canceledit: 'Cancel',\n                        create: 'Add new record',\n                        createchild: 'Add child record',\n                        destroy: 'Delete',\n                        excel: 'Export to Excel',\n                        pdf: 'Export to PDF',\n                        search: 'Search...'\n                    }\n                },\n                excel: { hierarchy: true },\n                resizable: false,\n                search: false,\n                filterable: false,\n                editable: false,\n                reorderable: false,\n                pageable: false\n            },\n            events: [\n                CHANGE,\n                BEFORE_EDIT,\n                EDIT,\n                PAGE,\n                SAVE,\n                SAVE_CHANGES,\n                REMOVE,\n                EXPAND,\n                COLLAPSE,\n                DATABINDING,\n                DATABOUND,\n                CANCEL,\n                DRAGSTART,\n                DRAG,\n                DROP,\n                DRAGEND,\n                FILTERMENUINIT,\n                ITEM_CHANGE,\n                CELL_CLOSE,\n                FILTERMENUOPEN,\n                COLUMNHIDE,\n                COLUMNSHOW,\n                COLUMNREORDER,\n                COLUMNRESIZE,\n                COLUMNMENUINIT,\n                COLUMNMENUOPEN,\n                COLUMNLOCK,\n                COLUMNUNLOCK\n            ],\n            _toggle: function (model, expand) {\n                var that = this;\n                var defaultPromise = $.Deferred().resolve().promise();\n                var loaded = model.loaded();\n                if (that._isIncellEditable() && that.editor) {\n                    $(activeElement()).change();\n                    that.closeCell();\n                }\n                if (model._error) {\n                    model.expanded = false;\n                    model._error = undefined;\n                }\n                if (!loaded && model.expanded) {\n                    return defaultPromise;\n                }\n                if (typeof expand == 'undefined') {\n                    expand = !model.expanded;\n                }\n                model.expanded = expand;\n                function afterModelLoaded() {\n                    that._toggleData();\n                    if (that._isPageable()) {\n                        that.refresh();\n                    } else {\n                        that._render();\n                    }\n                    that._syncLockedContentHeight();\n                }\n                if (!loaded) {\n                    defaultPromise = this.dataSource.load(model).always(proxy(function () {\n                        afterModelLoaded();\n                    }, this));\n                }\n                afterModelLoaded();\n                return defaultPromise;\n            },\n            _toggleData: function () {\n                var that = this;\n                if (that._isPageable()) {\n                    that._togglePageableData();\n                }\n            },\n            _togglePageableData: function () {\n                var that = this;\n                var dataSource = that.dataSource;\n                var data = dataSource._getData();\n                var result;\n                var queryOptions = dataSource._defaultPageableQueryOptions();\n                that._renderProgress(true);\n                var childrenMap = dataSource._getChildrenMap() || dataSource.childrenMap(dataSource._getData());\n                dataSource._processDataItemsState(data, childrenMap);\n                result = dataSource._processPageableQuery(data, queryOptions);\n                queryOptions.childrenMap = result.childrenMap;\n                queryOptions.filteredChildrenMap = result.filteredChildrenMap;\n                dataSource._aggregateResult = dataSource._calculateAggregates(result.dataToAggregate, queryOptions);\n                dataSource.view(result.data);\n                dataSource._calculateCollapsedTotal();\n                that._refreshPager();\n                that._renderProgress(false);\n            },\n            _refreshPager: function () {\n                var pager = this.pager;\n                if (pager) {\n                    pager.refresh();\n                }\n            },\n            expand: function (row) {\n                return this._toggle(this.dataItem(row), true);\n            },\n            collapse: function (row) {\n                return this._toggle(this.dataItem(row), false);\n            },\n            _toggleChildren: function (e) {\n                var icon = $(e.target);\n                var model = this.dataItem(icon);\n                if (!model) {\n                    return;\n                }\n                var event = !model.expanded ? EXPAND : COLLAPSE;\n                if (!this.trigger(event, { model: model })) {\n                    this._toggle(model);\n                }\n                e.preventDefault();\n            },\n            _navigatable: function () {\n                var that = this;\n                if (!that.options.navigatable) {\n                    return;\n                }\n                var tables = that.table.add(that.lockedTable);\n                var headerTables = that.thead.parent().add($('>table', that.lockedHeader));\n                if (that.options.scrollable) {\n                    tables = tables.add(headerTables);\n                    headerTables.attr(TABINDEX, -1);\n                }\n                this._navigatableTables = tables;\n                tables.on(kendo.support.touch ? 'touchstart' + NS : 'mousedown' + NS, NAVROW + '>:visible', proxy(that._tableClick, that)).on('focus' + NS, proxy(that._tableFocus, that)).on('focusout' + NS, proxy(that._tableBlur, that)).on('keydown' + NS, proxy(that._tableKeyDown, that));\n            },\n            cellIndex: function (td) {\n                var lockedColumnOffset = 0;\n                if (this.lockedTable && !$.contains(this.lockedTable[0], td[0])) {\n                    lockedColumnOffset = leafColumns(lockedColumns(this.columns)).length;\n                }\n                return $(td).parent().children().index(td) + lockedColumnOffset;\n            },\n            _isActiveInTable: function () {\n                var active = kendo._activeElement();\n                if (!active) {\n                    return false;\n                }\n                return this.table[0] === active || $.contains(this.table[0], active) || this.lockedTable && (this.lockedTable[0] === active || $.contains(this.lockedTable[0], active));\n            },\n            _restoreCurrent: function (currentIndex, isCurrentInHeader) {\n                var rowIndex;\n                var row;\n                var td;\n                if (currentIndex === undefined || currentIndex < 0) {\n                    return;\n                }\n                if (this._current) {\n                    this._current.removeClass('k-state-focused');\n                }\n                if (isCurrentInHeader) {\n                    this.current(this.thead.find('th').eq(currentIndex));\n                } else {\n                    rowIndex = 0;\n                    currentIndex = 0;\n                    row = $();\n                    if (this.lockedTable) {\n                        row = this.lockedTable.find('>tbody>tr:visible').eq(rowIndex);\n                    }\n                    row = row.add(this.tbody.children().eq(rowIndex));\n                    td = row.find('>td:visible').eq(currentIndex);\n                    this.current(td);\n                }\n                if (this._current) {\n                    focusTable(this._current.closest('table')[0], true);\n                }\n            },\n            current: function (newCurrent) {\n                var current = this._current;\n                newCurrent = $(newCurrent);\n                if (newCurrent.length && (!current || current[0] !== newCurrent[0])) {\n                    this._updateCurrentAttr(current, newCurrent);\n                    this._scrollCurrent();\n                }\n                if (newCurrent && newCurrent.length) {\n                    this._lastCellIndex = newCurrent.parent().children(DATA_CELL).index(newCurrent);\n                }\n                return this._current;\n            },\n            _setCurrent: function (newCurrent) {\n                var that = this;\n                newCurrent = $(newCurrent);\n                if (newCurrent[0]) {\n                    that._current = newCurrent;\n                    that._updateCurrentAttr(that._current, newCurrent);\n                    that._scrollCurrent();\n                }\n                return that._current;\n            },\n            _scrollCurrent: function () {\n                var current = this._current;\n                var scrollable = this.options.scrollable;\n                if (!current || !scrollable) {\n                    return;\n                }\n                var row = current.parent();\n                var tableContainer = row.closest('table').parent();\n                var isInLockedContainer = tableContainer.is('.k-grid-content-locked,.k-grid-header-locked');\n                var isInContent = tableContainer.is('.k-grid-content-locked,.k-grid-content');\n                var scrollableContainer = $(this.content)[0];\n                if (isInContent) {\n                    this._scrollTo(this._relatedRow(row)[0], scrollableContainer);\n                }\n                if (this.lockedContent) {\n                    this.lockedContent[0].scrollTop = scrollableContainer.scrollTop;\n                }\n                if (!isInLockedContainer) {\n                    this._scrollTo(current[0], scrollableContainer);\n                }\n            },\n            _findCurrentCell: function () {\n                var that = this;\n                var current = that.current();\n                var elements = $(that.table).add(that.header).add(that.lockedTable).add(that.lockedHeader);\n                if (current && elements.find(current).length > 0) {\n                    return current;\n                } else {\n                    return elements.find(DOT + classNames.focused);\n                }\n            },\n            _scrollTo: function (element, container) {\n                var elementToLowercase = element.tagName.toLowerCase();\n                var isHorizontal = elementToLowercase === 'td' || elementToLowercase === 'th';\n                var table = $(element).closest('table')[0];\n                var elementOffsetDir = element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n                var containerScroll = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n                var containerOffsetDir = container[isHorizontal ? 'clientWidth' : 'clientHeight'];\n                var elementOffset = $(element).css('position') === 'relative' && isRtl && isHorizontal ? Math.abs(table.offsetLeft - element.offsetLeft) : element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n                var bottomDistance = elementOffset + elementOffsetDir;\n                var result = 0;\n                var ieCorrection = 0;\n                var firefoxCorrection = 0;\n                if (isRtl && isHorizontal) {\n                    if (browser.msie || browser.edge) {\n                        ieCorrection = table.offsetLeft;\n                    } else if (browser.mozilla) {\n                        firefoxCorrection = table.offsetLeft - kendo.support.scrollbar();\n                    }\n                }\n                containerScroll = Math.abs(containerScroll + ieCorrection - firefoxCorrection);\n                if (containerScroll > elementOffset) {\n                    result = elementOffset;\n                } else if (bottomDistance > containerScroll + containerOffsetDir) {\n                    if (elementOffsetDir <= containerOffsetDir) {\n                        result = bottomDistance - containerOffsetDir;\n                    } else {\n                        result = elementOffset;\n                    }\n                } else {\n                    result = containerScroll;\n                }\n                result = Math.abs(result + ieCorrection) + firefoxCorrection;\n                container[isHorizontal ? 'scrollLeft' : 'scrollTop'] = result;\n            },\n            _aria: function () {\n                var id = this.element.attr('id') || 'aria';\n                if (id) {\n                    this._elementId = id + '_active_element';\n                }\n            },\n            _currentDataIndex: function (table, current) {\n                var index = current.attr('data-index');\n                if (!index) {\n                    return undefined;\n                }\n                var lockedColumnsCount = lockedColumns(this.columns).length;\n                if (lockedColumnsCount && !table.closest('div').hasClass('k-grid-content-locked')[0]) {\n                    return index - lockedColumnsCount;\n                }\n                return index;\n            },\n            _prevVerticalCell: function (container, current) {\n                var cells;\n                var row = current.parent();\n                var rows = container.children(NAVROW);\n                var rowIndex = rows.index(row);\n                var index = this._currentDataIndex(container, current);\n                if (index || current.hasClass('k-header')) {\n                    cells = parentColumnsCells(current);\n                    return cells.eq(cells.length - 2);\n                }\n                index = Math.max(row.children(DATA_CELL).index(current), this._lastCellIndex || 0);\n                if (row.hasClass('k-filter-row')) {\n                    return leafDataCells(container).filter(isCellVisible).eq(index);\n                }\n                if (rowIndex == -1) {\n                    row = container.find('tr.k-filter-row:visible');\n                    if (!row[0]) {\n                        return leafDataCells(container).filter(isCellVisible).eq(index);\n                    }\n                } else {\n                    row = rowIndex === 0 ? $() : rows.eq(rowIndex - 1);\n                }\n                cells = row.children(DATA_CELL);\n                if (cells.length > index) {\n                    return cells.eq(index);\n                }\n                return cells.eq(0);\n            },\n            _nextVerticalCell: function (container, current) {\n                var cells;\n                var row = current.parent();\n                var rows = container.children(NAVROW);\n                var rowIndex = rows.index(row);\n                var index = this._currentDataIndex(container, current);\n                if (rowIndex != -1 && index === undefined && current.hasClass('k-header')) {\n                    return childColumnsCells(current).eq(1);\n                }\n                index = index ? parseInt(index, 10) : row.children(DATA_CELL).index(current);\n                index = Math.max(index, this._lastCellIndex || 0);\n                if (rowIndex == -1) {\n                    row = rows.eq(0);\n                } else {\n                    row = rows.eq(rowIndex + current[0].rowSpan);\n                }\n                var tmpIndex = index;\n                if (this._currentDataIndex(container, current) !== undefined) {\n                    var currentRowCells = row.children(':not(.k-group-cell):not(.k-hierarchy-cell)');\n                    var hiddenColumns = currentRowCells.filter(':hidden');\n                    for (var idx = 0, length = hiddenColumns.length; idx < length; idx++) {\n                        if (currentRowCells.index(hiddenColumns[idx]) < index) {\n                            tmpIndex--;\n                        }\n                    }\n                }\n                index = tmpIndex;\n                cells = row.children(DATA_CELL);\n                if (cells.length > index) {\n                    return cells.eq(index);\n                }\n                return cells.eq(0);\n            },\n            _verticalContainer: function (container, up) {\n                var table = container.parent();\n                var length = this._navigatableTables.length;\n                var step = Math.floor(length / 2);\n                var index = inArray(table[0], this._navigatableTables);\n                if (up) {\n                    step *= -1;\n                }\n                index += step;\n                if (index >= 0 || index < length) {\n                    table = this._navigatableTables.eq(index);\n                }\n                return table.find(up ? 'thead' : 'tbody');\n            },\n            _updateCurrentAttr: function (current, next) {\n                var headerId = $(current).data('headerId');\n                $(current).removeClass(classNames.focused).closest('table').removeAttr('aria-activedescendant');\n                if (headerId) {\n                    headerId = headerId.replace(this._elementId, '');\n                    $(current).attr('id', headerId);\n                } else {\n                    $(current).removeAttr('id');\n                }\n                next.data('headerId', next.attr('id')).attr('id', this._elementId).addClass(classNames.focused).closest('table').attr('aria-activedescendant', this._elementId);\n                this._current = next;\n            },\n            _tableKeyDown: function (e) {\n                var handled = false;\n                var current = this.current();\n                var target = $(e.target);\n                var canHandle = !e.isDefaultPrevented() && !target.is(':button,a,:input,a>.k-icon');\n                current = current ? current : $(this.lockedTable).add(this.table).find(FIRSTNAVITEM);\n                if (canHandle && e.keyCode == keys.UP) {\n                    handled = this._moveUp(current, e.shiftKey);\n                }\n                if (canHandle && e.keyCode == keys.DOWN) {\n                    handled = this._moveDown(current, e.shiftKey);\n                }\n                if (canHandle && e.keyCode == (isRtl ? keys.LEFT : keys.RIGHT)) {\n                    if (e.altKey) {\n                        handled = this._handleExpand(current);\n                    } else {\n                        handled = this._moveRight(current);\n                    }\n                }\n                if (canHandle && e.keyCode == (isRtl ? keys.RIGHT : keys.LEFT)) {\n                    if (e.altKey) {\n                        handled = this._handleCollapse(current);\n                    } else {\n                        handled = this._moveLeft(current);\n                    }\n                }\n                if (canHandle && e.keyCode == keys.PAGEDOWN) {\n                    handled = this._handlePageDown();\n                }\n                if (canHandle && e.keyCode == keys.PAGEUP) {\n                    handled = this._handlePageUp();\n                }\n                if (e.keyCode == keys.ENTER || e.keyCode == keys.F2) {\n                    handled = this._handleEnterKey(current, e.currentTarget, target);\n                }\n                if (e.keyCode == keys.ESC) {\n                    handled = this._handleEscKey(current, e.currentTarget);\n                }\n                if (canHandle && e.keyCode == keys.HOME) {\n                    handled = this._handleHome(current, e.ctrlKey);\n                }\n                if (canHandle && e.keyCode == keys.END) {\n                    handled = this._handleEnd(current, e.ctrlKey);\n                }\n                if (e.keyCode == keys.TAB) {\n                    handled = this._handleTabKey(current, e.currentTarget, e.shiftKey);\n                }\n                if (handled) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            },\n            _handleExpand: function (current) {\n                var that = this;\n                var row = current.parent();\n                var model = that.dataItem(row);\n                if (current.hasClass('k-header')) {\n                    return false;\n                }\n                if (model && model.hasChildren && !model.expanded && !that.trigger(EXPAND, { model: model })) {\n                    this.expand(row);\n                    return true;\n                }\n                return false;\n            },\n            _handleCollapse: function (current) {\n                var that = this;\n                var row = current.parent();\n                var model = that.dataItem(row);\n                if (current.hasClass('k-header')) {\n                    return false;\n                }\n                if (model && model.hasChildren && model.expanded && !that.trigger(COLLAPSE, { model: model })) {\n                    that.collapse(row);\n                    return true;\n                }\n                return false;\n            },\n            _handleHome: function (current, ctrl) {\n                var row = current.parent();\n                var rowContainer = row.parent();\n                var isInLockedTable = this.lockedTable && this.lockedTable.children('tbody')[0] === rowContainer[0];\n                var isInBody = rowContainer[0] === this.tbody[0];\n                var prev;\n                if (ctrl) {\n                    if (this.lockedTable) {\n                        prev = this.lockedTable.find(FIRSTNAVITEM);\n                    } else {\n                        prev = this.table.find(FIRSTNAVITEM);\n                    }\n                } else if (isInBody || isInLockedTable) {\n                    if (isInBody && this.lockedTable) {\n                        row = this._relatedRow(row);\n                    }\n                    prev = row.children(NAVCELL + ':first');\n                }\n                if (prev && prev.length) {\n                    this.current(prev);\n                    return true;\n                }\n            },\n            _handleEnd: function (current, ctrl) {\n                var row = current.parent();\n                var rowContainer = row.parent();\n                var isInLockedTable = this.lockedTable && this.lockedTable.children('tbody')[0] === rowContainer[0];\n                var isInBody = rowContainer[0] === this.tbody[0];\n                var next;\n                if (ctrl) {\n                    next = this.table.find(LASTITEMROW + '>' + NAVCELL + ':last');\n                } else if (isInBody || isInLockedTable) {\n                    if (!isInBody && this.lockedTable) {\n                        row = this._relatedRow(row);\n                    }\n                    next = row.children(NAVCELL + ':last');\n                }\n                if (next && next.length) {\n                    this.current(next);\n                    return true;\n                }\n            },\n            _handlePageDown: function () {\n                var that = this;\n                if (!that._isPageable()) {\n                    return false;\n                }\n                that.dataSource._restorePageSizeAfterAddChild();\n                that.dataSource.page(that.dataSource.page() + 1);\n                return true;\n            },\n            _handlePageUp: function () {\n                var that = this;\n                if (!that._isPageable()) {\n                    return false;\n                }\n                that.dataSource._restorePageSizeAfterAddChild();\n                that.dataSource.page(that.dataSource.page() - 1);\n                return true;\n            },\n            _handleEscKey: function (current, currentTable) {\n                var active = kendo._activeElement();\n                var currentIndex;\n                var that = this;\n                var row;\n                var rowIndex;\n                var cellIndex;\n                var tbody;\n                if (!current || !current.parent().hasClass('k-grid-edit-row')) {\n                    if (current.has(active).length) {\n                        focusTable(currentTable, true);\n                        return true;\n                    }\n                    return false;\n                }\n                if (that._isIncellEditable()) {\n                    row = current.parent();\n                    cellIndex = current.index();\n                    rowIndex = row.index();\n                    tbody = row.closest('tbody');\n                    that.closeCell(true);\n                    that._setCurrent(tbody.children().eq(rowIndex).children().eq(cellIndex));\n                } else {\n                    currentIndex = $(current).parent().index();\n                    if (active) {\n                        active.blur();\n                    }\n                    this.cancelRow();\n                    if (currentIndex >= 0) {\n                        this.current(this.items().eq(currentIndex).children(NAVCELL).first());\n                    }\n                }\n                if (browser.msie && browser.version < 9) {\n                    document.body.focus();\n                }\n                focusTable(currentTable, true);\n                return true;\n            },\n            _handleEnterKey: function (current, currentTable, target) {\n                var editable = this.options.editable;\n                var container = target.closest('[role=gridcell]');\n                var focusable;\n                if (!target.is('table') && !$.contains(current[0], target[0])) {\n                    current = container;\n                }\n                if (current.is('th')) {\n                    current.find('.k-link').click();\n                    return true;\n                }\n                focusable = current.find(':kendoFocusable:first');\n                if (focusable[0] && current.hasClass('k-state-focused')) {\n                    focusable.focus();\n                    return true;\n                }\n                if (editable && !target.is(':button,.k-button,textarea')) {\n                    if (!container[0]) {\n                        container = current;\n                    }\n                    this._handleEditing(container, false, currentTable);\n                    return true;\n                }\n                return false;\n            },\n            _handleTabKey: function (current, currentTable, shiftKey) {\n                var that = this;\n                var incellEditing = that.options.editable && that._isIncellEditable();\n                var cell;\n                if (!incellEditing || current.is('th')) {\n                    return false;\n                }\n                cell = $(activeElement()).closest(DOT + classNames.editCell);\n                if (cell[0] && cell[0] !== current[0]) {\n                    current = cell;\n                }\n                cell = that._tabNext(current, currentTable, shiftKey);\n                if (cell.length) {\n                    that._handleEditing(current, cell, cell.closest(TABLE));\n                    return true;\n                } else {\n                    that._preventPageSizeRestore = false;\n                }\n                return false;\n            },\n            _tabNext: function (current, currentTable, back) {\n                var that = this;\n                var switchRow = true;\n                var next = back ? current.prevAll(DATA_CELL + ':first') : current.nextAll(':visible:first');\n                if (!next.length) {\n                    next = current.parent();\n                    if (that.lockedTable) {\n                        switchRow = back && currentTable == that.lockedTable[0] || !back && currentTable == that.table[0];\n                        next = that._relatedRow(next);\n                    }\n                    if (switchRow) {\n                        next = next[back ? 'prevAll' : 'nextAll']('tr:not(.k-grouping-row):not(.k-detail-row):visible:first');\n                    }\n                    next = next.children(DATA_CELL + (back ? ':last' : ':first'));\n                    that.dataSource._restorePageSizeAfterAddChild();\n                }\n                return next;\n            },\n            _handleEditing: function (current, next, table) {\n                var that = this, active = $(kendo._activeElement()), isIE = browser.msie, editContainer, focusable, isEdited;\n                var editable = that.options.editable && that.options.editable.update !== false;\n                var incellEditing = that._isIncellEditable();\n                var nextFocusableCellRowIndex = $(next).parents('tr').index();\n                var nextFocusableCellIndex = $(next).index();\n                var currentFocusedCellRowIndex = $(current).parents('tr').index();\n                var currentFocusedCellIndex = current.index();\n                var editedCell;\n                table = $(table);\n                if (incellEditing) {\n                    isEdited = current.hasClass(classNames.editCell);\n                } else {\n                    isEdited = current.parent().hasClass('k-grid-edit-row');\n                }\n                if (that.editor) {\n                    editContainer = that.editor.wrapper;\n                    if (editContainer && $.contains(editContainer[0], active[0])) {\n                        if (browser.opera) {\n                            active.blur().change().triggerHandler('blur');\n                        } else {\n                            active.blur();\n                            if (isIE) {\n                                active.blur();\n                            }\n                        }\n                    }\n                    if (!that.editor) {\n                        focusTable(table);\n                        return;\n                    }\n                    if (that.editor.end()) {\n                        if (incellEditing) {\n                            that._preventPageSizeRestore = true;\n                            that.closeCell();\n                            that._preventPageSizeRestore = false;\n                            if ($(that.table).add(that.lockedTable).find(DOT + classNames.editCell).length === 0) {\n                                that.current(table.find('tbody').children().eq(currentFocusedCellRowIndex).children().eq(currentFocusedCellIndex));\n                            }\n                        } else {\n                            that.saveRow();\n                            isEdited = true;\n                        }\n                    } else {\n                        if (incellEditing) {\n                            that.current(editContainer);\n                        } else {\n                            that.current(editContainer.children().filter(NAVCELL).first());\n                        }\n                        focusable = editContainer.find(':kendoFocusable:first')[0];\n                        if (focusable) {\n                            focusable.focus();\n                        }\n                        return;\n                    }\n                }\n                next = $(next).length && table.find(next).length === 0 ? table.find('tbody').children().eq(nextFocusableCellRowIndex).children().eq(nextFocusableCellIndex) : next;\n                if (next) {\n                    that.current(next);\n                }\n                focusTable(table, true);\n                if (!editable) {\n                    return;\n                }\n                if (!isEdited && !next || next) {\n                    var currentIndex = that.current().index();\n                    if (incellEditing) {\n                        that.editCell(that.current());\n                        editedCell = $(that.table).add(that.lockedTable).find(DOT + classNames.editCell)[0];\n                        if (editedCell) {\n                            that._current = $(editedCell);\n                        } else {\n                            that.current(that._findCurrentCell());\n                        }\n                    } else {\n                        that.editRow(that.current().parent());\n                        that.current(that.editor.wrapper.children().eq(currentIndex));\n                        that.current().removeClass('k-state-focused');\n                    }\n                } else {\n                    that.dataSource._restorePageSizeAfterAddChild();\n                }\n            },\n            _moveRight: function (current) {\n                var next = current.nextAll(NAVCELL).first();\n                var row = current.parent();\n                if (current.hasClass('k-header')) {\n                    next = current.nextAll(NAVHEADER).first();\n                    if (!next[0] && this.lockedTable && current.closest('table')[0] === this.lockedHeader.find('table')[0]) {\n                        next = this.thead.find(NAVHEADER + ':first');\n                    }\n                }\n                if (!next[0] && this.lockedTable && current.closest('table')[0] === this.lockedTable[0]) {\n                    next = this._relatedRow(row).children(NAVCELL).first();\n                }\n                if (next[0] && next[0] !== current[0]) {\n                    focusTable(next.closest('table'), true);\n                }\n                this.current(next);\n                return true;\n            },\n            _moveLeft: function (current) {\n                var prev = current.prevAll(NAVCELL).first();\n                var row = current.parent();\n                if (current.hasClass('k-header')) {\n                    prev = current.prevAll(NAVHEADER).first();\n                    if (!prev[0] && this.lockedTable && current.closest('table')[0] === this.thead.parent()[0]) {\n                        prev = this.lockedHeader.find('>table>thead>tr>' + NAVHEADER + ':last');\n                    }\n                }\n                if (!prev[0] && this.lockedTable && current.closest('table')[0] === this.table[0]) {\n                    prev = this._relatedRow(row).children(NAVCELL).last();\n                }\n                if (prev[0] && prev[0] !== current[0]) {\n                    focusTable(prev.closest('table'), true);\n                }\n                this.current(prev);\n                return true;\n            },\n            _moveUp: function (current, shiftKey) {\n                var container = current.parent().parent();\n                var prev;\n                if (shiftKey) {\n                    prev = current.parent();\n                    prev = prev.prevAll(ITEMROW + ':first');\n                    prev = current.parent().is(ITEMROW) ? prev.children().eq(current.index()) : prev.children(DATA_CELL + ':last');\n                } else {\n                    prev = this._prevVerticalCell(container, current);\n                    if (!prev[0]) {\n                        this._lastCellIndex = 0;\n                        container = this._verticalContainer(container, true);\n                        prev = this._prevVerticalCell(container, current);\n                        if (prev[0]) {\n                            focusTable(container.parent(), true);\n                        }\n                    }\n                }\n                var tmp = this._lastCellIndex || 0;\n                this.current(prev);\n                this._lastCellIndex = tmp;\n                return true;\n            },\n            _moveDown: function (current, shiftKey) {\n                var container = current.parent().parent();\n                var next;\n                if (shiftKey) {\n                    next = current.parent();\n                    next = next.nextAll(ITEMROW + ':first');\n                    next = current.parent().is(ITEMROW) ? next.children().eq(current.index()) : next.children(DATA_CELL + ':first');\n                } else {\n                    next = this._nextVerticalCell(container, current);\n                    if (!next[0]) {\n                        this._lastCellIndex = 0;\n                        container = this._verticalContainer(container);\n                        next = this._nextVerticalCell(container, current);\n                        if (next[0]) {\n                            focusTable(container.parent(), true);\n                        }\n                    }\n                }\n                var tmp = this._lastCellIndex || 0;\n                this.current(next);\n                this._lastCellIndex = tmp;\n                return true;\n            },\n            _tableClick: function (e) {\n                var currentTarget = $(e.currentTarget), isHeader = currentTarget.is('th'), table = this.table.add(this.lockedTable), headerTable = this.thead.parent().add($('>table', this.lockedHeader)), isInput = isInputElement(e.target), currentTable = currentTarget.closest('table')[0];\n                if (kendo.support.touch) {\n                    return;\n                }\n                if (currentTable !== table[0] && currentTable !== table[1] && currentTable !== headerTable[0] && currentTable !== headerTable[1]) {\n                    return;\n                }\n                if (this.options.navigatable) {\n                    this.current(currentTarget);\n                }\n                if (isHeader || !isInput) {\n                    setTimeout(function () {\n                        if (!isInputElement(kendo._activeElement()) || !$.contains(currentTable, kendo._activeElement())) {\n                            focusTable(currentTable, true);\n                        }\n                    });\n                }\n                if (isHeader) {\n                    e.preventDefault();\n                }\n            },\n            _setTabIndex: function (table) {\n                this._navigatableTables.attr(TABINDEX, -1);\n                table.attr(TABINDEX, 0);\n            },\n            _tableFocus: function (e) {\n                var current = this.current();\n                var table = $(e.currentTarget);\n                if (current && current.is(':visible')) {\n                    current.addClass(classNames.focused);\n                } else {\n                    this.current(table.find(FIRSTNAVITEM));\n                }\n                this._setTabIndex(table);\n            },\n            _tableBlur: function () {\n                var current = this.current();\n                if (current) {\n                    current.removeClass(classNames.focused);\n                }\n            },\n            _attachEvents: function () {\n                var that = this;\n                var retryButton = DOT + classNames.retry;\n                that._userEvents = new kendo.UserEvents(that.element, {\n                    press: proxy(that._onPress, that),\n                    allowSelection: true\n                });\n                this.element.on(CLICK + NS, retryButton, this._dataSourceFetchProxy).on(CLICK + NS, '.k-button[data-command]', proxy(this._commandClick, this)).on(INPUT + NS, '.k-grid-search input', proxy(this._search, this));\n                this._attachCellEditingEventHandlers();\n            },\n            _onPress: function (e) {\n                var that = this;\n                var icons = DOT + classNames.iconCollapse + ', .' + classNames.iconExpand + ', .' + classNames.refresh;\n                if ($(e.event.target).is(icons)) {\n                    that._toggleChildren.call(that, e.event);\n                }\n            },\n            _attachCellEditingEventHandlers: function () {\n                var that = this;\n                var editable = that.options.editable;\n                var selectable = that.selectable && that.selectable.options.multiple;\n                var closeCell = function (e) {\n                    var target = activeElement();\n                    var editor = that.editor || {};\n                    var cell = editor.element;\n                    if (cell && !$.contains(cell[0], target) && cell[0] !== target && !$(target).closest('.k-animation-container').length) {\n                        if (editor.end()) {\n                            if (!e.relatedTarget && that._isPageable() && !isUndefined(that.dataSource._addChildPageSize)) {\n                                that._preventPageSizeRestore = false;\n                            }\n                            that.closeCell();\n                        }\n                    }\n                    that._preventPageSizeRestore = false;\n                };\n                if (that._isIncellEditable() && editable.update !== false) {\n                    that.wrapper.on(CLICK + NS, 'tr:not(.k-grouping-row) > td', function (e) {\n                        var td = $(this), isLockedCell = that.lockedTable && td.closest('table')[0] === that.lockedTable[0];\n                        if (td.hasClass(classNames.editCell) || td.has('a.k-grid-delete').length || td.has('button.k-grid-delete').length || td.closest('tbody')[0] !== that.tbody[0] && !isLockedCell || $(e.target).is(':input') || $(e.target).hasClass(classNames.iconExpand) || $(e.target).hasClass(classNames.iconCollapse)) {\n                            if (!that.editor) {\n                                that.dataSource._restorePageSizeAfterAddChild();\n                            }\n                            that._preventPageSizeRestore = false;\n                            return;\n                        }\n                        if (that.editor) {\n                            if (that.editor.end()) {\n                                if (selectable) {\n                                    $(activeElement()).blur();\n                                }\n                                that.closeCell();\n                                that.editCell(td);\n                            }\n                        } else {\n                            that.editCell(td);\n                        }\n                    }).on('mousedown' + NS, 'tr:not(.k-grouping-row) > td', function (e) {\n                        if (that.editor && that._isPageable() && !isUndefined(that.dataSource._addChildPageSize)) {\n                            that._preventPageSizeRestore = $(e.target).parents(DOT + classNames.editRow).length > 0;\n                        } else {\n                            that._preventPageSizeRestore = false;\n                        }\n                    }).on('focusin' + NS, function () {\n                        if (!$.contains(this, activeElement())) {\n                            clearTimeout(that._closeCellTimeout);\n                            that._closeCellTimeout = null;\n                        }\n                    }).on('focusout' + NS, function (e) {\n                        that._closeCellTimeout = setTimeout(function () {\n                            closeCell(e);\n                        }, 1);\n                    });\n                }\n            },\n            _commandByName: function (name) {\n                var columns = this.columns;\n                var toolbar = $.isArray(this.options.toolbar) ? this.options.toolbar : [];\n                var i, j, commands, currentName;\n                name = name.toLowerCase();\n                if (defaultCommands[name]) {\n                    return defaultCommands[name];\n                }\n                for (i = 0; i < columns.length; i++) {\n                    commands = columns[i].command;\n                    if (commands) {\n                        for (j = 0; j < commands.length; j++) {\n                            currentName = commands[j].name;\n                            if (!currentName) {\n                                continue;\n                            }\n                            if (currentName.toLowerCase() == name) {\n                                return commands[j];\n                            }\n                        }\n                    }\n                }\n                for (i = 0; i < toolbar.length; i++) {\n                    currentName = toolbar[i].name;\n                    if (!currentName) {\n                        continue;\n                    }\n                    if (currentName.toLowerCase() == name) {\n                        return toolbar[i];\n                    }\n                }\n            },\n            _commandClick: function (e) {\n                var button = $(e.currentTarget);\n                var commandName = button.attr('data-command');\n                var command = this._commandByName(commandName);\n                var row = button.parentsUntil(this.wrapper, 'tr');\n                row = row.length ? row : undefined;\n                if (command) {\n                    if (command.methodName) {\n                        this[command.methodName](row);\n                    } else if (command.click) {\n                        command.click.call(this, e);\n                    }\n                    e.preventDefault();\n                }\n            },\n            _search: function (e) {\n                var that = this;\n                var input = e.currentTarget;\n                clearTimeout(that._searchTimeOut);\n                that._searchTimeOut = setTimeout(function () {\n                    that._searchTimeOut = null;\n                    var options = that.options;\n                    var searchFields = options.search ? options.search.fields : null;\n                    var expression = {\n                        filters: [],\n                        logic: 'or'\n                    };\n                    var value = input.value;\n                    if (!searchFields) {\n                        searchFields = getColumnsFields(options.columns);\n                    }\n                    if (value) {\n                        for (var i = 0; i < searchFields.length; i++) {\n                            expression.filters.push({\n                                field: searchFields[i],\n                                operator: 'contains',\n                                value: value\n                            });\n                        }\n                    } else {\n                        expression = {};\n                    }\n                    that.dataSource.filter(expression);\n                }, 300);\n            },\n            _ensureExpandableColumn: function () {\n                if (this._autoExpandable) {\n                    delete this._autoExpandable.expandable;\n                }\n                var visibleColumns = grep(this.columns, not(is('hidden')));\n                visibleColumns = grep(visibleColumns, not(is('command')));\n                var expandableColumns = grep(visibleColumns, is('expandable'));\n                if (this.columns.length && !expandableColumns.length) {\n                    this._autoExpandable = visibleColumns[0];\n                    visibleColumns[0].expandable = true;\n                }\n            },\n            _columns: function () {\n                var columns = this.options.columns || [];\n                this.columns = map(columns, function (column) {\n                    column = typeof column === 'string' ? { field: column } : column;\n                    return extend({ encoded: true }, column);\n                });\n                var lockedCols = lockedColumns(columns);\n                if (lockedCols.length > 0) {\n                    this._hasLockedColumns = true;\n                    this.columns = lockedCols.concat(nonLockedColumns(this.columns));\n                }\n                this.columns = normalizeColumns(this.columns);\n                this._ensureExpandableColumn();\n                this._columnTemplates();\n                this._columnAttributes();\n            },\n            _columnTemplates: function () {\n                var idx, length, column;\n                var columns = leafColumns(this.columns);\n                for (idx = 0, length = columns.length; idx < length; idx++) {\n                    column = columns[idx];\n                    if (column.template) {\n                        column.template = kendo.template(column.template);\n                    }\n                    if (column.headerTemplate) {\n                        column.headerTemplate = kendo.template(column.headerTemplate);\n                    }\n                    if (column.footerTemplate) {\n                        column.footerTemplate = kendo.template(column.footerTemplate);\n                    }\n                }\n            },\n            _columnAttributes: function () {\n                var idx, length;\n                var columns = this.columns;\n                function convertStyle(attr) {\n                    var properties, i, declaration;\n                    if (attr && attr.style) {\n                        properties = attr.style.split(';');\n                        attr.style = {};\n                        for (i = 0; i < properties.length; i++) {\n                            declaration = properties[i].split(':');\n                            var name = $.trim(declaration[0]);\n                            if (name) {\n                                attr.style[$.camelCase(name)] = $.trim(declaration[1]);\n                            }\n                        }\n                    }\n                }\n                for (idx = 0, length = columns.length; idx < length; idx++) {\n                    convertStyle(columns[idx].attributes);\n                    convertStyle(columns[idx].headerAttributes);\n                }\n            },\n            _clearSortClasses: function () {\n                var that = this;\n                if (that.content) {\n                    that.content.find('col:not(.k-group-col):not(.k-hierarchy-col)').removeClass('k-sorted');\n                }\n                if (that.lockedContent) {\n                    that.lockedContent.find('col:not(.k-group-col):not(.k-hierarchy-col)').removeClass('k-sorted');\n                }\n            },\n            _layout: function () {\n                var columns = this.columns;\n                var element = this.element;\n                var layout = '';\n                this.wrapper = element.addClass(classNames.wrapper);\n                layout = '<div class=\\'#= gridHeader #\\'>';\n                if (this._hasLockedColumns) {\n                    layout += '<div class=\\'k-grid-header-locked\\'>' + '<table role=\\'grid\\'>' + '<colgroup></colgroup>' + '<thead role=\\'rowgroup\\' />' + '</table>' + '</div>';\n                }\n                layout += '<div class=\\'#= gridHeaderWrap #\\'>' + '<table role=\\'grid\\'>' + '<colgroup></colgroup>' + '<thead role=\\'rowgroup\\' />' + '</table>' + '</div>' + '</div>';\n                if (this._hasLockedColumns) {\n                    layout += '<div class=\\'k-grid-content-locked\\'>' + '<table role=\\'treegrid\\' tabindex=\\'0\\'>' + '<colgroup></colgroup>' + '<tbody />' + '</table>' + '</div>';\n                }\n                layout += '<div class=\\'#= gridContentWrap # k-auto-scrollable\\'>' + '<table role=\\'treegrid\\' tabindex=\\'0\\'>' + '<colgroup></colgroup>' + '<tbody />' + '</table>' + '</div>';\n                if (!this.options.scrollable) {\n                    layout = '<table role=\\'treegrid\\' tabindex=\\'0\\'>' + '<colgroup></colgroup>' + '<thead class=\\'#= gridHeader #\\' role=\\'rowgroup\\' />' + '<tbody />' + '</table>';\n                }\n                if (this.options.toolbar) {\n                    layout = '<div class=\\'#= header # #= gridToolbar #\\' />' + layout;\n                }\n                element.append(kendo.template(layout)(classNames) + '<div class=\\'k-status\\' />');\n                this.toolbar = element.find(DOT + classNames.gridToolbar);\n                var header = element.find(DOT + classNames.gridHeader).find('thead').addBack().filter('thead');\n                this.thead = header.last();\n                if (this.options.scrollable) {\n                    var rtl = kendo.support.isRtl(element);\n                    element.find('div.' + classNames.gridHeader).css(rtl ? 'padding-left' : 'padding-right', kendo.support.scrollbar());\n                }\n                var content = element.find(DOT + classNames.gridContentWrap);\n                if (!content.length) {\n                    content = element;\n                } else {\n                    this.content = content;\n                }\n                this.table = content.find('>table');\n                this.tbody = this.table.find('>tbody');\n                if (this._hasLockedColumns) {\n                    this.lockedHeader = header.first().closest('.k-grid-header-locked');\n                    this.lockedContent = element.find('.k-grid-content-locked');\n                    this.lockedTable = this.lockedContent.children();\n                }\n                this._initVirtualTrees();\n                this._renderCols();\n                this._renderHeader();\n                this.angular('compile', function () {\n                    return {\n                        elements: header.find('th.k-header').get(),\n                        data: map(columns, function (col) {\n                            return { column: col };\n                        })\n                    };\n                });\n            },\n            _initVirtualTrees: function () {\n                this._headerColsTree = new kendoDom.Tree(this.thead.prev()[0]);\n                this._contentColsTree = new kendoDom.Tree(this.tbody.prev()[0]);\n                this._headerTree = new kendoDom.Tree(this.thead[0]);\n                this._contentTree = new kendoDom.Tree(this.tbody[0]);\n                this._statusTree = new kendoDom.Tree(this.element.children('.k-status')[0]);\n                if (this.lockedHeader) {\n                    this._lockedHeaderColsTree = new kendoDom.Tree(this.lockedHeader.find('colgroup')[0]);\n                    this._lockedContentColsTree = new kendoDom.Tree(this.lockedTable.find('>colgroup')[0]);\n                    this._lockedHeaderTree = new kendoDom.Tree(this.lockedHeader.find('thead')[0]);\n                    this._lockedContentTree = new kendoDom.Tree(this.lockedTable.find('>tbody')[0]);\n                }\n            },\n            _toolbar: function () {\n                var options = this.options.toolbar;\n                var toolbar = this.toolbar;\n                if (!options) {\n                    return;\n                }\n                if ($.isArray(options)) {\n                    var buttons = this._buildCommands(options);\n                    new kendoDom.Tree(toolbar[0]).render(buttons);\n                } else {\n                    toolbar.append(kendo.template(options)({}));\n                }\n                this.angular('compile', function () {\n                    return { elements: toolbar.get() };\n                });\n            },\n            _lockedColumns: function () {\n                return grep(this.columns, is('locked'));\n            },\n            _nonLockedColumns: function () {\n                return grep(this.columns, not(is('locked')));\n            },\n            _templateColumns: function () {\n                return grep(this.columns, is('template'));\n            },\n            _flushCache: function () {\n                if (this.options.$angular && this._templateColumns().length) {\n                    this._contentTree.render([]);\n                    if (this._hasLockedColumns) {\n                        this._lockedContentTree.render([]);\n                    }\n                }\n            },\n            _render: function (options) {\n                var that = this;\n                options = options || {};\n                options = that._renderOptions(options);\n                var messages = this.options.messages;\n                var pageable = that._isPageable();\n                var dataSource = that.dataSource;\n                var maps = {\n                    children: options.filteredChildrenMap || options.childrenMap,\n                    ids: options.idsMap\n                };\n                var dataMaps = pageable ? maps && maps.children && maps.ids ? maps : dataSource._initDataMaps(dataSource._getData()) : {};\n                var childrenMap = dataMaps.children;\n                var idsMap = dataMaps.ids;\n                options.childrenMap = childrenMap;\n                options.idsMap = idsMap;\n                var data = that._dataToRender(options);\n                var level = that._renderedModelLevel(data[0], options);\n                var uidAttr = kendo.attr('uid');\n                var hasFooterTemplate;\n                var selected = this.select().removeClass('k-state-selected').map(function (_, row) {\n                    return $(row).attr(uidAttr);\n                });\n                var viewChildrenMap;\n                this._absoluteIndex = 0;\n                this._angularItems('cleanup');\n                this._angularFooters('cleanup');\n                this._flushCache();\n                that._clearRenderMap();\n                if (options.error) {\n                    this._showStatus(kendo.template('#: messages.requestFailed # ' + '<button class=\\'#= buttonClass #\\'>#: messages.retry #</button>')({\n                        buttonClass: [\n                            classNames.button,\n                            classNames.retry\n                        ].join(' '),\n                        messages: messages\n                    }));\n                } else if (!data.length) {\n                    this._hideStatus();\n                    this._showNoRecordsTemplate();\n                } else {\n                    if (pageable) {\n                        viewChildrenMap = that._viewChildrenMap(options);\n                    }\n                    this._hideStatus();\n                    hasFooterTemplate = this._hasFooterTemplate();\n                    this._contentTree.render(this._trs({\n                        columns: leafColumns(nonLockedColumns(this.columns)),\n                        editedColumn: options.editedColumn,\n                        editedColumnIndex: options.editedColumnIndex,\n                        aggregates: options.aggregates,\n                        selected: selected,\n                        data: data,\n                        childrenMap: childrenMap,\n                        viewChildrenMap: viewChildrenMap,\n                        hasFooterTemplate: hasFooterTemplate,\n                        visible: true,\n                        level: 0\n                    }));\n                    if (this._hasLockedColumns) {\n                        this._absoluteIndex = 0;\n                        this._lockedContentTree.render(this._trs({\n                            columns: leafColumns(lockedColumns(this.columns)),\n                            editedColumn: options.editedColumn,\n                            editedColumnIndex: options.editedColumnIndex,\n                            aggregates: options.aggregates,\n                            selected: selected,\n                            data: data,\n                            childrenMap: childrenMap,\n                            viewChildrenMap: viewChildrenMap,\n                            hasFooterTemplate: hasFooterTemplate,\n                            visible: true,\n                            level: level\n                        }));\n                    }\n                }\n                if (this._touchScroller) {\n                    this._touchScroller.contentResized();\n                }\n                this._muteAngularRebind(function () {\n                    this._angularItems('compile');\n                    this._angularFooters('compile');\n                });\n                this.items().filter(function () {\n                    return $.inArray($(this).attr(uidAttr), selected) >= 0;\n                }).addClass('k-state-selected');\n                this._syncLockedContentHeight();\n                that._togglePagerVisibility();\n                that._setExpanderElement();\n            },\n            _setExpanderElement: function () {\n                var that = this, hiddenDivClass = 'k-grid-content-expander', hiddenDiv = '<div class=\"' + hiddenDivClass + '\"></div>', expander;\n                if (that.options.scrollable && that.wrapper.is(':visible')) {\n                    expander = that.table.parent().children('.' + hiddenDivClass);\n                    if (!that.dataSource || !that.dataSource.view().length) {\n                        if (!expander[0]) {\n                            expander = $(hiddenDiv).appendTo(that.table.parent());\n                        }\n                        if (that.thead) {\n                            expander.width(that.thead.width());\n                        }\n                    } else if (expander[0]) {\n                        expander.remove();\n                    }\n                }\n            },\n            _renderProgress: function (toggle) {\n                kendo.ui.progress(this.wrapper, toggle);\n            },\n            _renderOptions: function (options) {\n                options = options || {};\n                var that = this;\n                var dataMaps = that.dataSource._getDataMaps();\n                var filter = that.dataSource.filter();\n                if (that._isPageable()) {\n                    options.childrenMap = dataMaps.children;\n                    options.idsMap = dataMaps.ids;\n                    if (filter) {\n                        options.filteredChildrenMap = dataMaps.filteredChildren;\n                    }\n                }\n                return options;\n            },\n            _renderedModelLevel: function (model, options) {\n                return !this._isPageable() ? 0 : this.dataSource._pageableModelLevel(model, options);\n            },\n            _viewChildrenMap: function (options) {\n                options = options || {};\n                var that = this;\n                var dataSource = that.dataSource;\n                var viewChildrenMap = dataSource.childrenMap(dataSource.view());\n                var idField = dataSource._modelIdField();\n                var parentsNotInView = dataSource._parentNodesNotInView();\n                var parentNotInView;\n                var parentNotInViewId;\n                var parents;\n                var parent;\n                var parentId;\n                var child;\n                var childId;\n                var parentsCopy;\n                that._clearRenderMap();\n                for (var i = 0; i < parentsNotInView.length; i++) {\n                    parentNotInView = parentsNotInView[i];\n                    parentNotInViewId = parentNotInView[idField];\n                    that._markNodeAsNonRenderable(parentNotInViewId);\n                    viewChildrenMap[parentNotInViewId] = viewChildrenMap[parentNotInViewId] || [];\n                    parents = dataSource._parentNodes(parentNotInView);\n                    parentsCopy = parents.slice();\n                    parentsCopy.push(parentNotInView);\n                    for (var parentIndex = 0; parentIndex < parentsCopy.length - 1; parentIndex++) {\n                        parent = parentsCopy[parentIndex];\n                        parentId = parent[idField];\n                        that._markNodeAsNonRenderable(parentId);\n                        viewChildrenMap[parentId] = viewChildrenMap[parentId] || [];\n                        child = parentsCopy[parentIndex + 1];\n                        childId = child[idField];\n                        that._markNodeAsNonRenderable(childId);\n                        viewChildrenMap[childId] = viewChildrenMap[childId] || [];\n                        if (viewChildrenMap[parentId].indexOf(child) === -1) {\n                            viewChildrenMap[parentId].unshift(child);\n                        }\n                    }\n                }\n                return viewChildrenMap;\n            },\n            _clearRenderMap: function () {\n                this._skipRenderingMap = {};\n            },\n            _dataToRender: function (options) {\n                var that = this;\n                if (that._isPageable()) {\n                    return that.dataSource._pageableRootNodes(options);\n                }\n                return that.dataSource.rootNodes();\n            },\n            _markNodeAsNonRenderable: function (nodeId) {\n                this._skipRenderingMap[nodeId] = true;\n            },\n            _adjustRowsHeight: function (table1, table2) {\n                if (!this._hasLockedColumns) {\n                    return;\n                }\n                var rows = table1[0].rows;\n                var length = rows.length;\n                var idx;\n                var rows2 = table2[0].rows;\n                var containers = table1.add(table2);\n                var containersLength = containers.length;\n                var heights = [];\n                for (idx = 0; idx < length; idx++) {\n                    if (!rows2[idx]) {\n                        break;\n                    }\n                    if (rows[idx].style.height) {\n                        rows[idx].style.height = rows2[idx].style.height = '';\n                    }\n                }\n                for (idx = 0; idx < length; idx++) {\n                    if (!rows2[idx]) {\n                        break;\n                    }\n                    var offsetHeight1 = rows[idx].offsetHeight;\n                    var offsetHeight2 = rows2[idx].offsetHeight;\n                    var height = 0;\n                    if (offsetHeight1 > offsetHeight2) {\n                        height = offsetHeight1;\n                    } else if (offsetHeight1 < offsetHeight2) {\n                        height = offsetHeight2;\n                    }\n                    heights.push(height);\n                }\n                for (idx = 0; idx < containersLength; idx++) {\n                    containers[idx].style.display = 'none';\n                }\n                for (idx = 0; idx < length; idx++) {\n                    if (heights[idx]) {\n                        rows[idx].style.height = rows2[idx].style.height = heights[idx] + 1 + 'px';\n                    }\n                }\n                for (idx = 0; idx < containersLength; idx++) {\n                    containers[idx].style.display = '';\n                }\n            },\n            _ths: function (columns, rowSpan) {\n                var ths = [];\n                var column, title, children, cellClasses, attr, headerContent;\n                for (var i = 0, length = columns.length; i < length; i++) {\n                    column = columns[i];\n                    children = [];\n                    cellClasses = [classNames.header];\n                    if (column.headerTemplate) {\n                        title = column.headerTemplate({});\n                    } else {\n                        title = column.title || column.field || '';\n                    }\n                    if (column.headerTemplate) {\n                        headerContent = kendoHtmlElement(title);\n                    } else {\n                        headerContent = kendoTextElement(title);\n                    }\n                    if (column.sortable) {\n                        children.push(kendoDomElement('a', {\n                            href: '#',\n                            className: classNames.link\n                        }, [headerContent]));\n                    } else {\n                        children.push(headerContent);\n                    }\n                    attr = {\n                        'data-field': column.field,\n                        'data-title': column.title,\n                        'style': column.hidden === true ? { 'display': 'none' } : {},\n                        className: cellClasses.join(' '),\n                        'role': 'columnheader'\n                    };\n                    if (!column.columns) {\n                        attr.rowSpan = rowSpan ? rowSpan : 1;\n                    }\n                    if (column.headerAttributes) {\n                        if (column.headerAttributes.colSpan === 1) {\n                            delete column.headerAttributes.colSpan;\n                        }\n                        if (column.headerAttributes['class']) {\n                            attr.className += ' ' + column.headerAttributes['class'];\n                            delete column.headerAttributes['class'];\n                        }\n                    }\n                    if (column['data-index'] > -1) {\n                        attr['data-index'] = column['data-index'];\n                    }\n                    attr = extend(true, {}, attr, column.headerAttributes);\n                    ths.push(kendoDomElement('th', attr, children));\n                }\n                return ths;\n            },\n            _cols: function (columns) {\n                var cols = [];\n                var width, attr;\n                for (var i = 0; i < columns.length; i++) {\n                    if (columns[i].hidden === true) {\n                        continue;\n                    }\n                    width = columns[i].width;\n                    attr = {};\n                    if (width && parseInt(width, 10) !== 0) {\n                        attr.style = { width: typeof width === 'string' ? width : width + 'px' };\n                    }\n                    cols.push(kendoDomElement('col', attr));\n                }\n                return cols;\n            },\n            _clearColsCache: function () {\n                this._headerColsTree.render([]);\n                if (this.options.scrollable) {\n                    this._contentColsTree.render([]);\n                }\n                if (this._hasLockedColumns) {\n                    this._lockedHeaderColsTree.render([]);\n                    this._lockedContentColsTree.render([]);\n                }\n            },\n            _renderCols: function () {\n                var columns = nonLockedColumns(this.columns);\n                this._headerColsTree.render(this._cols(leafColumns(columns)));\n                if (this.options.scrollable) {\n                    this._contentColsTree.render(this._cols(leafColumns(columns)));\n                }\n                if (this._hasLockedColumns) {\n                    columns = lockedColumns(this.columns);\n                    this._lockedHeaderColsTree.render(this._cols(leafColumns(columns)));\n                    this._lockedContentColsTree.render(this._cols(leafColumns(columns)));\n                }\n            },\n            _retrieveFirstColumn: function (columns, rows) {\n                var result = $();\n                if (rows.length && columns[0]) {\n                    var column = columns[0];\n                    while (column.columns && column.columns.length) {\n                        column = column.columns[0];\n                        rows = rows.filter(':not(:first())');\n                    }\n                    result = result.add(rows);\n                }\n                return result;\n            },\n            _updateFirstColumnClass: function () {\n                var that = this;\n                var columns = that.columns || [];\n                var tr = that.thead.find('>tr:not(:first)');\n                var rows;\n                columns = nonLockedColumns(columns);\n                rows = that._retrieveFirstColumn(columns, tr);\n                if (that.lockedHeader) {\n                    tr = that.lockedHeader.find('thead>tr:not(.k-filter-row):not(:first)');\n                    columns = lockedColumns(that.columns);\n                    rows = rows.add(that._retrieveFirstColumn(columns, tr));\n                }\n                rows.each(function () {\n                    var ths = $(this).find('th');\n                    ths.removeClass('k-first');\n                    ths.eq(0).addClass('k-first');\n                });\n            },\n            _updateRowSpans: function (rows) {\n                for (var i = rows.length - 1; i >= 0; i--) {\n                    var included = visibleChildColumns(rows[i].cells).length > 0;\n                    if (included) {\n                        rows[i].rowSpan = rows.length - i;\n                    }\n                }\n            },\n            _setColumnDataIndexes: function (columns) {\n                for (var i = 0; i < columns.length; i++) {\n                    columns[i]['data-index'] = i;\n                }\n            },\n            _updateColumnCellIndex: function () {\n                var header;\n                var offset = 0;\n                if (this.lockedHeader) {\n                    header = this.lockedHeader.find('thead');\n                    offset = updateCellIndex(header, lockedColumns(this.columns));\n                }\n                updateCellIndex(this.thead, nonLockedColumns(this.columns), offset);\n            },\n            _setParentsVisibility: function (column, visible) {\n                var columns = this.columns;\n                var idx;\n                var parents = [];\n                var parent;\n                var predicate = visible ? function (p) {\n                    return visibleColumns(p.columns).length && p.hidden;\n                } : function (p) {\n                    return !visibleColumns(p.columns).length && !p.hidden;\n                };\n                if (columnParents(column, columns, parents) && parents.length) {\n                    for (idx = parents.length - 1; idx >= 0; idx--) {\n                        parent = parents[idx];\n                        if (predicate(parent)) {\n                            parent.hidden = !visible;\n                        }\n                    }\n                }\n            },\n            _prepareColumns: function (rows, columns, parentCell, parentRow, parentColumn) {\n                var row = parentRow || rows[rows.length - 1];\n                var childRow = rows[row.index + 1];\n                var totalColSpan = 0;\n                for (var idx = 0; idx < columns.length; idx++) {\n                    var cell = $.extend({}, columns[idx], { headerAttributes: columns[idx].headerAttributes || {} });\n                    row.cells.push(cell);\n                    if (columns[idx].columns && columns[idx].columns.length) {\n                        if (!childRow) {\n                            childRow = {\n                                rowSpan: 0,\n                                cells: [],\n                                index: rows.length\n                            };\n                            rows.push(childRow);\n                        }\n                        if (columns[idx].columns.length) {\n                            cell.headerAttributes.colSpan = visibleChildColumns(columns[idx].columns).length || 1;\n                            cell.headerAttributes['data-colspan'] = leafColumns(columns[idx].columns).length;\n                        }\n                        this._prepareColumns(rows, columns[idx].columns, cell, childRow, columns[idx]);\n                        if (!cell.hidden) {\n                            totalColSpan += cell.headerAttributes.colSpan - 1;\n                        }\n                        row.rowSpan = rows.length - row.index;\n                    }\n                    columns[idx].rowIndex = row.index;\n                    if (parentColumn) {\n                        columns[idx].parentColumn = parentColumn;\n                    }\n                    columns[idx].cellIndex = row.cells.length - 1;\n                }\n                if (parentCell) {\n                    parentCell.headerAttributes.colSpan += totalColSpan;\n                }\n            },\n            _renderHeaderTree: function (tree, columns, hasMultiColumnHeaders) {\n                var idx;\n                var rows = [];\n                var rowsToRender = [];\n                if (hasMultiColumnHeaders) {\n                    rows = [{\n                            rowSpan: 1,\n                            cells: [],\n                            index: 0\n                        }];\n                    this._prepareColumns(rows, columns);\n                    this._updateRowSpans(rows);\n                    for (idx = 0; idx < rows.length; idx++) {\n                        rowsToRender.push(kendoDomElement('tr', { 'role': 'row' }, this._ths(rows[idx].cells, rows[idx].rowSpan)));\n                    }\n                    tree.render(rowsToRender);\n                } else {\n                    tree.render([kendoDomElement('tr', { 'role': 'row' }, this._ths(columns))]);\n                }\n            },\n            _renderHeader: function () {\n                var columns = nonLockedColumns(this.columns);\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                this._setColumnDataIndexes(leafColumns(this.columns));\n                this._renderHeaderTree(this._headerTree, columns, hasMultiColumnHeaders);\n                if (this._hasLockedColumns) {\n                    columns = lockedColumns(this.columns);\n                    this._renderHeaderTree(this._lockedHeaderTree, columns, hasMultiColumnHeaders);\n                    this._applyLockedContainersWidth();\n                    this._syncLockedHeaderHeight();\n                }\n                this._updateFirstColumnClass();\n            },\n            _applyLockedContainersWidth: function () {\n                if (!this._hasLockedColumns) {\n                    return;\n                }\n                var lockedWidth = columnsWidth(this.lockedHeader.find('>table>colgroup>col'));\n                var headerTable = this.thead.parent();\n                var nonLockedWidth = columnsWidth(headerTable.find('>colgroup>col'));\n                var wrapperWidth = this.wrapper[0].clientWidth;\n                var scrollbar = kendo.support.scrollbar();\n                if (lockedWidth >= wrapperWidth) {\n                    lockedWidth = wrapperWidth - 3 * scrollbar;\n                }\n                this.lockedHeader.add(this.lockedContent).width(lockedWidth);\n                headerTable.add(this.table).width(nonLockedWidth);\n                var width = wrapperWidth - lockedWidth;\n                this.content.width(width - 1);\n                headerTable.parent().width(width - scrollbar - 2);\n            },\n            _trs: function (options) {\n                var that = this;\n                var model, attr, className, hasChildren, childNodes, i, length;\n                var modelId;\n                var rows = [];\n                var level = options.level;\n                var data = options.data;\n                var dataSource = this.dataSource;\n                var aggregates = dataSource.aggregates() || {};\n                var idField = dataSource._modelIdField();\n                var parentIdField = dataSource._modelParentIdField();\n                var columns = options.columns;\n                var pageable = that._isPageable();\n                var childrenMap = options.childrenMap || dataSource.childrenMap(dataSource._getData());\n                for (i = 0, length = data.length; i < length; i++) {\n                    className = [];\n                    model = data[i];\n                    modelId = model[idField];\n                    childNodes = pageable ? childrenMap[modelId] : model.loaded() ? dataSource.childNodes(model) : [];\n                    hasChildren = childNodes && childNodes.length;\n                    attr = { 'role': 'row' };\n                    attr[kendo.attr('uid')] = model.uid;\n                    if (hasChildren) {\n                        attr['aria-expanded'] = !!model.expanded;\n                    }\n                    if (options.visible) {\n                        if (!pageable || pageable && !that._skipRenderingMap[modelId]) {\n                            if (this._absoluteIndex % 2 !== 0) {\n                                className.push(classNames.alt);\n                            }\n                            this._absoluteIndex++;\n                        }\n                    } else {\n                        attr.style = { display: 'none' };\n                    }\n                    if ($.inArray(model.uid, options.selected) >= 0) {\n                        className.push(classNames.selected);\n                    }\n                    if (hasChildren) {\n                        className.push(classNames.group);\n                    }\n                    if (model._edit) {\n                        className.push('k-grid-edit-row');\n                    }\n                    attr.className = className.join(' ');\n                    if (!that._skipRenderingMap[modelId]) {\n                        var row = this._tds({\n                            model: model,\n                            attr: attr,\n                            level: pageable ? that._renderedModelLevel(model, options) : level,\n                            editedColumn: options.editedColumn,\n                            editedColumnIndex: options.editedColumnIndex\n                        }, columns, proxy(this._td, this));\n                        rows.push(row);\n                    }\n                    if (hasChildren) {\n                        if (pageable) {\n                            childNodes = (options.viewChildrenMap || {})[modelId] || [];\n                        }\n                        if (childNodes.length === 0) {\n                            continue;\n                        }\n                        rows = rows.concat(this._trs({\n                            columns: columns,\n                            editedColumn: options.editedColumn,\n                            editedColumnIndex: options.editedColumnIndex,\n                            aggregates: aggregates,\n                            selected: options.selected,\n                            visible: pageable ? options.visible : options.visible && !!model.expanded,\n                            data: childNodes,\n                            childrenMap: options.childrenMap || childrenMap,\n                            hasFooterTemplate: options.hasFooterTemplate,\n                            viewChildrenMap: options.viewChildrenMap,\n                            level: level + 1\n                        }));\n                    }\n                }\n                if (options.hasFooterTemplate && model) {\n                    attr = {\n                        className: classNames.footerTemplate,\n                        'data-parentId': model[parentIdField]\n                    };\n                    if (!options.visible) {\n                        attr.style = { display: 'none' };\n                    }\n                    rows.push(this._tds({\n                        model: aggregates[model[parentIdField]],\n                        attr: attr,\n                        level: level,\n                        editedColumn: options.editedColumn,\n                        editedColumnIndex: options.editedColumnIndex\n                    }, columns, this._footerId));\n                }\n                return rows;\n            },\n            _footerId: function (options) {\n                var content = [];\n                var column = options.column;\n                var template = options.column.footerTemplate || $.noop;\n                var aggregates = options.model[column.field] || {};\n                var attr = {\n                    'role': 'gridcell',\n                    'style': column.hidden === true ? { 'display': 'none' } : {}\n                };\n                if (column.expandable) {\n                    content = content.concat(createPlaceholders({\n                        level: options.level + 1,\n                        className: classNames.iconPlaceHolder\n                    }));\n                }\n                if (column.attributes) {\n                    extend(true, attr, column.attributes, { 'style': column.hidden === true ? { 'display': 'none' } : {} });\n                }\n                content.push(kendoHtmlElement(template(aggregates) || ''));\n                return kendoDomElement('td', attr, content);\n            },\n            _hasFooterTemplate: function () {\n                return !!grep(leafColumns(this.columns), function (c) {\n                    return c.footerTemplate;\n                }).length;\n            },\n            _tds: function (options, columns, renderer) {\n                var children = [];\n                var column;\n                var editedColumnField = (options.editedColumn || {}).field;\n                var incellEditing = this._isIncellEditable();\n                var length = columns.length;\n                for (var i = 0; i < length; i++) {\n                    column = columns[i];\n                    var col = renderer({\n                        model: options.model,\n                        column: column,\n                        editColumn: !incellEditing || incellEditing && column.field === editedColumnField && options.editedColumnIndex === i,\n                        level: options.level\n                    });\n                    children.push(col);\n                }\n                return kendoDomElement('tr', options.attr, children);\n            },\n            _td: function (options) {\n                var children = [];\n                var model = options.model;\n                var column = options.column;\n                var iconClass;\n                var attr = {\n                    'role': 'gridcell',\n                    'style': column.hidden === true ? { 'display': 'none' } : {}\n                };\n                var incellEditing = this._isIncellEditable();\n                var columnHasEditCommand = false;\n                if (column.attributes) {\n                    extend(true, attr, column.attributes);\n                }\n                if (this.options.navigatable) {\n                    attr['aria-describedby'] = column.headerAttributes.id;\n                }\n                if (model._edit && column.field && options.editColumn && (incellEditing || !incellEditing && isColumnEditable(column, model))) {\n                    attr[kendo.attr('container-for')] = column.field;\n                    if (incellEditing) {\n                        if (attr.className && attr.className.indexOf(classNames.editCell) !== -1) {\n                            attr.className += ' ' + classNames.editCell;\n                        } else if (!attr.className) {\n                            attr.className = classNames.editCell;\n                        }\n                    }\n                } else {\n                    if (column.expandable) {\n                        children = createPlaceholders({\n                            level: options.level,\n                            className: classNames.iconPlaceHolder\n                        });\n                        iconClass = [classNames.icon];\n                        if (model.hasChildren) {\n                            iconClass.push(model.expanded ? classNames.iconCollapse : classNames.iconExpand);\n                        } else {\n                            iconClass.push(classNames.iconHidden);\n                        }\n                        if (model._error) {\n                            iconClass.push(classNames.refresh);\n                        } else if (!model.loaded() && model.expanded) {\n                            iconClass.push(classNames.loading);\n                        }\n                        children.push(kendoDomElement('span', { className: iconClass.join(' ') }));\n                        attr.style['white-space'] = 'nowrap';\n                    }\n                    if (isDirtyColumn(column, model)) {\n                        if (attr.className) {\n                            attr.className += classNames.dirtyCell;\n                        } else if (!attr.className) {\n                            attr.className = classNames.dirtyCell;\n                        }\n                    }\n                    if (column.command) {\n                        if (attr.className && attr.className.indexOf('k-command-cell') !== -1) {\n                            attr.className += ' k-command-cell';\n                        } else if (!attr.className) {\n                            attr.className = 'k-command-cell';\n                        }\n                        columnHasEditCommand = grep(column.command, function (command) {\n                            return command === EDIT || command.name === EDIT;\n                        }).length > 0;\n                        if (model._edit && !this._isIncellEditable() && columnHasEditCommand) {\n                            children = this._buildCommands([\n                                'update',\n                                'canceledit'\n                            ]);\n                        } else {\n                            children = this._buildCommands(column.command);\n                        }\n                    } else {\n                        children.push(this._cellContent(column, model));\n                    }\n                    if (attr['class']) {\n                        attr.className = attr['class'] + ' ' + attr.className;\n                    }\n                }\n                return kendoDomElement('td', attr, children);\n            },\n            _cellContent: function (column, model) {\n                var that = this;\n                var value;\n                var incellEditing = that._isIncellEditable();\n                var dirtyIndicator = incellEditing ? that._evalDirtyIndicatorTemplate(column, model) : '';\n                if (column.template) {\n                    value = that._evalColumnTemplate(column, model);\n                } else if (column.field) {\n                    value = model.get(column.field);\n                    if (value !== null && !isUndefined(value)) {\n                        if (column.format) {\n                            value = kendo.format(column.format, value);\n                        }\n                        value = dirtyIndicator + value;\n                    } else {\n                        value = dirtyIndicator;\n                    }\n                } else if (value === null || isUndefined(value)) {\n                    value = '';\n                }\n                if (column.template || !column.encoded) {\n                    return kendoHtmlElement(value);\n                } else {\n                    if (incellEditing) {\n                        return kendoHtmlElement(value);\n                    } else {\n                        return kendoTextElement(value);\n                    }\n                }\n            },\n            _evalColumnTemplate: function (column, model) {\n                if (this._isIncellEditable()) {\n                    return this._evalCustomColumnTemplate(column, model);\n                } else {\n                    return column.template(model);\n                }\n            },\n            _evalCustomColumnTemplate: function (column, model) {\n                var that = this;\n                var templateSettings = that._customTemplateSettings();\n                var columnTemplateAlias = '#=this.columnTemplate(' + templateSettings.paramName + ')#';\n                var templateString = that._dirtyIndicatorTemplate(column.field) + columnTemplateAlias;\n                var templateFunction = proxy(kendoTemplate(templateString, templateSettings), { columnTemplate: column.template });\n                return templateFunction(model);\n            },\n            _evalDirtyIndicatorTemplate: function (column, model) {\n                var dirtyIndicatorTemplate = this._dirtyIndicatorTemplate(column.field);\n                return kendoTemplate(dirtyIndicatorTemplate)(model);\n            },\n            _dirtyIndicatorTemplate: function (field) {\n                var that = this;\n                var dirtyField;\n                var templateSettings = that._customTemplateSettings();\n                var paramName = templateSettings.paramName;\n                if (field && paramName) {\n                    dirtyField = field.charAt(0) === '[' ? kendo.expr(field, paramName + '.dirtyFields') : paramName + '.dirtyFields[\\'' + field + '\\']';\n                    return '#= ' + paramName + ' && ' + paramName + '.dirty && ' + paramName + '.dirtyFields && ' + dirtyField + ' ? \\'<span class=\"k-dirty\"></span>\\' : \\'\\' #';\n                }\n                return '';\n            },\n            _customTemplateSettings: function () {\n                return extend({}, kendo.Template, this.options.templateSettings);\n            },\n            _buildCommands: function (commands) {\n                var i, result = [];\n                for (i = 0; i < commands.length; i++) {\n                    result.push(this._handleCommand(commands[i]));\n                }\n                return result;\n            },\n            _handleCommand: function (command) {\n                var name = (command.name || command).toLowerCase();\n                var text = this.options.messages.commands[name];\n                var icon = [];\n                command = extend({}, defaultCommands[name], { text: text }, command);\n                if (command.imageClass) {\n                    icon.push(kendoDomElement('span', {\n                        className: [\n                            'k-icon',\n                            command.imageClass\n                        ].join(' ')\n                    }));\n                }\n                if (command.template) {\n                    return kendoHtmlElement(kendo.template(command.template)({ message: command.text || this.options.messages.commands.search }));\n                } else {\n                    return this._button(command, name, icon);\n                }\n            },\n            _button: function (command, name, icon) {\n                return kendoDomElement('button', {\n                    'type': 'button',\n                    'data-command': name,\n                    className: [\n                        'k-button',\n                        'k-button-icontext',\n                        command.className\n                    ].join(' ')\n                }, icon.concat([kendoTextElement(command.text || command.name)]));\n            },\n            _positionResizeHandle: function (e) {\n                var th = $(e.currentTarget);\n                var resizeHandle = this.resizeHandle;\n                var position = th.position();\n                var left;\n                var cellWidth = outerWidth(th);\n                var container = th.closest('div');\n                var button = typeof e.buttons !== 'undefined' ? e.buttons : e.which || e.button;\n                var indicatorWidth = this.options.columnResizeHandleWidth || 3;\n                left = cellWidth;\n                if (typeof button !== 'undefined' && button !== 0) {\n                    return;\n                }\n                if (!resizeHandle) {\n                    resizeHandle = this.resizeHandle = $('<div class=\"k-resize-handle\"><div class=\"k-resize-handle-inner\" /></div>');\n                }\n                var cells = leafDataCells(th.closest('thead')).filter(':visible');\n                if (isRtl) {\n                    left = th.position().left;\n                } else {\n                    for (var idx = 0; idx < cells.length; idx++) {\n                        if (cells[idx] == th[0]) {\n                            break;\n                        }\n                        left += cells[idx].offsetWidth;\n                    }\n                }\n                container.append(resizeHandle);\n                resizeHandle.show().css({\n                    top: position.top,\n                    left: left - indicatorWidth * 3 / 2,\n                    height: outerHeight(th),\n                    width: indicatorWidth * 3\n                }).data('th', th);\n                var that = this;\n                resizeHandle.off('dblclick' + NS).on('dblclick' + NS, function () {\n                    var index = th.index();\n                    if ($.contains(that.thead[0], th[0])) {\n                        index += grep(that.columns, function (val) {\n                            return val.locked && !val.hidden;\n                        }).length;\n                    }\n                    that.autoFitColumn(index);\n                });\n            },\n            autoFitColumn: function (column) {\n                var that = this, options = that.options, columns = that.columns, index, browser = kendo.support.browser, th, headerTable, isLocked, visibleLocked = that.lockedHeader ? leafDataCells(that.lockedHeader.find('>table>thead')).filter(isCellVisible).length : 0, col;\n                if (typeof column == 'number') {\n                    column = columns[column];\n                } else if (isPlainObject(column)) {\n                    column = grep(columns, function (item) {\n                        return item === column;\n                    })[0];\n                } else {\n                    column = grep(columns, function (item) {\n                        return item.field === column;\n                    })[0];\n                }\n                if (!column || column.hidden) {\n                    return;\n                }\n                index = inArray(column, columns);\n                isLocked = column.locked;\n                if (isLocked) {\n                    headerTable = that.lockedHeader.children('table');\n                } else {\n                    headerTable = that.thead.parent();\n                }\n                th = headerTable.find('[data-index=\\'' + index + '\\']');\n                var contentTable = isLocked ? that.lockedTable : that.table, footer = that.footer || $();\n                if (that.footer && that.lockedContent) {\n                    footer = isLocked ? that.footer.children('.k-grid-footer-locked') : that.footer.children('.k-grid-footer-wrap');\n                }\n                var footerTable = footer.find('table').first();\n                if (that.lockedHeader && visibleLocked >= index && !isLocked) {\n                    index -= visibleLocked;\n                }\n                for (var j = 0; j < columns.length; j++) {\n                    if (columns[j] === column) {\n                        break;\n                    } else {\n                        if (columns[j].hidden) {\n                            index--;\n                        }\n                    }\n                }\n                if (options.scrollable) {\n                    col = headerTable.find('col:not(.k-group-col):not(.k-hierarchy-col):eq(' + index + ')').add(contentTable.children('colgroup').find('col:not(.k-group-col):not(.k-hierarchy-col):eq(' + index + ')')).add(footerTable.find('colgroup').find('col:not(.k-group-col):not(.k-hierarchy-col):eq(' + index + ')'));\n                } else {\n                    col = contentTable.children('colgroup').find('col:not(.k-group-col):not(.k-hierarchy-col):eq(' + index + ')');\n                }\n                var tables = headerTable.add(contentTable).add(footerTable);\n                var oldColumnWidth = outerWidth(th);\n                col.width('');\n                tables.css('table-layout', 'fixed');\n                col.width('auto');\n                tables.addClass('k-autofitting');\n                tables.css('table-layout', '');\n                var newColumnWidth = Math.ceil(Math.max(outerWidth(th), outerWidth(contentTable.find('tr').eq(0).children('td:visible').eq(index)), outerWidth(footerTable.find('tr').eq(0).children('td:visible').eq(index))));\n                col.width(newColumnWidth);\n                column.width = newColumnWidth;\n                if (options.scrollable) {\n                    var cols = headerTable.find('col'), colWidth, totalWidth = 0;\n                    for (var idx = 0, length = cols.length; idx < length; idx += 1) {\n                        colWidth = cols[idx].style.width;\n                        if (colWidth && colWidth.indexOf('%') == -1) {\n                            totalWidth += parseInt(colWidth, 10);\n                        } else {\n                            totalWidth = 0;\n                            break;\n                        }\n                    }\n                    if (totalWidth) {\n                        tables.each(function () {\n                            this.style.width = totalWidth + 'px';\n                        });\n                    }\n                }\n                if (browser.msie && browser.version == 8) {\n                    tables.css('display', 'inline-table');\n                    setTimeout(function () {\n                        tables.css('display', 'table');\n                    }, 1);\n                }\n                tables.removeClass('k-autofitting');\n                that.trigger(COLUMNRESIZE, {\n                    column: column,\n                    oldWidth: oldColumnWidth,\n                    newWidth: newColumnWidth\n                });\n                that._applyLockedContainersWidth();\n                that._syncLockedContentHeight();\n                that._syncLockedHeaderHeight();\n            },\n            _adjustLockedHorizontalScrollBar: function () {\n                var table = this.table, content = table.parent();\n                var scrollbar = table[0].offsetWidth > content[0].clientWidth ? kendo.support.scrollbar() : 0;\n                this.lockedContent.height(outerHeight(content) - scrollbar);\n            },\n            _syncLockedContentHeight: function () {\n                if (this.lockedTable) {\n                    if (!this._touchScroller) {\n                        this._adjustLockedHorizontalScrollBar();\n                    }\n                    this._adjustRowsHeight(this.table, this.lockedTable);\n                    this._syncLockedScroll();\n                }\n            },\n            _syncLockedHeaderHeight: function () {\n                if (this.lockedHeader) {\n                    var lockedTable = this.lockedHeader.children('table');\n                    var table = this.thead.parent();\n                    this._adjustRowsHeight(lockedTable, table);\n                    syncTableHeight(lockedTable, table);\n                }\n            },\n            _syncLockedScroll: function () {\n                if (!this.options.scrollable) {\n                    return;\n                }\n                this.lockedContent[0].scrollTop = this.content[0].scrollTop;\n            },\n            _resizable: function () {\n                if (!this.options.resizable) {\n                    return;\n                }\n                if (this.resizable) {\n                    this.resizable.destroy();\n                }\n                var treelist = this;\n                $(this.lockedHeader).find('thead').add(this.thead).on('mousemove' + NS, 'th', $.proxy(this._positionResizeHandle, this));\n                this.resizable = new kendo.ui.Resizable(this.wrapper, {\n                    handle: '.k-resize-handle',\n                    start: function (e) {\n                        var th = $(e.currentTarget).data('th');\n                        var index = $.inArray(th[0], leafDataCells(th.closest('thead')).filter(':visible'));\n                        var colSelector = 'col:eq(' + index + ')';\n                        var header, contentTable;\n                        treelist.wrapper.addClass('k-grid-column-resizing');\n                        if (treelist.lockedHeader && $.contains(treelist.lockedHeader[0], th[0])) {\n                            header = treelist.lockedHeader;\n                            contentTable = treelist.lockedTable;\n                        } else {\n                            header = treelist.thead.parent();\n                            contentTable = treelist.table;\n                        }\n                        this.col = contentTable.children('colgroup').find(colSelector).add(header.find(colSelector));\n                        this.th = th;\n                        this.startLocation = e.x.location;\n                        this.columnWidth = outerWidth(th);\n                        this.table = this.col.closest('table');\n                        this.totalWidth = this.table.width();\n                    },\n                    resize: function (e) {\n                        var rtlModifier = isRtl ? -1 : 1;\n                        var minColumnWidth = 11;\n                        var delta = e.x.location * rtlModifier - this.startLocation * rtlModifier;\n                        if (this.columnWidth + delta < minColumnWidth) {\n                            delta = minColumnWidth - this.columnWidth;\n                        }\n                        this.table.width(this.totalWidth + delta);\n                        this.col.width(this.columnWidth + delta);\n                    },\n                    resizeend: function () {\n                        treelist.wrapper.removeClass('k-grid-column-resizing');\n                        var field = this.th.attr('data-field');\n                        var column = grep(leafColumns(treelist.columns), function (c) {\n                            return c.field == field;\n                        });\n                        var newWidth = Math.floor(outerWidth(this.th));\n                        column[0].width = newWidth;\n                        treelist._resize();\n                        treelist._syncLockedContentHeight();\n                        treelist._syncLockedHeaderHeight();\n                        treelist.trigger(COLUMNRESIZE, {\n                            column: column,\n                            oldWidth: this.columnWidth,\n                            newWidth: newWidth\n                        });\n                        this.table = this.col = this.th = null;\n                    }\n                });\n            },\n            _sortable: function () {\n                var columns;\n                var column;\n                var sortableInstance;\n                var cells;\n                var cell, idx, length;\n                var sortable = this.options.sortable;\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                if (!sortable) {\n                    return;\n                }\n                if (hasMultiColumnHeaders) {\n                    if (this.lockedHeader) {\n                        cells = sortCells(leafDataCells(this.lockedHeader.find('>table>thead')).add(leafDataCells(this.thead)));\n                    } else {\n                        cells = leafDataCells(this.thead);\n                    }\n                } else {\n                    cells = $(this.lockedHeader).add(this.thead).find('th');\n                }\n                columns = leafColumns(this.columns);\n                for (idx = 0, length = cells.length; idx < length; idx++) {\n                    column = columns[idx];\n                    if (column.sortable !== false && !column.command && column.field) {\n                        cell = cells.eq(idx);\n                        sortableInstance = cell.data('kendoColumnSorter');\n                        if (sortableInstance) {\n                            sortableInstance.destroy();\n                        }\n                        cell.kendoColumnSorter(extend({}, sortable, column.sortable, { dataSource: this.dataSource }));\n                    }\n                }\n            },\n            _filterable: function () {\n                var cells;\n                var filterable = this.options.filterable;\n                var idx;\n                var length;\n                var columns;\n                var column;\n                var cell;\n                var filterMenuInstance;\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                if (!filterable || this.options.columnMenu) {\n                    return;\n                }\n                var filterInit = proxy(function (e) {\n                    this.trigger(FILTERMENUINIT, {\n                        field: e.field,\n                        container: e.container\n                    });\n                }, this);\n                var filterOpen = proxy(function (e) {\n                    this.trigger(FILTERMENUOPEN, {\n                        field: e.field,\n                        container: e.container\n                    });\n                }, this);\n                if (hasMultiColumnHeaders) {\n                    if (this.lockedHeader) {\n                        cells = leafDataCells(this.lockedHeader.find('>table>thead').add(this.thead));\n                    } else {\n                        cells = leafDataCells(this.thead);\n                    }\n                } else {\n                    cells = $(this.lockedHeader).add(this.thead).find('th');\n                }\n                columns = leafColumns(this.columns);\n                for (idx = 0, length = cells.length; idx < length; idx++) {\n                    column = columns[idx];\n                    cell = cells.eq(idx);\n                    filterMenuInstance = cell.data('kendoFilterMenu');\n                    if (filterMenuInstance) {\n                        filterMenuInstance.destroy();\n                    }\n                    if (column.command || column.filterable === false) {\n                        continue;\n                    }\n                    cell.kendoFilterMenu(extend(true, {}, filterable, column.filterable, {\n                        dataSource: this.dataSource,\n                        init: filterInit,\n                        open: filterOpen\n                    }));\n                }\n            },\n            _change: function () {\n                this.trigger(CHANGE);\n            },\n            _isLocked: function () {\n                return this.lockedHeader !== null;\n            },\n            _selectable: function () {\n                var that = this;\n                var selectable = this.options.selectable;\n                var filter;\n                var element = this.table;\n                var useAllItems;\n                var isLocked = that._isLocked();\n                var multi;\n                var cell;\n                if (selectable) {\n                    selectable = kendo.ui.Selectable.parseOptions(selectable);\n                    if (this._hasLockedColumns) {\n                        element = element.add(this.lockedTable);\n                        useAllItems = selectable.multiple && selectable.cell;\n                    }\n                    filter = '>tbody>tr:not(.k-footer-template)';\n                    if (selectable.cell) {\n                        filter = filter + '>td';\n                    }\n                    this.selectable = new kendo.ui.Selectable(element, {\n                        filter: filter,\n                        aria: true,\n                        multiple: selectable.multiple,\n                        change: proxy(this._change, this),\n                        useAllItems: useAllItems,\n                        continuousItems: proxy(this._continuousItems, this, filter, selectable.cell),\n                        relatedTarget: !selectable.cell && this._hasLockedColumns ? proxy(this._selectableTarget, this) : undefined\n                    });\n                    if (that.options.navigatable) {\n                        multi = selectable.multiple;\n                        cell = selectable.cell;\n                        element.on('keydown' + NS, function (e) {\n                            var current = that.current();\n                            var target = e.target;\n                            if (e.keyCode === keys.SPACEBAR && !e.shiftKey && $.inArray(target, element) > -1 && !current.is('.k-header')) {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                current = cell ? current : current.parent();\n                                if (isLocked && !cell) {\n                                    current = current.add(that._relatedRow(current));\n                                }\n                                if (multi) {\n                                    if (!e.ctrlKey) {\n                                        that.selectable.clear();\n                                    } else {\n                                        if (current.hasClass(classNames.selected)) {\n                                            current.removeClass(classNames.selected);\n                                            that.trigger(CHANGE);\n                                            return;\n                                        }\n                                    }\n                                } else {\n                                    that.selectable.clear();\n                                }\n                                if (!cell) {\n                                    that.selectable._lastActive = current;\n                                }\n                                that.selectable.value(current);\n                            } else if (!cell && (e.shiftKey && e.keyCode == keys.LEFT || e.shiftKey && e.keyCode == keys.RIGHT || e.shiftKey && e.keyCode == keys.UP || e.shiftKey && e.keyCode == keys.DOWN || e.keyCode === keys.SPACEBAR && e.shiftKey)) {\n                                e.preventDefault();\n                                e.stopPropagation();\n                                current = current.parent();\n                                if (isLocked) {\n                                    current = current.add(that._relatedRow(current));\n                                }\n                                if (multi) {\n                                    if (!that.selectable._lastActive) {\n                                        that.selectable._lastActive = current;\n                                    }\n                                    that.selectable.selectRange(that.selectable._firstSelectee(), current);\n                                } else {\n                                    that.selectable.clear();\n                                    that.selectable.value(current);\n                                }\n                            }\n                        });\n                    }\n                }\n            },\n            _continuousItems: function (filter, cell) {\n                if (!this.lockedContent) {\n                    return;\n                }\n                var lockedItems = $(filter, this.lockedTable);\n                var nonLockedItems = $(filter, this.table);\n                var columns = cell ? lockedColumns(this.columns).length : 1;\n                var nonLockedColumns = cell ? this.columns.length - columns : 1;\n                var result = [];\n                for (var idx = 0; idx < lockedItems.length; idx += columns) {\n                    push.apply(result, lockedItems.slice(idx, idx + columns));\n                    push.apply(result, nonLockedItems.splice(0, nonLockedColumns));\n                }\n                return result;\n            },\n            _selectableTarget: function (items) {\n                var related;\n                var result = $();\n                for (var idx = 0, length = items.length; idx < length; idx++) {\n                    related = this._relatedRow(items[idx]);\n                    if (inArray(related[0], items) < 0) {\n                        result = result.add(related);\n                    }\n                }\n                return result;\n            },\n            _relatedRow: function (row) {\n                var lockedTable = this.lockedTable;\n                row = $(row);\n                if (!lockedTable) {\n                    return row;\n                }\n                var table = row.closest(this.table.add(this.lockedTable));\n                var index = table.find('>tbody>tr').index(row);\n                table = table[0] === this.table[0] ? lockedTable : this.table;\n                return table.find('>tbody>tr').eq(index);\n            },\n            select: function (value) {\n                var selectable = this.selectable;\n                if (!selectable) {\n                    return $();\n                }\n                if (typeof value !== 'undefined') {\n                    if (!selectable.options.multiple) {\n                        selectable.clear();\n                        value = value.first();\n                    }\n                    if (this._hasLockedColumns) {\n                        value = value.add($.map(value, proxy(this._relatedRow, this)));\n                    }\n                }\n                return selectable.value(value);\n            },\n            clearSelection: function () {\n                var selected = this.select();\n                if (selected.length) {\n                    this.selectable.clear();\n                    this.trigger(CHANGE);\n                }\n            },\n            _dataSource: function (dataSource) {\n                var that = this;\n                var ds = this.dataSource;\n                var pageable = that.options.pageable;\n                if (ds) {\n                    ds.unbind(CHANGE, this._refreshHandler);\n                    ds.unbind(ERROR, this._errorHandler);\n                    ds.unbind(SORT, this._sortHandler);\n                    ds.unbind(PROGRESS, this._progressHandler);\n                }\n                this._refreshHandler = proxy(this.refresh, this);\n                this._errorHandler = proxy(this._error, this);\n                this._sortHandler = proxy(this._clearSortClasses, this);\n                this._progressHandler = proxy(this._progress, this);\n                if (isPlainObject(dataSource)) {\n                    extend(dataSource, {\n                        table: that.table,\n                        fields: that.columns\n                    });\n                    if (isPlainObject(pageable) && pageable.pageSize !== undefined) {\n                        dataSource.pageSize = pageable.pageSize;\n                    }\n                }\n                ds = this.dataSource = TreeListDataSource.create(dataSource);\n                if (pageable) {\n                    ds._collapsedTotal = undefined;\n                }\n                ds.bind(CHANGE, this._refreshHandler);\n                ds.bind(ERROR, this._errorHandler);\n                ds.bind(SORT, this._sortHandler);\n                ds.bind(PROGRESS, this._progressHandler);\n                this._dataSourceFetchProxy = proxy(function () {\n                    this.dataSource.fetch();\n                }, this);\n            },\n            setDataSource: function (dataSource) {\n                this._dataSource(dataSource);\n                this._sortable();\n                this._filterable();\n                this._columnMenu();\n                this._pageable();\n                this._contentTree.render([]);\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n            dataItem: function (element) {\n                if (element instanceof TreeListModel) {\n                    return element;\n                }\n                var row = $(element).closest('tr');\n                var uid = row.attr(kendo.attr('uid'));\n                var model = isUndefined(uid) ? null : this.dataSource.getByUid(uid);\n                return model;\n            },\n            editRow: function (row) {\n                var that = this;\n                var model;\n                if (this._isIncellEditable() || !this.options.editable) {\n                    return;\n                }\n                if (typeof row === STRING) {\n                    row = this.tbody.find(row);\n                }\n                if (that._isPageable() && that._isPopupEditable() && row instanceof TreeListModel) {\n                    model = row;\n                } else {\n                    model = this.dataItem(row);\n                }\n                if (!model) {\n                    return;\n                }\n                if (that.editor) {\n                    model._edit = true;\n                    this._render();\n                    this._cancelEditor();\n                } else {\n                    that._preventPageSizeRestore = false;\n                }\n                if (this._editMode() != 'popup') {\n                    model._edit = true;\n                }\n                if (this.trigger(BEFORE_EDIT, { model: model })) {\n                    that.dataSource._restorePageSizeAfterAddChild();\n                    return;\n                }\n                this._render();\n                this._createEditor(model);\n                this.trigger(EDIT, {\n                    container: this.editor.wrapper,\n                    model: model\n                });\n            },\n            _cancelEdit: function (e) {\n                if (!this.editor) {\n                    return;\n                }\n                var currentIndex;\n                e = extend(e, {\n                    container: this.editor.wrapper,\n                    model: this.editor.model\n                });\n                if (this.trigger(CANCEL, e)) {\n                    return;\n                }\n                if (this.options.navigatable) {\n                    currentIndex = this.items().index($(this.current()).parent());\n                }\n                this.cancelRow();\n                if (this.options.navigatable) {\n                    this.current(this.items().eq(currentIndex).children().filter(NAVCELL).first());\n                    focusTable(this.table, true);\n                }\n            },\n            cancelRow: function () {\n                if (this._isIncellEditable()) {\n                    return;\n                }\n                this._cancelEditor();\n                this._render();\n            },\n            saveRow: function () {\n                var editor = this.editor;\n                var args;\n                if (this._isIncellEditable()) {\n                    return;\n                }\n                if (!editor) {\n                    return;\n                }\n                args = {\n                    model: editor.model,\n                    container: editor.wrapper\n                };\n                if (editor.end() && !this.trigger(SAVE, args)) {\n                    this.dataSource.sync();\n                }\n            },\n            addRow: function (parent) {\n                var that = this;\n                var dataSource = that.dataSource;\n                var pageable = that._isPageable();\n                var incellEditing = that._isIncellEditable();\n                var inlineEditing = that._isInlineEditable();\n                var editor = this.editor;\n                var index = 0;\n                var model = {};\n                if (editor && !editor.end() || !this.options.editable) {\n                    return;\n                }\n                if (parent) {\n                    if (!(parent instanceof TreeListModel)) {\n                        parent = this.dataItem(parent);\n                    }\n                    model[parent.parentIdField] = parent.id;\n                    index = this.dataSource.indexOf(parent) + 1;\n                    this.expand(parent).then(function () {\n                        var showNewModelInView = pageable && dataSource._isLastItemInView(parent) && (incellEditing || inlineEditing);\n                        that._insertAt(model, index, showNewModelInView);\n                    });\n                    return;\n                }\n                this._insertAt(model, index);\n            },\n            _insertAt: function (model, index, showNewModelInView) {\n                var that = this;\n                var dataSource = that.dataSource;\n                model = that.dataSource.insert(index, model);\n                if (showNewModelInView) {\n                    dataSource._setAddChildPageSize();\n                }\n                var row = this._itemFor(model);\n                var cell;\n                if (that._isIncellEditable()) {\n                    cell = row.children('td').eq(that._firstEditableColumnIndex(row));\n                    that.editCell(cell);\n                } else if (row && row[0]) {\n                    that.editRow(row);\n                } else if (that._isPageable() && that._isPopupEditable()) {\n                    that.editRow(model);\n                }\n            },\n            _firstEditableColumnIndex: function (container) {\n                var that = this;\n                var model = that.dataItem(container);\n                var columns = leafColumns(that.columns);\n                var length = columns.length;\n                var column;\n                var idx;\n                for (idx = 0; idx < length; idx++) {\n                    column = columns[idx];\n                    if (model && (!model.editable || model.editable(column.field)) && !column.command && column.field && column.hidden !== true) {\n                        return idx;\n                    }\n                }\n                return -1;\n            },\n            removeRow: function (row) {\n                var model = this.dataItem(row);\n                var args = {\n                    model: model,\n                    row: row\n                };\n                if (this.options.editable && model && !this.trigger(REMOVE, args)) {\n                    if (document.activeElement === $(row).find('.k-grid-delete')[0]) {\n                        $(row).find('.k-grid-delete').blur();\n                    }\n                    this.dataSource.remove(model);\n                    if (!this._isIncellEditable()) {\n                        this.dataSource.sync();\n                    }\n                }\n            },\n            _cancelEditor: function () {\n                var that = this;\n                var model;\n                var editor = that.editor;\n                if (editor) {\n                    model = editor.model;\n                    that._destroyEditor();\n                    if (!that._isIncellEditable()) {\n                        that.dataSource.cancelChanges(model);\n                    } else if (that._shouldRestorePageSize()) {\n                        that.dataSource._restorePageSizeAfterAddChild();\n                    }\n                    model._edit = false;\n                }\n                that._preventPageSizeRestore = false;\n            },\n            _shouldRestorePageSize: function () {\n                var that = this;\n                return that._isPageable() && that._isIncellEditable() && !that._preventPageSizeRestore;\n            },\n            _destroyEditor: function () {\n                if (!this.editor) {\n                    return;\n                }\n                this.editor.close();\n                this.editor = null;\n            },\n            _createEditor: function (model) {\n                var row = this.itemFor(model);\n                var columns = leafColumns(this.columns);\n                var leafCols = [];\n                for (var idx = 0; idx < columns.length; idx++) {\n                    leafCols.push(extend({}, columns[idx]));\n                    delete leafCols[idx].parentColumn;\n                }\n                row = row.add(this._relatedRow(row));\n                var mode = this._editMode();\n                var options = {\n                    columns: leafCols,\n                    model: model,\n                    target: this,\n                    clearContainer: false,\n                    template: this.options.editable.template\n                };\n                if (mode == 'inline') {\n                    this.editor = new Editor(row, options);\n                } else {\n                    extend(options, {\n                        window: this.options.editable.window,\n                        commandRenderer: proxy(function () {\n                            return this._buildCommands([\n                                'update',\n                                'canceledit'\n                            ]);\n                        }, this),\n                        fieldRenderer: proxy(this._cellContent, this),\n                        save: proxy(this.saveRow, this),\n                        cancel: proxy(this._cancelEdit, this),\n                        appendTo: this.wrapper\n                    });\n                    this.editor = new PopupEditor(row, options);\n                }\n            },\n            _createIncellEditor: function (cell, options) {\n                var that = this;\n                var column = extend({}, options.columns[0]);\n                delete column.parentColumn;\n                return new IncellEditor(cell, extend({}, {\n                    fieldRenderer: proxy(that._cellContent, that),\n                    appendTo: that.wrapper,\n                    clearContainer: false,\n                    target: that,\n                    columns: [column],\n                    model: options.model,\n                    change: options.change\n                }));\n            },\n            editCell: function (cell) {\n                var that = this;\n                cell = $(cell);\n                var column = leafColumns(that.columns)[that.cellIndex(cell)];\n                var model = that.dataItem(cell);\n                if (that._isIncellEditable() && model && isColumnEditable(column, model)) {\n                    that._editCell(cell, column, model);\n                }\n            },\n            _editCell: function (cell, column, model) {\n                var that = this;\n                var editedCell;\n                if (that.trigger(BEFORE_EDIT, { model: model })) {\n                    that.dataSource._restorePageSizeAfterAddChild();\n                    return;\n                }\n                that.closeCell();\n                model._edit = true;\n                that._cancelEditor();\n                that._render({\n                    editedColumn: column,\n                    editedColumnIndex: cell.index()\n                });\n                editedCell = that.table.add(that.lockedTable).find(DOT + classNames.editCell).first();\n                that.editor = that._createIncellEditor(editedCell, {\n                    columns: [column],\n                    model: model,\n                    change: function (e) {\n                        if (that.trigger(SAVE, {\n                                values: e.values,\n                                container: cell,\n                                model: model\n                            })) {\n                            e.preventDefault();\n                        }\n                    }\n                });\n                that._current = editedCell;\n                that.trigger(EDIT, {\n                    container: cell,\n                    model: model\n                });\n            },\n            closeCell: function (isCancel) {\n                var that = this;\n                var cell = (that.editor || {}).element;\n                var tr;\n                var model;\n                if (!cell || !cell[0] || !that._isIncellEditable()) {\n                    return;\n                }\n                model = that.dataItem(cell);\n                if (isCancel && that.trigger(CANCEL, {\n                        container: cell,\n                        model: model\n                    })) {\n                    return;\n                }\n                that.trigger(CELL_CLOSE, {\n                    type: isCancel ? CANCEL : SAVE,\n                    model: model,\n                    container: cell\n                });\n                that._cancelEditor();\n                cell.removeClass(classNames.editCell);\n                tr = cell.parent().removeClass(classNames.editRow);\n                if (that.lockedContent) {\n                    that._relatedRow(tr).removeClass(classNames.editRow);\n                }\n                that._render();\n                that.trigger(ITEM_CHANGE, {\n                    item: tr,\n                    data: model,\n                    ns: ui\n                });\n                if (that.lockedContent) {\n                    adjustRowHeight(tr.css('height', '')[0], that._relatedRow(tr).css('height', '')[0]);\n                }\n            },\n            cancelChanges: function () {\n                this.dataSource.cancelChanges();\n            },\n            saveChanges: function () {\n                var that = this;\n                var editable = (that.editor || {}).editable;\n                var valid = editable && editable.end();\n                if ((valid || !editable) && !that.trigger(SAVE_CHANGES)) {\n                    that.dataSource.sync();\n                }\n            },\n            _editMode: function () {\n                var mode = 'inline', editable = this.options.editable;\n                if (editable !== true) {\n                    if (typeof editable == 'string') {\n                        mode = editable;\n                    } else {\n                        mode = editable.mode || mode;\n                    }\n                }\n                return mode.toLowerCase();\n            },\n            _isIncellEditable: function () {\n                return this._editMode() === INCELL;\n            },\n            _isInlineEditable: function () {\n                return this._editMode() === INLINE;\n            },\n            _isPopupEditable: function () {\n                return this._editMode() === POPUP;\n            },\n            hideColumn: function (column) {\n                this._toggleColumnVisibility(column, true);\n            },\n            showColumn: function (column) {\n                this._toggleColumnVisibility(column, false);\n            },\n            _toggleColumnVisibility: function (column, hidden) {\n                column = this._findColumn(column);\n                if (!column || column.hidden === hidden) {\n                    return;\n                }\n                column.hidden = hidden;\n                this._setParentsVisibility(column, !hidden);\n                this._ensureExpandableColumn();\n                this._clearColsCache();\n                this._renderCols();\n                this._renderHeader();\n                this._render();\n                this._adjustTablesWidth();\n                this.trigger(hidden ? COLUMNHIDE : COLUMNSHOW, { column: column });\n                if (!hidden && !column.width) {\n                    this.table.add(this.thead.closest('table')).width('');\n                }\n                this._updateFirstColumnClass();\n            },\n            _findColumn: function (column) {\n                if (typeof column == 'number') {\n                    column = this.columns[column];\n                } else if (isPlainObject(column)) {\n                    column = grep(leafColumns(this.columns), function (item) {\n                        return item === column;\n                    })[0];\n                } else {\n                    column = grep(leafColumns(this.columns), function (item) {\n                        return item.field === column;\n                    })[0];\n                }\n                return column;\n            },\n            _adjustTablesWidth: function () {\n                var idx, length;\n                var cols = this.thead.prev().children();\n                var colWidth, width = 0;\n                for (idx = 0, length = cols.length; idx < length; idx++) {\n                    colWidth = cols[idx].style.width;\n                    if (colWidth && colWidth.indexOf('%') == -1) {\n                        width += parseInt(colWidth, 10);\n                    } else {\n                        width = 0;\n                        break;\n                    }\n                }\n                if (width) {\n                    this.table.add(this.thead.closest('table')).width(width);\n                }\n            },\n            _reorderable: function () {\n                if (!this.options.reorderable) {\n                    return;\n                }\n                var scrollable = this.options.scrollable === true;\n                var selector = (scrollable ? '.k-grid-header:first ' : 'table:first>.k-grid-header ') + HEADERCELLS;\n                var that = this;\n                this._draggableInstance = new ui.Draggable(this.wrapper, {\n                    group: kendo.guid(),\n                    filter: selector,\n                    hint: function (target) {\n                        return $('<div class=\"k-header k-reorder-clue k-drag-clue\" />').html(target.attr(kendo.attr('title')) || target.attr(kendo.attr('field')) || target.text()).prepend('<span class=\"k-icon k-drag-status k-i-cancel\" />');\n                    }\n                });\n                this.reorderable = new ui.Reorderable(this.wrapper, {\n                    draggable: this._draggableInstance,\n                    dragOverContainers: proxy(this._allowDragOverContainers, this),\n                    inSameContainer: function (e) {\n                        return $(e.source).parent()[0] === $(e.target).parent()[0] && targetParentContainerIndex(flatColumnsInDomOrder(that.columns), that.columns, e.sourceIndex, e.targetIndex) > -1;\n                    },\n                    change: function (e) {\n                        var columns = flatColumnsInDomOrder(that.columns);\n                        var column = columns[e.oldIndex];\n                        var newIndex = targetParentContainerIndex(columns, that.columns, e.oldIndex, e.newIndex);\n                        that.trigger(COLUMNREORDER, {\n                            newIndex: newIndex,\n                            oldIndex: inArray(column, columns),\n                            column: column\n                        });\n                        that.reorderColumn(newIndex, column, e.position === 'before');\n                    }\n                });\n            },\n            _allowDragOverContainers: function (sourceIndex, targetIndex) {\n                var columns = flatColumnsInDomOrder(this.columns);\n                return columns[sourceIndex].lockable !== false && targetParentContainerIndex(columns, this.columns, sourceIndex, targetIndex) > -1;\n            },\n            _reorderTrees: function (destSources, destContainer, destDomTree, sources, sourcesContainer, sourcesDomTree, before, depth) {\n                var ths = $();\n                var source = sourcesContainer.find('tr:eq(' + sources[0].rowIndex + ')');\n                var sourceDOM = sourcesDomTree.children[sources[0].rowIndex];\n                var sourceChildren = source.children();\n                var destDomChildren;\n                var currentIndex;\n                var destColumn = before ? destSources[0] : destSources[destSources.length - 1];\n                var destRow;\n                var sourcesLeafs;\n                var destLeafs;\n                var reorderTaget;\n                var destThs;\n                for (var idx = 0; idx < sources.length; idx++) {\n                    currentIndex = sources[idx].cellIndex;\n                    ths = ths.add(sourceChildren.eq(currentIndex));\n                    destDomChildren = destDomTree.children[destColumn.rowIndex].children;\n                    if (destDomTree === sourcesDomTree && before) {\n                        currentIndex += idx;\n                    }\n                    destDomChildren.splice(before ? destColumn.cellIndex + idx : destColumn.cellIndex + 1 + idx, 0, sourceDOM.children[currentIndex]);\n                }\n                if (destDomTree === sourcesDomTree && before) {\n                    sourceDOM.children.splice(sources[0].cellIndex + sources.length, sources.length);\n                } else {\n                    sourceDOM.children.splice(sources[0].cellIndex, sources.length);\n                }\n                destRow = destContainer.find('tr:eq(' + destColumn.rowIndex + ')');\n                destThs = destRow.find('>th.k-header:eq(' + destColumn.cellIndex + ')');\n                if (destThs.length && ths[0] !== destThs[0]) {\n                    ths[before ? 'insertBefore' : 'insertAfter'](destThs);\n                }\n                if (depth >= sources[0].rowIndex + 1 && depth != 1) {\n                    sourcesLeafs = [];\n                    for (idx = 0; idx < sources.length; idx++) {\n                        if (sources[idx].columns) {\n                            sourcesLeafs = sourcesLeafs.concat(sources[idx].columns);\n                        }\n                    }\n                    if (!sourcesLeafs.length) {\n                        return;\n                    }\n                    destLeafs = [];\n                    for (idx = 0; idx < destSources.length; idx++) {\n                        if (destSources[idx].columns) {\n                            destLeafs = destLeafs.concat(destSources[idx].columns);\n                        }\n                    }\n                    if (!destLeafs.length && (destContainer !== sourcesContainer || (destColumn.cellIndex - sources[0].cellIndex > 1 || sources[0].cellIndex - destColumn.cellIndex > 1))) {\n                        reorderTaget = findReorderTarget(this.columns, destColumn, sources[0], before, this.columns);\n                        destLeafs = [reorderTaget];\n                        if (!reorderTaget && sourcesLeafs.length && destContainer.find('tr').length > sources[0].rowIndex + 1) {\n                            this._insertTree(sourcesLeafs, sourcesContainer, sourcesDomTree, destContainer, destDomTree);\n                            return;\n                        }\n                    }\n                    if (!destLeafs.length) {\n                        return;\n                    }\n                    this._reorderTrees(destLeafs, destContainer, destDomTree, sourcesLeafs, sourcesContainer, sourcesDomTree, before, depth);\n                }\n            },\n            _insertTree: function (columns, sourcesContainer, sourcesDomTree, destContainer, destDomTree) {\n                var leafs = [];\n                var row;\n                var ths = $();\n                var domTr;\n                row = sourcesContainer.find('tr:eq(' + columns[0].rowIndex + ')');\n                domTr = sourcesDomTree.children[columns[0].rowIndex];\n                for (var idx = 0; idx < columns.length; idx++) {\n                    if (columns[idx].columns) {\n                        leafs = leafs.concat(columns[idx].columns);\n                    }\n                    destDomTree.children[columns[0].rowIndex].children.splice(idx, 0, domTr.children[columns[idx].rowIndex]);\n                    ths = ths.add(row.find('>th.k-header:eq(' + columns[idx].cellIndex + ')'));\n                }\n                sourcesDomTree.children[columns[0].rowIndex].children.splice(columns[0].cellIndex, columns.length);\n                destContainer.find('tr:eq(' + columns[0].rowIndex + ')').append(ths);\n                if (leafs.length) {\n                    this._insertTree(leafs, sourcesContainer, sourcesDomTree, destContainer, destDomTree);\n                }\n            },\n            _reorderHeader: function (destColumn, column, before) {\n                var sourcesDepth = column.columns ? depth([column]) : 1;\n                var targetDepth = destColumn.columns ? depth([destColumn]) : 1;\n                var sourceLocked = isLocked(column);\n                var destLocked = isLocked(destColumn);\n                var destContainer = destLocked ? this.lockedHeader : this.thead;\n                var sourcesContainer = sourceLocked ? this.lockedHeader : this.thead;\n                var destDomTree = destLocked ? this._lockedHeaderTree : this._headerTree;\n                var sourcesDomTree = sourceLocked ? this._lockedHeaderTree : this._headerTree;\n                var rowsToAdd;\n                var destRows = destContainer.find('tr');\n                if (sourcesDepth === targetDepth || sourcesDepth < destRows.length) {\n                    this._reorderTrees([destColumn], destContainer, destDomTree, [column], sourcesContainer, sourcesDomTree, before, sourcesDepth);\n                    updateRowSpans(destContainer, destDomTree);\n                    removeEmptyRows(sourcesContainer, sourcesDomTree);\n                } else {\n                    if (destContainer !== sourcesContainer) {\n                        rowsToAdd = sourcesDepth - destRows.length;\n                        destRows.each(function (idx) {\n                            var cells = this.cells;\n                            for (var i = 0; i < cells.length; i++) {\n                                if (cells[i].colSpan <= 1 && cells[i].attributes.rowspan) {\n                                    destDomTree.children[idx].children[i].attr.rowSpan += rowsToAdd;\n                                    cells[i].rowSpan += rowsToAdd;\n                                }\n                            }\n                        });\n                        for (var j = 0; j < rowsToAdd; j++) {\n                            destDomTree.children.push(kendoDomElement('tr', { 'role': 'row' }));\n                            if (destContainer.is('thead')) {\n                                destContainer.append('<tr role=\\'row\\'></tr>');\n                            } else {\n                                destContainer.find('thead').append('<tr role=\\'row\\'></tr>');\n                            }\n                        }\n                    }\n                    this._reorderTrees([destColumn], destContainer, destDomTree, [column], sourcesContainer, sourcesDomTree, before, sourcesDepth);\n                    removeEmptyRows(sourcesContainer, sourcesDomTree);\n                }\n            },\n            reorderColumn: function (destIndex, column, before) {\n                var lockChanged;\n                var parent = column.parentColumn;\n                var columns = parent ? parent.columns : this.columns;\n                var sourceIndex = inArray(column, columns);\n                var destColumn = columns[destIndex];\n                var isLocked = !!destColumn.locked;\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                var nonLockedColumnsLength = nonLockedColumns(columns).length;\n                if (sourceIndex === destIndex) {\n                    return;\n                }\n                if (isLocked && !column.locked && nonLockedColumnsLength == 1) {\n                    return;\n                }\n                if (!isLocked && column.locked && columns.length - nonLockedColumnsLength == 1) {\n                    return;\n                }\n                if (before === undefined) {\n                    before = destIndex < sourceIndex;\n                }\n                if (hasMultiColumnHeaders) {\n                    this._reorderHeader(destColumn, column, before);\n                }\n                lockChanged = !!column.locked;\n                lockChanged = lockChanged != isLocked;\n                column.locked = isLocked;\n                columns.splice(before ? destIndex : destIndex + 1, 0, column);\n                columns.splice(sourceIndex < destIndex ? sourceIndex : sourceIndex + 1, 1);\n                this._setColumnDataIndexes(leafColumns(this.columns));\n                this._clearColsCache();\n                this._renderCols();\n                if (!hasMultiColumnHeaders) {\n                    var ths = $(this.lockedHeader).add(this.thead).find('th');\n                    ths.eq(sourceIndex)[before ? 'insertBefore' : 'insertAfter'](ths.eq(destIndex));\n                    var dom = this._headerTree.children[0].children;\n                    if (this._hasLockedColumns) {\n                        dom = this._lockedHeaderTree.children[0].children.concat(dom);\n                    }\n                    dom.splice(before ? destIndex : destIndex + 1, 0, dom[sourceIndex]);\n                    dom.splice(sourceIndex < destIndex ? sourceIndex : sourceIndex + 1, 1);\n                    if (this._hasLockedColumns) {\n                        this._lockedHeaderTree.children[0].children = dom.splice(0, lockedColumns(columns).length);\n                        this._headerTree.children[0].children = dom;\n                    }\n                } else {\n                    if (this.lockedHeader) {\n                        columns = nonLockedColumns(this.columns);\n                        this._prepareColumns([{\n                                rowSpan: 1,\n                                cells: [],\n                                index: 0\n                            }], columns);\n                        columns = lockedColumns(this.columns);\n                        this._prepareColumns([{\n                                rowSpan: 1,\n                                cells: [],\n                                index: 0\n                            }], columns);\n                    } else {\n                        this._prepareColumns([{\n                                rowSpan: 1,\n                                cells: [],\n                                index: 0\n                            }], this.columns);\n                    }\n                }\n                this._updateColumnCellIndex();\n                this._applyLockedContainersWidth();\n                this._syncLockedHeaderHeight();\n                this._updateFirstColumnClass();\n                this.refresh();\n                if (!lockChanged) {\n                    return;\n                }\n                if (isLocked) {\n                    this.trigger(COLUMNLOCK, { column: column });\n                } else {\n                    this.trigger(COLUMNUNLOCK, { column: column });\n                }\n            },\n            lockColumn: function (column) {\n                var columns = this.columns;\n                if (typeof column == 'number') {\n                    column = columns[column];\n                } else {\n                    column = grep(columns, function (item) {\n                        return item.field === column;\n                    })[0];\n                }\n                if (!column || column.hidden) {\n                    return;\n                }\n                var index = lockedColumns(columns).length - 1;\n                this.reorderColumn(index, column, false);\n            },\n            unlockColumn: function (column) {\n                var columns = this.columns;\n                if (typeof column == 'number') {\n                    column = columns[column];\n                } else {\n                    column = grep(columns, function (item) {\n                        return item.field === column;\n                    })[0];\n                }\n                if (!column || column.hidden) {\n                    return;\n                }\n                var index = lockedColumns(columns).length;\n                this.reorderColumn(index, column, true);\n            },\n            _columnMenu: function () {\n                var ths = $(this.lockedHeader).add(this.thead).find('th');\n                var columns = this.columns;\n                var options = this.options;\n                var columnMenu = options.columnMenu;\n                var column, menu, menuOptions, sortable, filterable;\n                var initHandler = proxy(this._columnMenuInit, this);\n                var openHandler = proxy(this._columnMenuOpen, this);\n                var lockedColumnsLength = lockedColumns(columns).length;\n                var hasMultiColumnHeaders = grep(this.columns, function (item) {\n                    return item.columns !== undefined;\n                }).length > 0;\n                if (hasMultiColumnHeaders) {\n                    columns = leafColumns(columns);\n                    if (this.lockedHeader) {\n                        ths = sortCells(leafDataCells(this.lockedHeader.find('>table>thead')).add(leafDataCells(this.thead)));\n                    } else {\n                        ths = leafDataCells(this.thead);\n                    }\n                } else {\n                    ths = $(this.lockedHeader).add(this.thead).find('th');\n                }\n                if (!columnMenu) {\n                    return;\n                }\n                if (typeof columnMenu == 'boolean') {\n                    columnMenu = {};\n                }\n                for (var i = 0; i < ths.length; i++) {\n                    column = columns[i];\n                    if (!column.field) {\n                        continue;\n                    }\n                    menu = ths.eq(i).data('kendoColumnMenu');\n                    if (menu) {\n                        menu.destroy();\n                    }\n                    sortable = false;\n                    if (column.sortable !== false && columnMenu.sortable !== false && options.sortable !== false) {\n                        sortable = extend({}, options.sortable, { compare: (column.sortable || {}).compare });\n                    }\n                    filterable = false;\n                    if (options.filterable && column.filterable !== false && columnMenu.filterable !== false) {\n                        filterable = extend({ pane: this.pane }, column.filterable, options.filterable);\n                    }\n                    menuOptions = {\n                        dataSource: this.dataSource,\n                        values: column.values,\n                        columns: columnMenu.columns,\n                        sortable: sortable,\n                        filterable: filterable,\n                        messages: columnMenu.messages,\n                        owner: this,\n                        closeCallback: $.noop,\n                        init: initHandler,\n                        open: openHandler,\n                        pane: this.pane,\n                        lockedColumns: !hasMultiColumnHeaders && column.lockable !== false && lockedColumnsLength > 0\n                    };\n                    if (options.$angular) {\n                        menuOptions.$angular = options.$angular;\n                    }\n                    ths.eq(i).kendoColumnMenu(menuOptions);\n                }\n            },\n            _columnMenuInit: function (e) {\n                this.trigger(COLUMNMENUINIT, {\n                    field: e.field,\n                    container: e.container\n                });\n            },\n            _pageable: function () {\n                var that = this, wrapper, pageable = that.options.pageable;\n                if (pageable) {\n                    wrapper = that.wrapper.children('div.k-grid-pager');\n                    if (!wrapper.length) {\n                        wrapper = $('<div class=\"k-pager-wrap k-grid-pager\"/>').appendTo(that.wrapper);\n                    }\n                    that._destroyPager();\n                    if (typeof pageable === 'object' && pageable instanceof kendo.ui.TreeListPager) {\n                        that.pager = pageable;\n                    } else if (that.dataSource && !that.dataSource.options.serverPaging) {\n                        that._createPager(wrapper);\n                    }\n                    if (that.pager) {\n                        that.pager.bind(PAGE_CHANGE, function (e) {\n                            if (that.trigger(PAGE, { page: e.index })) {\n                                e.preventDefault();\n                            }\n                        });\n                    }\n                }\n            },\n            _createPager: function (element, options) {\n                var that = this;\n                that.pager = new TreeListPager(element, extend({}, that.options.pageable, { dataSource: that.dataSource }, options));\n            },\n            _destroyPager: function () {\n                if (this.pager) {\n                    this.pager.destroy();\n                }\n            },\n            _isPageable: function () {\n                var that = this;\n                return that.options.pageable && (!that.dataSource || that.dataSource && that.dataSource._isPageable());\n            },\n            _togglePagerVisibility: function () {\n                var that = this;\n                var pageable = that.options.pageable;\n                if (pageable && (isPlainObject(pageable) || pageable instanceof TreeListPager) && pageable.alwaysVisible === false) {\n                    that.wrapper.find('.k-grid-pager').toggle((that.dataSource.collapsedTotal() || 0) >= that.dataSource.pageSize());\n                }\n            }\n        });\n        function isInputElement(element) {\n            return $(element).is(':button,a,:input,a>.k-icon,textarea,span.k-select,span.k-icon,span.k-link,.k-input,.k-multiselect-wrap,.k-tool-icon');\n        }\n        function isLocked(column) {\n            if (!column.parentColumn) {\n                return !!column.locked;\n            }\n            return !!isLocked(column.parentColumn);\n        }\n        function findParentColumnWithChildren(columns, index, source, rtl) {\n            var target;\n            var locked = !!source.locked;\n            var targetLocked;\n            do {\n                target = columns[index];\n                index += rtl ? 1 : -1;\n                targetLocked = !!target.locked;\n            } while (target && index > -1 && index < columns.length && target != source && !target.columns && targetLocked === locked);\n            return target;\n        }\n        function findReorderTarget(columns, target, source, before, masterColumns) {\n            if (target.columns) {\n                target = target.columns;\n                return target[before ? 0 : target.length - 1];\n            } else {\n                var parent = columnParent(target, columns);\n                var parentColumns;\n                if (parent) {\n                    parentColumns = parent.columns;\n                } else {\n                    parentColumns = columns;\n                }\n                var index = inArray(target, parentColumns);\n                if (index === 0 && before && parentColumns.length !== 1) {\n                    index++;\n                } else if (index == parentColumns.length - 1 && !before && index !== 0) {\n                    index--;\n                } else if (index > 0 || index === 0 && !before && index !== 0) {\n                    index += before ? -1 : 1;\n                }\n                var sourceIndex = inArray(source, parentColumns);\n                target = findParentColumnWithChildren(parentColumns, index, source, sourceIndex > index);\n                var targetIndex = inArray(target, masterColumns);\n                if (target.columns && (!targetIndex || targetIndex === parentColumns.length - 1)) {\n                    return null;\n                }\n                if (target && target != source && target.columns) {\n                    return findReorderTarget(columns, target, source, before, masterColumns);\n                }\n            }\n            return null;\n        }\n        function leafColumns(columns) {\n            var result = [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                if (!columns[idx].columns) {\n                    result.push(columns[idx]);\n                    continue;\n                }\n                result = result.concat(leafColumns(columns[idx].columns));\n            }\n            return result;\n        }\n        function getColumnsFields(columns) {\n            var result = [];\n            columns = leafColumns(columns);\n            for (var idx = 0; idx < columns.length; idx++) {\n                if (typeof columns[idx] === 'string') {\n                    result.push(columns[idx]);\n                } else if (columns[idx].field) {\n                    result.push(columns[idx].field);\n                }\n            }\n            return result;\n        }\n        function visibleChildColumns(columns) {\n            return grep(columns, function (column) {\n                return !column.hidden;\n            });\n        }\n        function isVisible(column) {\n            return visibleColumns([column]).length > 0;\n        }\n        function visibleColumns(columns) {\n            return grep(columns, function (column) {\n                var result = !column.hidden;\n                if (result && column.columns) {\n                    result = visibleColumns(column.columns).length > 0;\n                }\n                return result;\n            });\n        }\n        function normalizeColumns(columns, hide, parentIds) {\n            return map(columns, function (column) {\n                var hidden;\n                column.parentIds = parentIds;\n                if (!isVisible(column) || hide) {\n                    hidden = true;\n                }\n                var uid = kendo.guid();\n                column.headerAttributes = extend({ headers: parentIds }, column.headerAttributes);\n                if (!column.headerAttributes || !column.headerAttributes.id) {\n                    column.headerAttributes = extend({ id: uid }, column.headerAttributes);\n                } else {\n                    uid = column.headerAttributes.id;\n                }\n                if (column.columns) {\n                    column.columns = normalizeColumns(column.columns, hidden, parentIds ? parentIds + ' ' + uid : uid);\n                }\n                return extend({ hidden: hidden }, column);\n            });\n        }\n        function flatColumnsInDomOrder(columns) {\n            var result = flatColumns(lockedColumns(columns));\n            return result.concat(flatColumns(nonLockedColumns(columns)));\n        }\n        function targetParentContainerIndex(flatColumns, columns, sourceIndex, targetIndex) {\n            var column = flatColumns[sourceIndex];\n            var target = flatColumns[targetIndex];\n            var parent = columnParent(column, columns);\n            columns = parent ? parent.columns : columns;\n            return inArray(target, columns);\n        }\n        function parentColumnsCells(cell) {\n            var container = cell.closest('table');\n            var result = $().add(cell);\n            var row = cell.closest('tr');\n            var headerRows = container.find('tr');\n            var level = headerRows.index(row);\n            if (level > 0) {\n                var parent = headerRows.eq(level - 1);\n                var parentCellsWithChildren = parent.find('th').filter(function () {\n                    return !$(this).attr('rowspan');\n                });\n                var offset = 0;\n                var index = row.find('th').index(cell);\n                var prevCells = cell.prevAll().filter(function () {\n                    return this.colSpan > 1;\n                });\n                for (var idx = 0; idx < prevCells.length; idx++) {\n                    offset += prevCells[idx].colSpan || 1;\n                }\n                index += Math.max(offset - 1, 0);\n                offset = 0;\n                for (idx = 0; idx < parentCellsWithChildren.length; idx++) {\n                    var parentCell = parentCellsWithChildren.eq(idx);\n                    if (parentCell.attr('data-colspan')) {\n                        offset += parentCell[0].getAttribute('data-colspan');\n                    } else {\n                        offset += 1;\n                    }\n                    if (index >= idx && index < offset) {\n                        result = parentColumnsCells(parentCell).add(result);\n                        break;\n                    }\n                }\n            }\n            return result;\n        }\n        function childColumnsCells(cell) {\n            var container = cell.closest('thead');\n            var result = $().add(cell);\n            var row = cell.closest('tr');\n            var headerRows = container.find('tr');\n            var level = headerRows.index(row) + cell[0].rowSpan;\n            var colSpanAttr = kendo.attr('colspan');\n            if (level <= headerRows.length - 1) {\n                var child = row.next();\n                var prevCells = cell.prevAll();\n                var idx;\n                prevCells = prevCells.filter(function () {\n                    return !this.rowSpan || this.rowSpan === 1;\n                });\n                var offset = 0;\n                for (idx = 0; idx < prevCells.length; idx++) {\n                    offset += parseInt(prevCells.eq(idx).attr(colSpanAttr), 10) || 1;\n                }\n                var cells = child.find('th');\n                var colSpan = parseInt(cell.attr(colSpanAttr), 10) || 1;\n                idx = 0;\n                while (idx < colSpan) {\n                    child = cells.eq(idx + offset);\n                    result = result.add(childColumnsCells(child));\n                    var value = parseInt(child.attr(colSpanAttr), 10);\n                    if (value > 1) {\n                        colSpan -= value - 1;\n                    }\n                    idx++;\n                }\n            }\n            return result;\n        }\n        function columnParent(column, columns) {\n            var parents = [];\n            columnParents(column, columns, parents);\n            return parents[parents.length - 1];\n        }\n        function columnParents(column, columns, parents) {\n            parents = parents || [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                if (column === columns[idx]) {\n                    return true;\n                } else if (columns[idx].columns) {\n                    var inserted = parents.length;\n                    parents.push(columns[idx]);\n                    if (!columnParents(column, columns[idx].columns, parents)) {\n                        parents.splice(inserted, parents.length - inserted);\n                    } else {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        function flatColumns(columns) {\n            var result = [];\n            var children = [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                result.push(columns[idx]);\n                if (columns[idx].columns) {\n                    children = children.concat(columns[idx].columns);\n                }\n            }\n            if (children.length) {\n                result = result.concat(flatColumns(children));\n            }\n            return result;\n        }\n        function columnPosition(column, columns, row, cellCounts) {\n            var result;\n            var idx;\n            row = row || 0;\n            cellCounts = cellCounts || {};\n            cellCounts[row] = cellCounts[row] || 0;\n            for (idx = 0; idx < columns.length; idx++) {\n                if (columns[idx] == column) {\n                    result = {\n                        cell: cellCounts[row],\n                        row: row\n                    };\n                    break;\n                } else if (columns[idx].columns) {\n                    result = columnPosition(column, columns[idx].columns, row + 1, cellCounts);\n                    if (result) {\n                        break;\n                    }\n                }\n                cellCounts[row]++;\n            }\n            return result;\n        }\n        function updateCellIndex(thead, columns, offset) {\n            offset = offset || 0;\n            var position;\n            var cell;\n            var allColumns = columns;\n            columns = leafColumns(columns);\n            var cells = {};\n            var rows = thead.find('>tr:not(.k-filter-row)');\n            var filter = function () {\n                var el = $(this);\n                return !el.hasClass('k-group-cell') && !el.hasClass('k-hierarchy-cell');\n            };\n            for (var idx = 0, length = columns.length; idx < length; idx++) {\n                position = columnPosition(columns[idx], allColumns);\n                if (!cells[position.row]) {\n                    cells[position.row] = rows.eq(position.row).find('.k-header').filter(filter);\n                }\n                cell = cells[position.row].eq(position.cell);\n                cell.attr(kendo.attr('index'), offset + idx);\n            }\n            return columns.length;\n        }\n        function depth(columns) {\n            var result = 1;\n            var max = 0;\n            for (var idx = 0; idx < columns.length; idx++) {\n                if (columns[idx].columns) {\n                    var temp = depth(columns[idx].columns);\n                    if (temp > max) {\n                        max = temp;\n                    }\n                }\n            }\n            return result + max;\n        }\n        function lockedColumns(columns) {\n            return grep(columns, is('locked'));\n        }\n        function nonLockedColumns(columns) {\n            return grep(columns, not(is('locked')));\n        }\n        function updateRowSpans(container, containerDOMtree) {\n            var rows = container.find('tr');\n            var length = rows.length;\n            rows.each(function (idx) {\n                var cells = this.cells;\n                for (var i = 0; i < cells.length; i++) {\n                    if (cells[i].colSpan <= 1 && cells[i].attributes.rowspan) {\n                        containerDOMtree.children[idx].children[i].attr.rowSpan = length - idx;\n                        cells[i].rowSpan = length - idx;\n                    }\n                }\n            });\n        }\n        function removeEmptyRows(container, containerDOMtree) {\n            var rows = container.find('tr');\n            var emptyRows = [];\n            rows.filter(function (idx) {\n                var shouldRemove = !$(this).children().length;\n                if (shouldRemove) {\n                    emptyRows.push(idx);\n                }\n                return shouldRemove;\n            }).remove();\n            for (var i = emptyRows.length - 1; i >= 0; i--) {\n                containerDOMtree.children.splice(emptyRows[i], 1);\n            }\n            updateRowSpans(container, containerDOMtree);\n        }\n        function focusTable(table, direct) {\n            if (direct === true) {\n                table = $(table);\n                var scrollTop, scrollLeft;\n                scrollTop = table.parent().scrollTop();\n                scrollLeft = table.parent().scrollLeft();\n                kendo.focusElement(table);\n                table.parent().scrollTop(scrollTop).scrollLeft(scrollLeft);\n            } else {\n                $(table).one('focusin', function (e) {\n                    e.preventDefault();\n                }).focus();\n            }\n        }\n        function adjustRowHeight(row1, row2) {\n            var height;\n            var offsetHeight1 = row1.offsetHeight;\n            var offsetHeight2 = row2.offsetHeight;\n            if (offsetHeight1 > offsetHeight2) {\n                height = offsetHeight1 + 'px';\n            } else if (offsetHeight1 < offsetHeight2) {\n                height = offsetHeight2 + 'px';\n            }\n            if (height) {\n                row1.style.height = row2.style.height = height;\n            }\n        }\n        function isColumnEditable(column, model) {\n            if (!column || !model || !column.field || column.selectable || column.command || column.editable && !column.editable(model)) {\n                return false;\n            }\n            return column.field && model.editable && model.editable(column.field);\n        }\n        function isDirtyColumn(column, model) {\n            var field = (column || {}).field || '';\n            return model.dirty && model.dirtyFields && model.dirtyFields[field] && isColumnEditable(column, model);\n        }\n        function isUndefined(value) {\n            return typeof value === 'undefined';\n        }\n        function isNumber(value) {\n            return typeof value === 'number' && !isNaN(value);\n        }\n        if (kendo.ExcelMixin) {\n            kendo.ExcelMixin.extend(TreeList.prototype);\n        }\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(TreeList.prototype);\n            TreeList.prototype._drawPDF = function (progress) {\n                var treeList = this;\n                if (treeList.options.pdf.paperSize && treeList.options.pdf.paperSize != 'auto') {\n                    return treeList._drawPDF_autoPageBreak(progress);\n                }\n                var result = new $.Deferred();\n                var dataSource = treeList.dataSource;\n                var allPages = treeList.options.pdf.allPages;\n                this._initPDFProgress(progress);\n                var doc = new kendo.drawing.Group();\n                var startingPage = dataSource.page();\n                function resolve() {\n                    if (allPages && startingPage !== undefined) {\n                        dataSource.unbind('change', exportPage);\n                        dataSource.one('change', function () {\n                            result.resolve(doc);\n                        });\n                        dataSource.page(startingPage);\n                    } else {\n                        result.resolve(doc);\n                    }\n                }\n                function exportPage() {\n                    treeList._drawPDFShadow({ width: treeList.wrapper.width() }, { avoidLinks: treeList.options.pdf.avoidLinks }).done(function (group) {\n                        var pageNum = dataSource.page();\n                        var totalPages = allPages ? dataSource.totalPages() : 1;\n                        var args = {\n                            page: group,\n                            pageNumber: pageNum,\n                            progress: pageNum / totalPages,\n                            totalPages: totalPages\n                        };\n                        progress.notify(args);\n                        doc.append(args.page);\n                        if (pageNum < totalPages) {\n                            dataSource.page(pageNum + 1);\n                        } else {\n                            resolve();\n                        }\n                    }).fail(function (err) {\n                        result.reject(err);\n                    });\n                }\n                if (allPages) {\n                    dataSource.bind('change', exportPage);\n                    dataSource.page(1);\n                } else {\n                    exportPage();\n                }\n                return result.promise();\n            };\n            TreeList.prototype._initPDFProgress = function (deferred) {\n                var loading = $('<div class=\\'k-loading-pdf-mask\\'><div class=\\'k-loading-color\\'/></div>');\n                loading.prepend(this.wrapper.clone().css({\n                    position: 'absolute',\n                    top: 0,\n                    left: 0\n                }));\n                this.wrapper.append(loading);\n                var progressBar = $('<div class=\\'k-loading-pdf-progress\\'>').appendTo(loading).kendoProgressBar({\n                    type: 'chunk',\n                    chunkCount: 10,\n                    min: 0,\n                    max: 1,\n                    value: 0\n                }).data('kendoProgressBar');\n                deferred.progress(function (e) {\n                    progressBar.value(e.progress);\n                }).always(function () {\n                    kendo.destroy(loading);\n                    loading.remove();\n                });\n            };\n            TreeList.prototype._drawPDF_autoPageBreak = function (progress) {\n                var treeList = this;\n                var result = new $.Deferred();\n                var dataSource = treeList.dataSource;\n                var allPages = treeList.options.pdf.allPages;\n                var origBody = treeList.wrapper.find('table[role=\"treeList\"] > tbody');\n                var cont = $('<div>').css({\n                    position: 'absolute',\n                    left: -10000,\n                    top: -10000\n                });\n                var clone = treeList.wrapper.clone().css({\n                    height: 'auto',\n                    width: 'auto'\n                }).appendTo(cont);\n                clone.find('.k-grid-content').css({\n                    height: 'auto',\n                    width: 'auto',\n                    overflow: 'visible'\n                });\n                clone.find('table[role=\"treeList\"], .k-grid-footer table').css({\n                    height: 'auto',\n                    width: '100%',\n                    overflow: 'visible'\n                });\n                clone.find('.k-grid-pager, .k-grid-toolbar, .k-grouping-header').remove();\n                clone.find('.k-grid-header, .k-grid-footer').css({ paddingRight: 0 });\n                this._initPDFProgress(progress);\n                var body = clone.find('table[role=\"treeList\"] > tbody').empty();\n                var startingPage = dataSource.page();\n                function resolve() {\n                    if (allPages && startingPage !== undefined) {\n                        dataSource.one('change', draw);\n                        dataSource.page(startingPage);\n                    } else {\n                        treeList.refresh();\n                        draw();\n                    }\n                }\n                function draw() {\n                    cont.appendTo(document.body);\n                    var options = $.extend({}, treeList.options.pdf, {\n                        _destructive: true,\n                        progress: function (p) {\n                            progress.notify({\n                                page: p.page,\n                                pageNumber: p.pageNum,\n                                progress: 0.5 + p.pageNum / p.totalPages / 2,\n                                totalPages: p.totalPages\n                            });\n                        }\n                    });\n                    kendo.drawing.drawDOM(clone, options).always(function () {\n                        cont.remove();\n                    }).then(function (group) {\n                        result.resolve(group);\n                    }).fail(function (err) {\n                        result.reject(err);\n                    });\n                }\n                function renderPage() {\n                    var pageNum = dataSource.page();\n                    var totalPages = allPages ? dataSource.totalPages() : 1;\n                    body.append(origBody.find('tr'));\n                    if (pageNum < totalPages) {\n                        dataSource.page(pageNum + 1);\n                    } else {\n                        dataSource.unbind('change', renderPage);\n                        resolve();\n                    }\n                }\n                if (allPages) {\n                    dataSource.bind('change', renderPage);\n                    dataSource.page(1);\n                } else {\n                    renderPage();\n                }\n                return result.promise();\n            };\n        }\n        extend(true, kendo.data, {\n            TreeListDataSource: TreeListDataSource,\n            TreeListModel: TreeListModel\n        });\n        ui.plugin(TreeList);\n        ui.plugin(TreeListPager);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}