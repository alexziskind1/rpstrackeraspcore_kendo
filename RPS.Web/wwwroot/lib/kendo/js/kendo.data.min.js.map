{"version":3,"sources":["kendo.data.js"],"names":["f","define","$","undefined","eventHandler","context","type","field","prefix","e","key","event","CHANGE","_notifyChange","trigger","equal","x","y","xtype","ytype","getTime","getFieldByName","obj","name","fieldName","isPlainObject","Query","data","this","normalizeSort","dir","descriptor","STRING","descriptors","isArray","grep","d","sortFields","sorts","i","sortObject","length","index","normalizeOperator","expression","idx","filter","operator","filters","operatorMap","toLowerCase","normalizeFilter","isEmptyObject","logic","compareDescriptor","f1","f2","value","normalizeDescriptor","fieldComparer","a","b","compareFilters","expr1","expr2","filters1","filters2","slice","sort","normalizeAggregate","expressions","normalizeGroup","compare","skipItemSorting","map","aggregates","normalizeGroupWithoutCompare","anyGroupDescriptorHasCompare","groupDescriptors","isFunction","groupValueComparer","calculateAggregate","accumulator","item","state","aggr","functionName","len","aggregate","functions","kendo","accessor","isNumber","val","isNaN","isDate","toJSON","array","result","Array","serializeRecords","getters","modelInstance","originalFieldNames","fieldNames","record","getter","originalName","setters","setter","convertRecords","_parse","convertGroup","hasSubgroups","items","wrapDataAccess","originalFunction","model","converter","wrapDataAccessBase","toString","call","ObservableArray","fillLastGroup","originalGroup","newGroup","currOriginal","currentNew","push","apply","mergeGroups","target","dest","skip","take","group","concat","splice","flatGroups","groups","indexFunction","groupIndex","itemIndex","groupsLength","indexFn","flattenGroups","at","wrapGroupItems","LazyObservableArray","_events","eachGroupItems","func","replaceInRanges","ranges","observable","replaceInRange","replaceWithObservable","view","serverGrouping","viewIndex","removeModel","dataItem","uid","indexOfPristineModel","indexOf","idField","id","_defaultId","indexOfModel","comparer","fieldNameFromModel","fields","from","convertFilterDescriptorsField","convertDescriptorsField","inferSelect","select","options","firstField","secondField","optgroup","option","parentNode","disabled","label","text","attributes","specified","inferTable","table","fieldIndex","cells","cell","empty","tbody","tBodies","rows","fieldCount","nodeName","innerHTML","dataMethod","_data","DataSource","fn","arguments","_attachBubbleHandlers","inferList","list","elements","collection","tagName","add","find","textChild","className","children","textField","urlField","spriteCssClassField","imageUrlField","_loaded","eq","firstChild","attr","nodeType","nodeValue","prop","trim","replace","hasChildren","ObservableObject","parsers","defaultValues","Model","Comparer","StableComparer","operators","LocalTransport","RemoteTransport","Cache","DataReader","Transport","Node","HierarchicalDataSource","Buffer","BatchBuffer","extend","proxy","ajax","each","noop","window","Observable","Class","FUNCTION","ASCENDING","CREATE","READ","UPDATE","DESTROY","SYNC","GET","ERROR","REQUESTSTART","PROGRESS","REQUESTEND","crud","identity","o","stringify","math","Math","join","pop","shift","unshift","stableSort","support","dateRegExp","init","that","wrapAll","serializeFunctions","json","parent","source","wrap","object","bind","node","action","howMany","unbind","forEach","callback","thisArg","reduce","reduceRight","every","some","remove","Symbol","iterator","prototype","events","_parent","member","_handlers","charAt","guid","shouldSerialize","hasOwnProperty","get","_set","paths","path","composite","split","set","isSetPrevented","current","change","isObservableArray","isDataSource","number","parseFloat","date","parseDate","boolean","string","default","Date","defaults","_initializers","dirty","dirtyFields","parse","editable","accept","isNew","base","proto","functionFields","nullable","defaultValue","selector","localeCompare","create","combine","comparers","asc","valueA","valueB","__position","desc","quote","str","JSON","textOp","impl","ignore","accentFoldingFiltering","toLocaleLowerCase","op","exec","getMatchRegexp","pattern","rx","esc","ch","neq","gt","gte","lt","lte","startswith","doesnotstartwith","endswith","n","doesnotendwith","contains","doesnotcontain","matches","substring","doesnotmatch","isempty","isnotempty","isnull","isnotnull","isnullorempty","isnotnullorempty","filterExpr","expr","and","or","fieldFunctions","operatorFunctions","match","ignoreCase","==","equals","isequalto","equalto","!=","ne","notequals","isnotequalto","notequalto","notequal","<","islessthan","lessthan","less","<=","le","islessthanorequalto","lessthanequal",">","isgreaterthan","greaterthan","greater",">=","isgreaterthanorequalto","greaterthanequal","ge","notsubstringof","toArray","range","count","order","inPlace","orderBy","orderByDescending","compiled","predicate","Function","allData","groupBy","sorted","groupValue","currentValue","_sortForGrouping","_sortGroups","sum","average","max","min","process","customGroupSort","query","groupDescriptorsWithoutCompare","normalizedSort","groupDescriptorsWithoutSort","total","filterCallback","groupDescriptor","read","success","update","destroy","parameterMap","url","cache","submit","setup","error","parameters","operation","_store","clear","store","inmemory","schema","dataFunction","groupsFunction","serializeFunction","serializeGetters","modelBase","_dataAccessFunction","serialize","fromName","_wrapDataAccessBase","errors","_map","_prefetch","_pristineData","_ranges","_view","_pristineTotal","_destroyed","_pageSize","pageSize","_page","page","_sort","_filter","_group","_aggregate","_total","_shouldDetachObservableParents","transport","pushCreate","_pushCreate","pushUpdate","_pushUpdate","pushDestroy","_pushDestroy","offlineStorage","_storage","getItem","localStorage","setItem","reader","readers","_detachObservableParents","_observe","_online","serverSorting","serverPaging","serverFiltering","serverAggregates","batch","inPlaceSort","clone","online","sync","Deferred","resolve","promise","offlineData","_isServerGrouped","_push","_readData","_flatData","useRanges","getByUid","_getByUid","dataItems","_storeData","_addRange","_process","_observeView","flatView","insert","_createNewModel","_wrapInEmptyGroup","_insertModelInRange","pushInsert","pushed","autoSync","pristine","rangeSpan","_getCurrentRangeSpan","last","pristineData","_updatePristineForModel","_removeItems","removePristine","shouldRemovePristine","destroyed","found","_eachItem","_removePristineForModel","hasGroups","_removeModelFromRanges","created","updated","promises","_sendSubmit","_send","when","then","_accept","_syncEnd","_change","cancelChanges","_cancelModel","_changesCanceled","_markOfflineUpdatesAsDirty","__state__","hasChanges","models","response","serverGroup","_handleCustomErrors","values","_executeOnPristineForModel","deepExtend","_eachPristineItem","_pristineForModel","_modelCanceled","_submit","status","reject","deferred","_promise","method","converted","params","_params","_queueRequest","isPrevented","_dequeueRequest","args","_readAggregates","replaceSubset","itemIds","j","_aggregateResult","_skip","endless","_changeHandler","updatePristine","start","end","timestamp","_timeStamp","_sortRanges","xhr","errorThrown","_requestInProgress","_pending","_shouldWrap","arrayType","_updateTotalForAction","parseInt","handler","first","_calculateAggregates","_take","currentRangeStart","_clearEmptyGroups","_queryProcess","dataToAggregate","_setFilterTotal","_mergeState","_currentRangeStart","_sortFields","moreItemsCount","remote","filterTotal","setDefaultValue","fetch","_query","done","next","totalPages","prev","_pageableQueryOptions","round","_emptyAggregates","ceil","inRange","_findRange","lastRange","firstItemUid","enableRequestsInProgress","_skipRequestsInProgress","_currentRequestTimeStamp","pageSkip","floor","size","_processRangeData","_rangeExists","prefetch","skipIdx","takeIdx","startIndex","endIndex","rangeData","rangeEnd","processed","flatData","_mergeGroups","prevGroup","temp","paging","sorting","filtering","_prefetchSuccessHandler","force","clearTimeout","_timeout","setTimeout","_multiplePrefetch","_removeModelFromRange","_updateRangesLength","rangesLength","mismatchFound","mismatchLength","lengthDifference","abs","dataSource","transportOptions","transports","schemas","logToConsole","hasChildrenObject","childrenField","childrenOptions","_childrenOptions","_initChildren","_updateChildrenField","append","loaded","level","_childrenLoaded","load","one","_matchFilter","_hierarchicalFilter","_markHierarchicalQuery","_updateHierarchicalFilter","_find","_dataSource","viewSize","disablePrefetch","_prefetching","buffer","_reset","_syncWithDataSource","setViewSize","_recalculate","itemPresent","dataOffset","prefetchThreshold","midPageThreshold","nextMidRange","nextPageThreshold","nextFullRange","pullBackThreshold","offset","previousMidRange","previousFullRange","_goToRange","nextRange","syncDataSource","prefetchOffset","expanding","_expanding","_syncPending","_firstItemUid","batchSize","batchBuffer","endreached","prefetching","prefetched","reset","resize","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.data.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.data', [\n        'kendo.core',\n        'kendo.data.odata',\n        'kendo.data.xml'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'data',\n        name: 'Data source',\n        category: 'framework',\n        description: 'Powerful component for using local and remote data.Fully supports CRUD, Sorting, Paging, Filtering, Grouping, and Aggregates.',\n        depends: ['core'],\n        features: [\n            {\n                id: 'data-odata',\n                name: 'OData',\n                description: 'Support for accessing Open Data Protocol (OData) services.',\n                depends: ['data.odata']\n            },\n            {\n                id: 'data-signalr',\n                name: 'SignalR',\n                description: 'Support for binding to SignalR hubs.',\n                depends: ['data.signalr']\n            },\n            {\n                id: 'data-XML',\n                name: 'XML',\n                description: 'Support for binding to XML.',\n                depends: ['data.xml']\n            }\n        ]\n    };\n    (function ($, undefined) {\n        var extend = $.extend, proxy = $.proxy, isPlainObject = $.isPlainObject, isEmptyObject = $.isEmptyObject, isArray = $.isArray, grep = $.grep, ajax = $.ajax, map, each = $.each, noop = $.noop, kendo = window.kendo, isFunction = kendo.isFunction, Observable = kendo.Observable, Class = kendo.Class, STRING = 'string', FUNCTION = 'function', ASCENDING = 'asc', CREATE = 'create', READ = 'read', UPDATE = 'update', DESTROY = 'destroy', CHANGE = 'change', SYNC = 'sync', GET = 'get', ERROR = 'error', REQUESTSTART = 'requestStart', PROGRESS = 'progress', REQUESTEND = 'requestEnd', crud = [\n                CREATE,\n                READ,\n                UPDATE,\n                DESTROY\n            ], identity = function (o) {\n                return o;\n            }, getter = kendo.getter, stringify = kendo.stringify, math = Math, push = [].push, join = [].join, pop = [].pop, splice = [].splice, shift = [].shift, slice = [].slice, unshift = [].unshift, toString = {}.toString, stableSort = kendo.support.stableSort, dateRegExp = /^\\/Date\\((.*?)\\)\\/$/;\n        var ObservableArray = Observable.extend({\n            init: function (array, type) {\n                var that = this;\n                that.type = type || ObservableObject;\n                Observable.fn.init.call(that);\n                that.length = array.length;\n                that.wrapAll(array, that);\n            },\n            at: function (index) {\n                return this[index];\n            },\n            toJSON: function (serializeFunctions) {\n                var idx, length = this.length, value, json = new Array(length);\n                for (idx = 0; idx < length; idx++) {\n                    value = this[idx];\n                    if (value instanceof ObservableObject) {\n                        value = value.toJSON(serializeFunctions);\n                    }\n                    json[idx] = value;\n                }\n                return json;\n            },\n            parent: noop,\n            wrapAll: function (source, target) {\n                var that = this, idx, length, parent = function () {\n                        return that;\n                    };\n                target = target || [];\n                for (idx = 0, length = source.length; idx < length; idx++) {\n                    target[idx] = that.wrap(source[idx], parent);\n                }\n                return target;\n            },\n            wrap: function (object, parent) {\n                var that = this, observable;\n                if (object !== null && toString.call(object) === '[object Object]') {\n                    observable = object instanceof that.type || object instanceof Model;\n                    if (!observable) {\n                        object = object instanceof ObservableObject ? object.toJSON() : object;\n                        object = new that.type(object);\n                    }\n                    object.parent = parent;\n                    object.bind(CHANGE, function (e) {\n                        that.trigger(CHANGE, {\n                            field: e.field,\n                            node: e.node,\n                            index: e.index,\n                            items: e.items || [this],\n                            action: e.node ? e.action || 'itemloaded' : 'itemchange'\n                        });\n                    });\n                }\n                return object;\n            },\n            push: function () {\n                var index = this.length, items = this.wrapAll(arguments), result;\n                result = push.apply(this, items);\n                this.trigger(CHANGE, {\n                    action: 'add',\n                    index: index,\n                    items: items\n                });\n                return result;\n            },\n            slice: slice,\n            sort: [].sort,\n            join: join,\n            pop: function () {\n                var length = this.length, result = pop.apply(this);\n                if (length) {\n                    this.trigger(CHANGE, {\n                        action: 'remove',\n                        index: length - 1,\n                        items: [result]\n                    });\n                }\n                return result;\n            },\n            splice: function (index, howMany, item) {\n                var items = this.wrapAll(slice.call(arguments, 2)), result, i, len;\n                result = splice.apply(this, [\n                    index,\n                    howMany\n                ].concat(items));\n                if (result.length) {\n                    this.trigger(CHANGE, {\n                        action: 'remove',\n                        index: index,\n                        items: result\n                    });\n                    for (i = 0, len = result.length; i < len; i++) {\n                        if (result[i] && result[i].children) {\n                            result[i].unbind(CHANGE);\n                        }\n                    }\n                }\n                if (item) {\n                    this.trigger(CHANGE, {\n                        action: 'add',\n                        index: index,\n                        items: items\n                    });\n                }\n                return result;\n            },\n            shift: function () {\n                var length = this.length, result = shift.apply(this);\n                if (length) {\n                    this.trigger(CHANGE, {\n                        action: 'remove',\n                        index: 0,\n                        items: [result]\n                    });\n                }\n                return result;\n            },\n            unshift: function () {\n                var items = this.wrapAll(arguments), result;\n                result = unshift.apply(this, items);\n                this.trigger(CHANGE, {\n                    action: 'add',\n                    index: 0,\n                    items: items\n                });\n                return result;\n            },\n            indexOf: function (item) {\n                var that = this, idx, length;\n                for (idx = 0, length = that.length; idx < length; idx++) {\n                    if (that[idx] === item) {\n                        return idx;\n                    }\n                }\n                return -1;\n            },\n            forEach: function (callback, thisArg) {\n                var idx = 0;\n                var length = this.length;\n                var context = thisArg || window;\n                for (; idx < length; idx++) {\n                    callback.call(context, this[idx], idx, this);\n                }\n            },\n            map: function (callback, thisArg) {\n                var idx = 0;\n                var result = [];\n                var length = this.length;\n                var context = thisArg || window;\n                for (; idx < length; idx++) {\n                    result[idx] = callback.call(context, this[idx], idx, this);\n                }\n                return result;\n            },\n            reduce: function (callback) {\n                var idx = 0, result, length = this.length;\n                if (arguments.length == 2) {\n                    result = arguments[1];\n                } else if (idx < length) {\n                    result = this[idx++];\n                }\n                for (; idx < length; idx++) {\n                    result = callback(result, this[idx], idx, this);\n                }\n                return result;\n            },\n            reduceRight: function (callback) {\n                var idx = this.length - 1, result;\n                if (arguments.length == 2) {\n                    result = arguments[1];\n                } else if (idx > 0) {\n                    result = this[idx--];\n                }\n                for (; idx >= 0; idx--) {\n                    result = callback(result, this[idx], idx, this);\n                }\n                return result;\n            },\n            filter: function (callback, thisArg) {\n                var idx = 0;\n                var result = [];\n                var item;\n                var length = this.length;\n                var context = thisArg || window;\n                for (; idx < length; idx++) {\n                    item = this[idx];\n                    if (callback.call(context, item, idx, this)) {\n                        result[result.length] = item;\n                    }\n                }\n                return result;\n            },\n            find: function (callback, thisArg) {\n                var idx = 0;\n                var item;\n                var length = this.length;\n                var context = thisArg || window;\n                for (; idx < length; idx++) {\n                    item = this[idx];\n                    if (callback.call(context, item, idx, this)) {\n                        return item;\n                    }\n                }\n            },\n            every: function (callback, thisArg) {\n                var idx = 0;\n                var item;\n                var length = this.length;\n                var context = thisArg || window;\n                for (; idx < length; idx++) {\n                    item = this[idx];\n                    if (!callback.call(context, item, idx, this)) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            some: function (callback, thisArg) {\n                var idx = 0;\n                var item;\n                var length = this.length;\n                var context = thisArg || window;\n                for (; idx < length; idx++) {\n                    item = this[idx];\n                    if (callback.call(context, item, idx, this)) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            remove: function (item) {\n                var idx = this.indexOf(item);\n                if (idx !== -1) {\n                    this.splice(idx, 1);\n                }\n            },\n            empty: function () {\n                this.splice(0, this.length);\n            }\n        });\n        if (typeof Symbol !== 'undefined' && Symbol.iterator && !ObservableArray.prototype[Symbol.iterator]) {\n            ObservableArray.prototype[Symbol.iterator] = [][Symbol.iterator];\n        }\n        var LazyObservableArray = ObservableArray.extend({\n            init: function (data, type, events) {\n                Observable.fn.init.call(this);\n                this.type = type || ObservableObject;\n                if (events) {\n                    this._events = events;\n                }\n                for (var idx = 0; idx < data.length; idx++) {\n                    this[idx] = data[idx];\n                }\n                this.length = idx;\n                this._parent = proxy(function () {\n                    return this;\n                }, this);\n            },\n            at: function (index) {\n                var item = this[index];\n                if (!(item instanceof this.type)) {\n                    item = this[index] = this.wrap(item, this._parent);\n                } else {\n                    item.parent = this._parent;\n                }\n                return item;\n            }\n        });\n        function eventHandler(context, type, field, prefix) {\n            return function (e) {\n                var event = {}, key;\n                for (key in e) {\n                    event[key] = e[key];\n                }\n                if (prefix) {\n                    event.field = field + '.' + e.field;\n                } else {\n                    event.field = field;\n                }\n                if (type == CHANGE && context._notifyChange) {\n                    context._notifyChange(event);\n                }\n                context.trigger(type, event);\n            };\n        }\n        var ObservableObject = Observable.extend({\n            init: function (value) {\n                var that = this, member, field, parent = function () {\n                        return that;\n                    };\n                Observable.fn.init.call(this);\n                this._handlers = {};\n                for (field in value) {\n                    member = value[field];\n                    if (typeof member === 'object' && member && !member.getTime && field.charAt(0) != '_') {\n                        member = that.wrap(member, field, parent);\n                    }\n                    that[field] = member;\n                }\n                that.uid = kendo.guid();\n            },\n            shouldSerialize: function (field, serializeFunctions) {\n                return this.hasOwnProperty(field) && field !== '_handlers' && field !== '_events' && (serializeFunctions && serializeFunctions[field] || typeof this[field] !== FUNCTION) && field !== 'uid';\n            },\n            forEach: function (f) {\n                for (var i in this) {\n                    if (this.shouldSerialize(i)) {\n                        f(this[i], i);\n                    }\n                }\n            },\n            toJSON: function (serializeFunctions) {\n                var result = {}, value, field;\n                for (field in this) {\n                    if (this.shouldSerialize(field, serializeFunctions)) {\n                        value = this[field];\n                        if (value instanceof ObservableObject || value instanceof ObservableArray) {\n                            value = value.toJSON(serializeFunctions);\n                        }\n                        result[field] = value;\n                    }\n                }\n                return result;\n            },\n            get: function (field) {\n                var that = this, result;\n                that.trigger(GET, { field: field });\n                if (field === 'this') {\n                    result = that;\n                } else {\n                    result = kendo.getter(field, true)(that);\n                }\n                return result;\n            },\n            _set: function (field, value) {\n                var that = this;\n                var composite = field.indexOf('.') >= 0;\n                if (composite) {\n                    var paths = field.split('.'), path = '';\n                    while (paths.length > 1) {\n                        path += paths.shift();\n                        var obj = kendo.getter(path, true)(that);\n                        if (obj instanceof ObservableObject) {\n                            obj.set(paths.join('.'), value);\n                            return composite;\n                        }\n                        path += '.';\n                    }\n                }\n                kendo.setter(field)(that, value);\n                return composite;\n            },\n            set: function (field, value) {\n                var that = this, isSetPrevented = false, composite = field.indexOf('.') >= 0, current = kendo.getter(field, true)(that);\n                if (current !== value) {\n                    if (current instanceof Observable && this._handlers[field]) {\n                        if (this._handlers[field].get) {\n                            current.unbind(GET, this._handlers[field].get);\n                        }\n                        current.unbind(CHANGE, this._handlers[field].change);\n                    }\n                    isSetPrevented = that.trigger('set', {\n                        field: field,\n                        value: value\n                    });\n                    if (!isSetPrevented) {\n                        if (!composite) {\n                            value = that.wrap(value, field, function () {\n                                return that;\n                            });\n                        }\n                        if (!that._set(field, value) || field.indexOf('(') >= 0 || field.indexOf('[') >= 0) {\n                            that.trigger(CHANGE, { field: field });\n                        }\n                    }\n                }\n                return isSetPrevented;\n            },\n            parent: noop,\n            wrap: function (object, field, parent) {\n                var that = this;\n                var get;\n                var change;\n                var type = toString.call(object);\n                if (object != null && (type === '[object Object]' || type === '[object Array]')) {\n                    var isObservableArray = object instanceof ObservableArray;\n                    var isDataSource = object instanceof DataSource;\n                    if (type === '[object Object]' && !isDataSource && !isObservableArray) {\n                        if (!(object instanceof ObservableObject)) {\n                            object = new ObservableObject(object);\n                        }\n                        get = eventHandler(that, GET, field, true);\n                        object.bind(GET, get);\n                        change = eventHandler(that, CHANGE, field, true);\n                        object.bind(CHANGE, change);\n                        that._handlers[field] = {\n                            get: get,\n                            change: change\n                        };\n                    } else if (type === '[object Array]' || isObservableArray || isDataSource) {\n                        if (!isObservableArray && !isDataSource) {\n                            object = new ObservableArray(object);\n                        }\n                        change = eventHandler(that, CHANGE, field, false);\n                        object.bind(CHANGE, change);\n                        that._handlers[field] = { change: change };\n                    }\n                    object.parent = parent;\n                }\n                return object;\n            }\n        });\n        function equal(x, y) {\n            if (x === y) {\n                return true;\n            }\n            var xtype = $.type(x), ytype = $.type(y), field;\n            if (xtype !== ytype) {\n                return false;\n            }\n            if (xtype === 'date') {\n                return x.getTime() === y.getTime();\n            }\n            if (xtype !== 'object' && xtype !== 'array') {\n                return false;\n            }\n            for (field in x) {\n                if (!equal(x[field], y[field])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        var parsers = {\n            'number': function (value) {\n                if (typeof value === STRING && value.toLowerCase() === 'null') {\n                    return null;\n                }\n                return kendo.parseFloat(value);\n            },\n            'date': function (value) {\n                if (typeof value === STRING && value.toLowerCase() === 'null') {\n                    return null;\n                }\n                return kendo.parseDate(value);\n            },\n            'boolean': function (value) {\n                if (typeof value === STRING) {\n                    if (value.toLowerCase() === 'null') {\n                        return null;\n                    } else {\n                        return value.toLowerCase() === 'true';\n                    }\n                }\n                return value != null ? !!value : value;\n            },\n            'string': function (value) {\n                if (typeof value === STRING && value.toLowerCase() === 'null') {\n                    return null;\n                }\n                return value != null ? value + '' : value;\n            },\n            'default': function (value) {\n                return value;\n            }\n        };\n        var defaultValues = {\n            'string': '',\n            'number': 0,\n            'date': new Date(),\n            'boolean': false,\n            'default': ''\n        };\n        function getFieldByName(obj, name) {\n            var field, fieldName;\n            for (fieldName in obj) {\n                field = obj[fieldName];\n                if (isPlainObject(field) && field.field && field.field === name) {\n                    return field;\n                } else if (field === name) {\n                    return field;\n                }\n            }\n            return null;\n        }\n        var Model = ObservableObject.extend({\n            init: function (data) {\n                var that = this;\n                if (!data || $.isEmptyObject(data)) {\n                    data = $.extend({}, that.defaults, data);\n                    if (that._initializers) {\n                        for (var idx = 0; idx < that._initializers.length; idx++) {\n                            var name = that._initializers[idx];\n                            data[name] = that.defaults[name]();\n                        }\n                    }\n                }\n                ObservableObject.fn.init.call(that, data);\n                that.dirty = false;\n                that.dirtyFields = {};\n                if (that.idField) {\n                    that.id = that.get(that.idField);\n                    if (that.id === undefined) {\n                        that.id = that._defaultId;\n                    }\n                }\n            },\n            shouldSerialize: function (field) {\n                return ObservableObject.fn.shouldSerialize.call(this, field) && field !== 'uid' && !(this.idField !== 'id' && field === 'id') && field !== 'dirty' && field !== 'dirtyFields' && field !== '_accessors';\n            },\n            _parse: function (field, value) {\n                var that = this, fieldName = field, fields = that.fields || {}, parse;\n                field = fields[field];\n                if (!field) {\n                    field = getFieldByName(fields, fieldName);\n                }\n                if (field) {\n                    parse = field.parse;\n                    if (!parse && field.type) {\n                        parse = parsers[field.type.toLowerCase()];\n                    }\n                }\n                return parse ? parse(value) : value;\n            },\n            _notifyChange: function (e) {\n                var action = e.action;\n                if (action == 'add' || action == 'remove') {\n                    this.dirty = true;\n                    this.dirtyFields[e.field] = true;\n                }\n            },\n            editable: function (field) {\n                field = (this.fields || {})[field];\n                return field ? field.editable !== false : true;\n            },\n            set: function (field, value) {\n                var that = this;\n                var dirty = that.dirty;\n                if (that.editable(field)) {\n                    value = that._parse(field, value);\n                    if (!equal(value, that.get(field))) {\n                        that.dirty = true;\n                        that.dirtyFields[field] = true;\n                        if (ObservableObject.fn.set.call(that, field, value) && !dirty) {\n                            that.dirty = dirty;\n                            if (!that.dirty) {\n                                that.dirtyFields[field] = false;\n                            }\n                        }\n                    } else {\n                        that.trigger('equalSet', {\n                            field: field,\n                            value: value\n                        });\n                    }\n                }\n            },\n            accept: function (data) {\n                var that = this, parent = function () {\n                        return that;\n                    }, field;\n                for (field in data) {\n                    var value = data[field];\n                    if (field.charAt(0) != '_') {\n                        value = that.wrap(data[field], field, parent);\n                    }\n                    that._set(field, value);\n                }\n                if (that.idField) {\n                    that.id = that.get(that.idField);\n                }\n                that.dirty = false;\n                that.dirtyFields = {};\n            },\n            isNew: function () {\n                return this.id === this._defaultId;\n            }\n        });\n        Model.define = function (base, options) {\n            if (options === undefined) {\n                options = base;\n                base = Model;\n            }\n            var model, proto = extend({ defaults: {} }, options), name, field, type, value, idx, length, fields = {}, originalName, id = proto.id, functionFields = [];\n            if (id) {\n                proto.idField = id;\n            }\n            if (proto.id) {\n                delete proto.id;\n            }\n            if (id) {\n                proto.defaults[id] = proto._defaultId = '';\n            }\n            if (toString.call(proto.fields) === '[object Array]') {\n                for (idx = 0, length = proto.fields.length; idx < length; idx++) {\n                    field = proto.fields[idx];\n                    if (typeof field === STRING) {\n                        fields[field] = {};\n                    } else if (field.field) {\n                        fields[field.field] = field;\n                    }\n                }\n                proto.fields = fields;\n            }\n            for (name in proto.fields) {\n                field = proto.fields[name];\n                type = field.type || 'default';\n                value = null;\n                originalName = name;\n                name = typeof field.field === STRING ? field.field : name;\n                if (!field.nullable) {\n                    value = proto.defaults[originalName !== name ? originalName : name] = field.defaultValue !== undefined ? field.defaultValue : defaultValues[type.toLowerCase()];\n                    if (typeof value === 'function') {\n                        functionFields.push(name);\n                    }\n                }\n                if (options.id === name) {\n                    proto._defaultId = value;\n                }\n                proto.defaults[originalName !== name ? originalName : name] = value;\n                field.parse = field.parse || parsers[type];\n            }\n            if (functionFields.length > 0) {\n                proto._initializers = functionFields;\n            }\n            model = base.extend(proto);\n            model.define = function (options) {\n                return Model.define(model, options);\n            };\n            if (proto.fields) {\n                model.fields = proto.fields;\n                model.idField = proto.idField;\n            }\n            return model;\n        };\n        var Comparer = {\n            selector: function (field) {\n                return isFunction(field) ? field : getter(field);\n            },\n            compare: function (field) {\n                var selector = this.selector(field);\n                return function (a, b) {\n                    a = selector(a);\n                    b = selector(b);\n                    if (a == null && b == null) {\n                        return 0;\n                    }\n                    if (a == null) {\n                        return -1;\n                    }\n                    if (b == null) {\n                        return 1;\n                    }\n                    if (a.localeCompare) {\n                        return a.localeCompare(b);\n                    }\n                    return a > b ? 1 : a < b ? -1 : 0;\n                };\n            },\n            create: function (sort) {\n                var compare = sort.compare || this.compare(sort.field);\n                if (sort.dir == 'desc') {\n                    return function (a, b) {\n                        return compare(b, a, true);\n                    };\n                }\n                return compare;\n            },\n            combine: function (comparers) {\n                return function (a, b) {\n                    var result = comparers[0](a, b), idx, length;\n                    for (idx = 1, length = comparers.length; idx < length; idx++) {\n                        result = result || comparers[idx](a, b);\n                    }\n                    return result;\n                };\n            }\n        };\n        var StableComparer = extend({}, Comparer, {\n            asc: function (field) {\n                var selector = this.selector(field);\n                return function (a, b) {\n                    var valueA = selector(a);\n                    var valueB = selector(b);\n                    if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                        valueA = valueA.getTime();\n                        valueB = valueB.getTime();\n                    }\n                    if (valueA === valueB) {\n                        return a.__position - b.__position;\n                    }\n                    if (valueA == null) {\n                        return -1;\n                    }\n                    if (valueB == null) {\n                        return 1;\n                    }\n                    if (valueA.localeCompare) {\n                        return valueA.localeCompare(valueB);\n                    }\n                    return valueA > valueB ? 1 : -1;\n                };\n            },\n            desc: function (field) {\n                var selector = this.selector(field);\n                return function (a, b) {\n                    var valueA = selector(a);\n                    var valueB = selector(b);\n                    if (valueA && valueA.getTime && valueB && valueB.getTime) {\n                        valueA = valueA.getTime();\n                        valueB = valueB.getTime();\n                    }\n                    if (valueA === valueB) {\n                        return a.__position - b.__position;\n                    }\n                    if (valueA == null) {\n                        return 1;\n                    }\n                    if (valueB == null) {\n                        return -1;\n                    }\n                    if (valueB.localeCompare) {\n                        return valueB.localeCompare(valueA);\n                    }\n                    return valueA < valueB ? 1 : -1;\n                };\n            },\n            create: function (sort) {\n                return this[sort.dir](sort.field);\n            }\n        });\n        map = function (array, callback) {\n            var idx, length = array.length, result = new Array(length);\n            for (idx = 0; idx < length; idx++) {\n                result[idx] = callback(array[idx], idx, array);\n            }\n            return result;\n        };\n        var operators = function () {\n            function quote(str) {\n                if (typeof str == 'string') {\n                    str = str.replace(/[\\r\\n]+/g, '');\n                }\n                return JSON.stringify(str);\n            }\n            function textOp(impl) {\n                return function (a, b, ignore, accentFoldingFiltering) {\n                    b += '';\n                    if (ignore) {\n                        a = '(' + a + ' + \\'\\').toString()' + (accentFoldingFiltering ? '.toLocaleLowerCase(\\'' + accentFoldingFiltering + '\\')' : '.toLowerCase()');\n                        b = accentFoldingFiltering ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase();\n                    }\n                    return impl(a, quote(b), ignore);\n                };\n            }\n            function operator(op, a, b, ignore, accentFoldingFiltering) {\n                if (b != null) {\n                    if (typeof b === STRING) {\n                        var date = dateRegExp.exec(b);\n                        if (date) {\n                            b = new Date(+date[1]);\n                        } else if (ignore) {\n                            b = quote(accentFoldingFiltering ? b.toLocaleLowerCase(accentFoldingFiltering) : b.toLowerCase());\n                            a = '((' + a + ' || \\'\\')+\\'\\')' + (accentFoldingFiltering ? '.toLocaleLowerCase(\\'' + accentFoldingFiltering + '\\')' : '.toLowerCase()');\n                        } else {\n                            b = quote(b);\n                        }\n                    }\n                    if (b.getTime) {\n                        a = '(' + a + '&&' + a + '.getTime?' + a + '.getTime():' + a + ')';\n                        b = b.getTime();\n                    }\n                }\n                return a + ' ' + op + ' ' + b;\n            }\n            function getMatchRegexp(pattern) {\n                for (var rx = '/^', esc = false, i = 0; i < pattern.length; ++i) {\n                    var ch = pattern.charAt(i);\n                    if (esc) {\n                        rx += '\\\\' + ch;\n                    } else if (ch == '~') {\n                        esc = true;\n                        continue;\n                    } else if (ch == '*') {\n                        rx += '.*';\n                    } else if (ch == '?') {\n                        rx += '.';\n                    } else if ('.+^$()[]{}|\\\\/\\n\\r\\u2028\\u2029\\xA0'.indexOf(ch) >= 0) {\n                        rx += '\\\\' + ch;\n                    } else {\n                        rx += ch;\n                    }\n                    esc = false;\n                }\n                return rx + '$/';\n            }\n            return {\n                quote: function (value) {\n                    if (value && value.getTime) {\n                        return 'new Date(' + value.getTime() + ')';\n                    }\n                    return quote(value);\n                },\n                eq: function (a, b, ignore, accentFoldingFiltering) {\n                    return operator('==', a, b, ignore, accentFoldingFiltering);\n                },\n                neq: function (a, b, ignore, accentFoldingFiltering) {\n                    return operator('!=', a, b, ignore, accentFoldingFiltering);\n                },\n                gt: function (a, b, ignore) {\n                    return operator('>', a, b, ignore);\n                },\n                gte: function (a, b, ignore) {\n                    return operator('>=', a, b, ignore);\n                },\n                lt: function (a, b, ignore) {\n                    return operator('<', a, b, ignore);\n                },\n                lte: function (a, b, ignore) {\n                    return operator('<=', a, b, ignore);\n                },\n                startswith: textOp(function (a, b) {\n                    return a + '.lastIndexOf(' + b + ', 0) == 0';\n                }),\n                doesnotstartwith: textOp(function (a, b) {\n                    return a + '.lastIndexOf(' + b + ', 0) == -1';\n                }),\n                endswith: textOp(function (a, b) {\n                    var n = b ? b.length - 2 : 0;\n                    return a + '.indexOf(' + b + ', ' + a + '.length - ' + n + ') >= 0';\n                }),\n                doesnotendwith: textOp(function (a, b) {\n                    var n = b ? b.length - 2 : 0;\n                    return a + '.indexOf(' + b + ', ' + a + '.length - ' + n + ') < 0';\n                }),\n                contains: textOp(function (a, b) {\n                    return a + '.indexOf(' + b + ') >= 0';\n                }),\n                doesnotcontain: textOp(function (a, b) {\n                    return a + '.indexOf(' + b + ') == -1';\n                }),\n                matches: textOp(function (a, b) {\n                    b = b.substring(1, b.length - 1);\n                    return getMatchRegexp(b) + '.test(' + a + ')';\n                }),\n                doesnotmatch: textOp(function (a, b) {\n                    b = b.substring(1, b.length - 1);\n                    return '!' + getMatchRegexp(b) + '.test(' + a + ')';\n                }),\n                isempty: function (a) {\n                    return a + ' === \\'\\'';\n                },\n                isnotempty: function (a) {\n                    return a + ' !== \\'\\'';\n                },\n                isnull: function (a) {\n                    return '(' + a + ' == null)';\n                },\n                isnotnull: function (a) {\n                    return '(' + a + ' != null)';\n                },\n                isnullorempty: function (a) {\n                    return '(' + a + ' === null) || (' + a + ' === \\'\\')';\n                },\n                isnotnullorempty: function (a) {\n                    return '(' + a + ' !== null) && (' + a + ' !== \\'\\')';\n                }\n            };\n        }();\n        function Query(data) {\n            this.data = data || [];\n        }\n        Query.filterExpr = function (expression) {\n            var expressions = [], logic = {\n                    and: ' && ',\n                    or: ' || '\n                }, idx, length, filter, expr, fieldFunctions = [], operatorFunctions = [], field, operator, filters = expression.filters;\n            for (idx = 0, length = filters.length; idx < length; idx++) {\n                filter = filters[idx];\n                field = filter.field;\n                operator = filter.operator;\n                if (filter.filters) {\n                    expr = Query.filterExpr(filter);\n                    filter = expr.expression.replace(/__o\\[(\\d+)\\]/g, function (match, index) {\n                        index = +index;\n                        return '__o[' + (operatorFunctions.length + index) + ']';\n                    }).replace(/__f\\[(\\d+)\\]/g, function (match, index) {\n                        index = +index;\n                        return '__f[' + (fieldFunctions.length + index) + ']';\n                    });\n                    operatorFunctions.push.apply(operatorFunctions, expr.operators);\n                    fieldFunctions.push.apply(fieldFunctions, expr.fields);\n                } else {\n                    if (typeof field === FUNCTION) {\n                        expr = '__f[' + fieldFunctions.length + '](d)';\n                        fieldFunctions.push(field);\n                    } else {\n                        expr = kendo.expr(field);\n                    }\n                    if (typeof operator === FUNCTION) {\n                        filter = '__o[' + operatorFunctions.length + '](' + expr + ', ' + operators.quote(filter.value) + ')';\n                        operatorFunctions.push(operator);\n                    } else {\n                        filter = operators[(operator || 'eq').toLowerCase()](expr, filter.value, filter.ignoreCase !== undefined ? filter.ignoreCase : true, expression.accentFoldingFiltering);\n                    }\n                }\n                expressions.push(filter);\n            }\n            return {\n                expression: '(' + expressions.join(logic[expression.logic]) + ')',\n                fields: fieldFunctions,\n                operators: operatorFunctions\n            };\n        };\n        function normalizeSort(field, dir) {\n            if (field) {\n                var descriptor = typeof field === STRING ? {\n                        field: field,\n                        dir: dir\n                    } : field, descriptors = isArray(descriptor) ? descriptor : descriptor !== undefined ? [descriptor] : [];\n                return grep(descriptors, function (d) {\n                    return !!d.dir;\n                });\n            }\n        }\n        function sortFields(sorts, dir) {\n            var sortObject = {};\n            if (sorts) {\n                var descriptor = typeof sorts === STRING ? {\n                        field: sorts,\n                        dir: dir\n                    } : sorts, descriptors = isArray(descriptor) ? descriptor : descriptor !== undefined ? [descriptor] : [];\n                for (var i = 0; i < descriptors.length; i++) {\n                    sortObject[descriptors[i].field] = {\n                        dir: descriptors[i].dir,\n                        index: i + 1\n                    };\n                }\n            }\n            return sortObject;\n        }\n        var operatorMap = {\n            '==': 'eq',\n            equals: 'eq',\n            isequalto: 'eq',\n            equalto: 'eq',\n            equal: 'eq',\n            '!=': 'neq',\n            ne: 'neq',\n            notequals: 'neq',\n            isnotequalto: 'neq',\n            notequalto: 'neq',\n            notequal: 'neq',\n            '<': 'lt',\n            islessthan: 'lt',\n            lessthan: 'lt',\n            less: 'lt',\n            '<=': 'lte',\n            le: 'lte',\n            islessthanorequalto: 'lte',\n            lessthanequal: 'lte',\n            '>': 'gt',\n            isgreaterthan: 'gt',\n            greaterthan: 'gt',\n            greater: 'gt',\n            '>=': 'gte',\n            isgreaterthanorequalto: 'gte',\n            greaterthanequal: 'gte',\n            ge: 'gte',\n            notsubstringof: 'doesnotcontain',\n            isnull: 'isnull',\n            isempty: 'isempty',\n            isnotempty: 'isnotempty'\n        };\n        function normalizeOperator(expression) {\n            var idx, length, filter, operator, filters = expression.filters;\n            if (filters) {\n                for (idx = 0, length = filters.length; idx < length; idx++) {\n                    filter = filters[idx];\n                    operator = filter.operator;\n                    if (operator && typeof operator === STRING) {\n                        filter.operator = operatorMap[operator.toLowerCase()] || operator;\n                    }\n                    normalizeOperator(filter);\n                }\n            }\n        }\n        function normalizeFilter(expression) {\n            if (expression && !isEmptyObject(expression)) {\n                if (isArray(expression) || !expression.filters) {\n                    expression = {\n                        logic: 'and',\n                        filters: isArray(expression) ? expression : [expression]\n                    };\n                }\n                normalizeOperator(expression);\n                return expression;\n            }\n        }\n        Query.normalizeFilter = normalizeFilter;\n        function compareDescriptor(f1, f2) {\n            if (f1.logic || f2.logic) {\n                return false;\n            }\n            return f1.field === f2.field && f1.value === f2.value && f1.operator === f2.operator;\n        }\n        function normalizeDescriptor(filter) {\n            filter = filter || {};\n            if (isEmptyObject(filter)) {\n                return {\n                    logic: 'and',\n                    filters: []\n                };\n            }\n            return normalizeFilter(filter);\n        }\n        function fieldComparer(a, b) {\n            if (b.logic || a.field > b.field) {\n                return 1;\n            } else if (a.field < b.field) {\n                return -1;\n            } else {\n                return 0;\n            }\n        }\n        function compareFilters(expr1, expr2) {\n            expr1 = normalizeDescriptor(expr1);\n            expr2 = normalizeDescriptor(expr2);\n            if (expr1.logic !== expr2.logic) {\n                return false;\n            }\n            var f1, f2;\n            var filters1 = (expr1.filters || []).slice();\n            var filters2 = (expr2.filters || []).slice();\n            if (filters1.length !== filters2.length) {\n                return false;\n            }\n            filters1 = filters1.sort(fieldComparer);\n            filters2 = filters2.sort(fieldComparer);\n            for (var idx = 0; idx < filters1.length; idx++) {\n                f1 = filters1[idx];\n                f2 = filters2[idx];\n                if (f1.logic && f2.logic) {\n                    if (!compareFilters(f1, f2)) {\n                        return false;\n                    }\n                } else if (!compareDescriptor(f1, f2)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        Query.compareFilters = compareFilters;\n        function normalizeAggregate(expressions) {\n            return isArray(expressions) ? expressions : [expressions];\n        }\n        function normalizeGroup(field, dir, compare, skipItemSorting) {\n            var descriptor = typeof field === STRING ? {\n                    field: field,\n                    dir: dir,\n                    compare: compare,\n                    skipItemSorting: skipItemSorting\n                } : field, descriptors = isArray(descriptor) ? descriptor : descriptor !== undefined ? [descriptor] : [];\n            return map(descriptors, function (d) {\n                return {\n                    field: d.field,\n                    dir: d.dir || 'asc',\n                    aggregates: d.aggregates,\n                    compare: d.compare,\n                    skipItemSorting: d.skipItemSorting\n                };\n            });\n        }\n        function normalizeGroupWithoutCompare(field, dir, compare) {\n            var descriptors = normalizeGroup(field, dir, compare);\n            for (var i = 0; i < descriptors.length; i++) {\n                delete descriptors[i].compare;\n            }\n            return descriptors;\n        }\n        function anyGroupDescriptorHasCompare(groupDescriptors) {\n            var descriptors = isArray(groupDescriptors) ? groupDescriptors : [groupDescriptors];\n            for (var i = 0; i < descriptors.length; i++) {\n                if (descriptors[i] && isFunction(descriptors[i].compare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        Query.prototype = {\n            toArray: function () {\n                return this.data;\n            },\n            range: function (index, count) {\n                return new Query(this.data.slice(index, index + count));\n            },\n            skip: function (count) {\n                return new Query(this.data.slice(count));\n            },\n            take: function (count) {\n                return new Query(this.data.slice(0, count));\n            },\n            select: function (selector) {\n                return new Query(map(this.data, selector));\n            },\n            order: function (selector, dir, inPlace) {\n                var sort = { dir: dir };\n                if (selector) {\n                    if (selector.compare) {\n                        sort.compare = selector.compare;\n                    } else {\n                        sort.field = selector;\n                    }\n                }\n                if (inPlace) {\n                    return new Query(this.data.sort(Comparer.create(sort)));\n                }\n                return new Query(this.data.slice(0).sort(Comparer.create(sort)));\n            },\n            orderBy: function (selector, inPlace) {\n                return this.order(selector, 'asc', inPlace);\n            },\n            orderByDescending: function (selector, inPlace) {\n                return this.order(selector, 'desc', inPlace);\n            },\n            sort: function (field, dir, comparer, inPlace) {\n                var idx, length, descriptors = normalizeSort(field, dir), comparers = [];\n                comparer = comparer || Comparer;\n                if (descriptors.length) {\n                    for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                        comparers.push(comparer.create(descriptors[idx]));\n                    }\n                    return this.orderBy({ compare: comparer.combine(comparers) }, inPlace);\n                }\n                return this;\n            },\n            filter: function (expressions) {\n                var idx, current, length, compiled, predicate, data = this.data, fields, operators, result = [], filter;\n                expressions = normalizeFilter(expressions);\n                if (!expressions || expressions.filters.length === 0) {\n                    return this;\n                }\n                compiled = Query.filterExpr(expressions);\n                fields = compiled.fields;\n                operators = compiled.operators;\n                predicate = filter = new Function('d, __f, __o', 'return ' + compiled.expression);\n                if (fields.length || operators.length) {\n                    filter = function (d) {\n                        return predicate(d, fields, operators);\n                    };\n                }\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    current = data[idx];\n                    if (filter(current)) {\n                        result.push(current);\n                    }\n                }\n                return new Query(result);\n            },\n            group: function (descriptors, allData) {\n                descriptors = normalizeGroup(descriptors || []);\n                allData = allData || this.data;\n                var that = this, result = new Query(that.data), descriptor;\n                if (descriptors.length > 0) {\n                    descriptor = descriptors[0];\n                    result = result.groupBy(descriptor).select(function (group) {\n                        var data = new Query(allData).filter([{\n                                field: group.field,\n                                operator: 'eq',\n                                value: group.value,\n                                ignoreCase: false\n                            }]);\n                        return {\n                            field: group.field,\n                            value: group.value,\n                            items: descriptors.length > 1 ? new Query(group.items).group(descriptors.slice(1), data.toArray()).toArray() : group.items,\n                            hasSubgroups: descriptors.length > 1,\n                            aggregates: data.aggregate(descriptor.aggregates)\n                        };\n                    });\n                }\n                return result;\n            },\n            groupBy: function (descriptor) {\n                var that = this;\n                if (isEmptyObject(descriptor) || !this.data.length) {\n                    return new Query([]);\n                }\n                var field = descriptor.field, sorted = descriptor.skipItemSorting ? this.data : this._sortForGrouping(field, descriptor.dir || 'asc'), accessor = kendo.accessor(field), item, groupValue = accessor.get(sorted[0], field), group = {\n                        field: field,\n                        value: groupValue,\n                        items: []\n                    }, currentValue, idx, len, result = [group];\n                for (idx = 0, len = sorted.length; idx < len; idx++) {\n                    item = sorted[idx];\n                    currentValue = accessor.get(item, field);\n                    if (!groupValueComparer(groupValue, currentValue)) {\n                        groupValue = currentValue;\n                        group = {\n                            field: field,\n                            value: groupValue,\n                            items: []\n                        };\n                        result.push(group);\n                    }\n                    group.items.push(item);\n                }\n                result = that._sortGroups(result, descriptor);\n                return new Query(result);\n            },\n            _sortForGrouping: function (field, dir) {\n                var idx, length, data = this.data;\n                if (!stableSort) {\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        data[idx].__position = idx;\n                    }\n                    data = new Query(data).sort(field, dir, StableComparer).toArray();\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        delete data[idx].__position;\n                    }\n                    return data;\n                }\n                return this.sort(field, dir).toArray();\n            },\n            _sortGroups: function (groups, descriptor) {\n                var result = groups;\n                if (descriptor && isFunction(descriptor.compare)) {\n                    result = new Query(result).order({ compare: descriptor.compare }, descriptor.dir || ASCENDING).toArray();\n                }\n                return result;\n            },\n            aggregate: function (aggregates) {\n                var idx, len, result = {}, state = {};\n                if (aggregates && aggregates.length) {\n                    for (idx = 0, len = this.data.length; idx < len; idx++) {\n                        calculateAggregate(result, aggregates, this.data[idx], idx, len, state);\n                    }\n                }\n                return result;\n            }\n        };\n        function groupValueComparer(a, b) {\n            if (a && a.getTime && b && b.getTime) {\n                return a.getTime() === b.getTime();\n            }\n            return a === b;\n        }\n        function calculateAggregate(accumulator, aggregates, item, index, length, state) {\n            aggregates = aggregates || [];\n            var idx, aggr, functionName, len = aggregates.length;\n            for (idx = 0; idx < len; idx++) {\n                aggr = aggregates[idx];\n                functionName = aggr.aggregate;\n                var field = aggr.field;\n                accumulator[field] = accumulator[field] || {};\n                state[field] = state[field] || {};\n                state[field][functionName] = state[field][functionName] || {};\n                accumulator[field][functionName] = functions[functionName.toLowerCase()](accumulator[field][functionName], item, kendo.accessor(field), index, length, state[field][functionName]);\n            }\n        }\n        var functions = {\n            sum: function (accumulator, item, accessor) {\n                var value = accessor.get(item);\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n                return accumulator;\n            },\n            count: function (accumulator) {\n                return (accumulator || 0) + 1;\n            },\n            average: function (accumulator, item, accessor, index, length, state) {\n                var value = accessor.get(item);\n                if (state.count === undefined) {\n                    state.count = 0;\n                }\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n                if (isNumber(value)) {\n                    state.count++;\n                }\n                if (index == length - 1 && isNumber(accumulator)) {\n                    accumulator = accumulator / state.count;\n                }\n                return accumulator;\n            },\n            max: function (accumulator, item, accessor) {\n                var value = accessor.get(item);\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n                if (accumulator < value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            },\n            min: function (accumulator, item, accessor) {\n                var value = accessor.get(item);\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n                if (accumulator > value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            }\n        };\n        function isNumber(val) {\n            return typeof val === 'number' && !isNaN(val);\n        }\n        function isDate(val) {\n            return val && val.getTime;\n        }\n        function toJSON(array) {\n            var idx, length = array.length, result = new Array(length);\n            for (idx = 0; idx < length; idx++) {\n                result[idx] = array[idx].toJSON();\n            }\n            return result;\n        }\n        Query.normalizeGroup = normalizeGroup;\n        Query.normalizeSort = normalizeSort;\n        Query.process = function (data, options, inPlace) {\n            options = options || {};\n            var group = options.group;\n            var customGroupSort = anyGroupDescriptorHasCompare(normalizeGroup(group || []));\n            var query = new Query(data), groupDescriptorsWithoutCompare = normalizeGroupWithoutCompare(group || []), normalizedSort = normalizeSort(options.sort || []), sort = customGroupSort ? normalizedSort : groupDescriptorsWithoutCompare.concat(normalizedSort), groupDescriptorsWithoutSort, total, filterCallback = options.filterCallback, filter = options.filter, skip = options.skip, take = options.take;\n            if (sort && inPlace) {\n                query = query.sort(sort, undefined, undefined, inPlace);\n            }\n            if (filter) {\n                query = query.filter(filter);\n                if (filterCallback) {\n                    query = filterCallback(query);\n                }\n                total = query.toArray().length;\n            }\n            if (sort) {\n                if (!inPlace) {\n                    query = query.sort(sort);\n                }\n                if (group) {\n                    data = query.toArray();\n                }\n            }\n            if (customGroupSort) {\n                query = query.group(group, data);\n                if (skip !== undefined && take !== undefined) {\n                    query = new Query(flatGroups(query.toArray())).range(skip, take);\n                    groupDescriptorsWithoutSort = map(groupDescriptorsWithoutCompare, function (groupDescriptor) {\n                        return extend({}, groupDescriptor, { skipItemSorting: true });\n                    });\n                    query = query.group(groupDescriptorsWithoutSort, data);\n                }\n            } else {\n                if (skip !== undefined && take !== undefined) {\n                    query = query.range(skip, take);\n                }\n                if (group) {\n                    query = query.group(group, data);\n                }\n            }\n            return {\n                total: total,\n                data: query.toArray()\n            };\n        };\n        var LocalTransport = Class.extend({\n            init: function (options) {\n                this.data = options.data;\n            },\n            read: function (options) {\n                options.success(this.data);\n            },\n            update: function (options) {\n                options.success(options.data);\n            },\n            create: function (options) {\n                options.success(options.data);\n            },\n            destroy: function (options) {\n                options.success(options.data);\n            }\n        });\n        var RemoteTransport = Class.extend({\n            init: function (options) {\n                var that = this, parameterMap;\n                options = that.options = extend({}, that.options, options);\n                each(crud, function (index, type) {\n                    if (typeof options[type] === STRING) {\n                        options[type] = { url: options[type] };\n                    }\n                });\n                that.cache = options.cache ? Cache.create(options.cache) : {\n                    find: noop,\n                    add: noop\n                };\n                parameterMap = options.parameterMap;\n                if (options.submit) {\n                    that.submit = options.submit;\n                }\n                if (isFunction(options.push)) {\n                    that.push = options.push;\n                }\n                if (!that.push) {\n                    that.push = identity;\n                }\n                that.parameterMap = isFunction(parameterMap) ? parameterMap : function (options) {\n                    var result = {};\n                    each(options, function (option, value) {\n                        if (option in parameterMap) {\n                            option = parameterMap[option];\n                            if (isPlainObject(option)) {\n                                value = option.value(value);\n                                option = option.key;\n                            }\n                        }\n                        result[option] = value;\n                    });\n                    return result;\n                };\n            },\n            options: { parameterMap: identity },\n            create: function (options) {\n                return ajax(this.setup(options, CREATE));\n            },\n            read: function (options) {\n                var that = this, success, error, result, cache = that.cache;\n                options = that.setup(options, READ);\n                success = options.success || noop;\n                error = options.error || noop;\n                result = cache.find(options.data);\n                if (result !== undefined) {\n                    success(result);\n                } else {\n                    options.success = function (result) {\n                        cache.add(options.data, result);\n                        success(result);\n                    };\n                    $.ajax(options);\n                }\n            },\n            update: function (options) {\n                return ajax(this.setup(options, UPDATE));\n            },\n            destroy: function (options) {\n                return ajax(this.setup(options, DESTROY));\n            },\n            setup: function (options, type) {\n                options = options || {};\n                var that = this, parameters, operation = that.options[type], data = isFunction(operation.data) ? operation.data(options.data) : operation.data;\n                options = extend(true, {}, operation, options);\n                parameters = extend(true, {}, data, options.data);\n                options.data = that.parameterMap(parameters, type);\n                if (isFunction(options.url)) {\n                    options.url = options.url(parameters);\n                }\n                return options;\n            }\n        });\n        var Cache = Class.extend({\n            init: function () {\n                this._store = {};\n            },\n            add: function (key, data) {\n                if (key !== undefined) {\n                    this._store[stringify(key)] = data;\n                }\n            },\n            find: function (key) {\n                return this._store[stringify(key)];\n            },\n            clear: function () {\n                this._store = {};\n            },\n            remove: function (key) {\n                delete this._store[stringify(key)];\n            }\n        });\n        Cache.create = function (options) {\n            var store = {\n                'inmemory': function () {\n                    return new Cache();\n                }\n            };\n            if (isPlainObject(options) && isFunction(options.find)) {\n                return options;\n            }\n            if (options === true) {\n                return new Cache();\n            }\n            return store[options]();\n        };\n        function serializeRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n            var record, getter, originalName, idx, setters = {}, length;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                record = data[idx];\n                for (getter in getters) {\n                    originalName = fieldNames[getter];\n                    if (originalName && originalName !== getter) {\n                        if (!setters[originalName]) {\n                            setters[originalName] = kendo.setter(originalName);\n                        }\n                        setters[originalName](record, getters[getter](record));\n                        delete record[getter];\n                    }\n                }\n            }\n        }\n        function convertRecords(data, getters, modelInstance, originalFieldNames, fieldNames) {\n            var record, getter, originalName, idx, length;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                record = data[idx];\n                for (getter in getters) {\n                    record[getter] = modelInstance._parse(getter, getters[getter](record));\n                    originalName = fieldNames[getter];\n                    if (originalName && originalName !== getter) {\n                        delete record[originalName];\n                    }\n                }\n            }\n        }\n        function convertGroup(data, getters, modelInstance, originalFieldNames, fieldNames) {\n            var record, idx, fieldName, length;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                record = data[idx];\n                fieldName = originalFieldNames[record.field];\n                if (fieldName && fieldName != record.field) {\n                    record.field = fieldName;\n                }\n                record.value = modelInstance._parse(record.field, record.value);\n                if (record.hasSubgroups) {\n                    convertGroup(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                } else {\n                    convertRecords(record.items, getters, modelInstance, originalFieldNames, fieldNames);\n                }\n            }\n        }\n        function wrapDataAccess(originalFunction, model, converter, getters, originalFieldNames, fieldNames) {\n            return function (data) {\n                data = originalFunction(data);\n                return wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames)(data);\n            };\n        }\n        function wrapDataAccessBase(model, converter, getters, originalFieldNames, fieldNames) {\n            return function (data) {\n                if (data && !isEmptyObject(getters)) {\n                    if (toString.call(data) !== '[object Array]' && !(data instanceof ObservableArray)) {\n                        data = [data];\n                    }\n                    converter(data, getters, new model(), originalFieldNames, fieldNames);\n                }\n                return data || [];\n            };\n        }\n        var DataReader = Class.extend({\n            init: function (schema) {\n                var that = this, member, get, model, base;\n                schema = schema || {};\n                for (member in schema) {\n                    get = schema[member];\n                    that[member] = typeof get === STRING ? getter(get) : get;\n                }\n                base = schema.modelBase || Model;\n                if (isPlainObject(that.model)) {\n                    that.model = model = base.define(that.model);\n                }\n                var dataFunction = proxy(that.data, that);\n                that._dataAccessFunction = dataFunction;\n                if (that.model) {\n                    var groupsFunction = proxy(that.groups, that), serializeFunction = proxy(that.serialize, that), originalFieldNames = {}, getters = {}, serializeGetters = {}, fieldNames = {}, shouldSerialize = false, fieldName, name;\n                    model = that.model;\n                    if (model.fields) {\n                        each(model.fields, function (field, value) {\n                            var fromName;\n                            fieldName = field;\n                            if (isPlainObject(value) && value.field) {\n                                fieldName = value.field;\n                            } else if (typeof value === STRING) {\n                                fieldName = value;\n                            }\n                            if (isPlainObject(value) && value.from) {\n                                fromName = value.from;\n                            }\n                            shouldSerialize = shouldSerialize || fromName && fromName !== field || fieldName !== field;\n                            name = fromName || fieldName;\n                            getters[field] = name.indexOf('.') !== -1 ? getter(name, true) : getter(name);\n                            serializeGetters[field] = getter(field);\n                            originalFieldNames[fromName || fieldName] = field;\n                            fieldNames[field] = fromName || fieldName;\n                        });\n                        if (!schema.serialize && shouldSerialize) {\n                            that.serialize = wrapDataAccess(serializeFunction, model, serializeRecords, serializeGetters, originalFieldNames, fieldNames);\n                        }\n                    }\n                    that._dataAccessFunction = dataFunction;\n                    that._wrapDataAccessBase = wrapDataAccessBase(model, convertRecords, getters, originalFieldNames, fieldNames);\n                    that.data = wrapDataAccess(dataFunction, model, convertRecords, getters, originalFieldNames, fieldNames);\n                    that.groups = wrapDataAccess(groupsFunction, model, convertGroup, getters, originalFieldNames, fieldNames);\n                }\n            },\n            errors: function (data) {\n                return data ? data.errors : null;\n            },\n            parse: identity,\n            data: identity,\n            total: function (data) {\n                return data.length;\n            },\n            groups: identity,\n            aggregates: function () {\n                return {};\n            },\n            serialize: function (data) {\n                return data;\n            }\n        });\n        function fillLastGroup(originalGroup, newGroup) {\n            var currOriginal;\n            var currentNew;\n            if (newGroup.items && newGroup.items.length) {\n                for (var i = 0; i < newGroup.items.length; i++) {\n                    currOriginal = originalGroup.items[i];\n                    currentNew = newGroup.items[i];\n                    if (currOriginal && currentNew) {\n                        if (currOriginal.hasSubgroups) {\n                            fillLastGroup(currOriginal, currentNew);\n                        } else if (currOriginal.field && currOriginal.value == currentNew.value) {\n                            currOriginal.items.push.apply(currOriginal.items, currentNew.items);\n                        } else {\n                            originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                        }\n                    } else if (currentNew) {\n                        originalGroup.items.push.apply(originalGroup.items, [currentNew]);\n                    }\n                }\n            }\n        }\n        function mergeGroups(target, dest, skip, take) {\n            var group, idx = 0, items;\n            while (dest.length && take) {\n                group = dest[idx];\n                items = group.items;\n                var length = items.length;\n                if (target && target.field === group.field && target.value === group.value) {\n                    if (target.hasSubgroups && target.items.length) {\n                        mergeGroups(target.items[target.items.length - 1], group.items, skip, take);\n                    } else {\n                        items = items.slice(skip, skip + take);\n                        target.items = target.items.concat(items);\n                    }\n                    dest.splice(idx--, 1);\n                } else if (group.hasSubgroups && items.length) {\n                    mergeGroups(group, items, skip, take);\n                    if (!group.items.length) {\n                        dest.splice(idx--, 1);\n                    }\n                } else {\n                    items = items.slice(skip, skip + take);\n                    group.items = items;\n                    if (!group.items.length) {\n                        dest.splice(idx--, 1);\n                    }\n                }\n                if (items.length === 0) {\n                    skip -= length;\n                } else {\n                    skip = 0;\n                    take -= items.length;\n                }\n                if (++idx >= dest.length) {\n                    break;\n                }\n            }\n            if (idx < dest.length) {\n                dest.splice(idx, dest.length - idx);\n            }\n        }\n        function flatGroups(groups, indexFunction) {\n            var result = [];\n            var groupsLength = (groups || []).length;\n            var group;\n            var items;\n            var indexFn = isFunction(indexFunction) ? indexFunction : function (array, index) {\n                return array[index];\n            };\n            for (var groupIndex = 0; groupIndex < groupsLength; groupIndex++) {\n                group = indexFn(groups, groupIndex);\n                if (group.hasSubgroups) {\n                    result = result.concat(flatGroups(group.items));\n                } else {\n                    items = group.items;\n                    for (var itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                        result.push(indexFn(items, itemIndex));\n                    }\n                }\n            }\n            return result;\n        }\n        function flattenGroups(data) {\n            var idx, result = [], length, items, itemIndex;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                var group = data.at(idx);\n                if (group.hasSubgroups) {\n                    result = result.concat(flattenGroups(group.items));\n                } else {\n                    items = group.items;\n                    for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\n                        result.push(items.at(itemIndex));\n                    }\n                }\n            }\n            return result;\n        }\n        function wrapGroupItems(data, model) {\n            var idx, length, group;\n            if (model) {\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    group = data.at(idx);\n                    if (group.hasSubgroups) {\n                        wrapGroupItems(group.items, model);\n                    } else {\n                        group.items = new LazyObservableArray(group.items, model, group.items._events);\n                    }\n                }\n            }\n        }\n        function eachGroupItems(data, func) {\n            for (var idx = 0; idx < data.length; idx++) {\n                if (data[idx].hasSubgroups) {\n                    if (eachGroupItems(data[idx].items, func)) {\n                        return true;\n                    }\n                } else if (func(data[idx].items, data[idx])) {\n                    return true;\n                }\n            }\n        }\n        function replaceInRanges(ranges, data, item, observable) {\n            for (var idx = 0; idx < ranges.length; idx++) {\n                if (ranges[idx].data === data) {\n                    break;\n                }\n                if (replaceInRange(ranges[idx].data, item, observable)) {\n                    break;\n                }\n            }\n        }\n        function replaceInRange(items, item, observable) {\n            for (var idx = 0, length = items.length; idx < length; idx++) {\n                if (items[idx] && items[idx].hasSubgroups) {\n                    return replaceInRange(items[idx].items, item, observable);\n                } else if (items[idx] === item || items[idx] === observable) {\n                    items[idx] = observable;\n                    return true;\n                }\n            }\n        }\n        function replaceWithObservable(view, data, ranges, type, serverGrouping) {\n            for (var viewIndex = 0, length = view.length; viewIndex < length; viewIndex++) {\n                var item = view[viewIndex];\n                if (!item || item instanceof type) {\n                    continue;\n                }\n                if (item.hasSubgroups !== undefined && !serverGrouping) {\n                    replaceWithObservable(item.items, data, ranges, type, serverGrouping);\n                } else {\n                    for (var idx = 0; idx < data.length; idx++) {\n                        if (data[idx] === item) {\n                            view[viewIndex] = data.at(idx);\n                            replaceInRanges(ranges, data, item, view[viewIndex]);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        function removeModel(data, model) {\n            var length = data.length;\n            var dataItem;\n            var idx;\n            for (idx = 0; idx < length; idx++) {\n                dataItem = data[idx];\n                if (dataItem.uid && dataItem.uid == model.uid) {\n                    data.splice(idx, 1);\n                    return dataItem;\n                }\n            }\n        }\n        function indexOfPristineModel(data, model) {\n            if (model) {\n                return indexOf(data, function (item) {\n                    return item.uid && item.uid == model.uid || item[model.idField] === model.id && model.id !== model._defaultId;\n                });\n            }\n            return -1;\n        }\n        function indexOfModel(data, model) {\n            if (model) {\n                return indexOf(data, function (item) {\n                    return item.uid == model.uid;\n                });\n            }\n            return -1;\n        }\n        function indexOf(data, comparer) {\n            var idx, length;\n            for (idx = 0, length = data.length; idx < length; idx++) {\n                if (comparer(data[idx])) {\n                    return idx;\n                }\n            }\n            return -1;\n        }\n        function fieldNameFromModel(fields, name) {\n            if (fields && !isEmptyObject(fields)) {\n                var descriptor = fields[name];\n                var fieldName;\n                if (isPlainObject(descriptor)) {\n                    fieldName = descriptor.from || descriptor.field || name;\n                } else {\n                    fieldName = fields[name] || name;\n                }\n                if (isFunction(fieldName)) {\n                    return name;\n                }\n                return fieldName;\n            }\n            return name;\n        }\n        function convertFilterDescriptorsField(descriptor, model) {\n            var idx, length, target = {};\n            for (var field in descriptor) {\n                if (field !== 'filters') {\n                    target[field] = descriptor[field];\n                }\n            }\n            if (descriptor.filters) {\n                target.filters = [];\n                for (idx = 0, length = descriptor.filters.length; idx < length; idx++) {\n                    target.filters[idx] = convertFilterDescriptorsField(descriptor.filters[idx], model);\n                }\n            } else {\n                target.field = fieldNameFromModel(model.fields, target.field);\n            }\n            return target;\n        }\n        function convertDescriptorsField(descriptors, model) {\n            var idx, length, result = [], target, descriptor;\n            for (idx = 0, length = descriptors.length; idx < length; idx++) {\n                target = {};\n                descriptor = descriptors[idx];\n                for (var field in descriptor) {\n                    target[field] = descriptor[field];\n                }\n                target.field = fieldNameFromModel(model.fields, target.field);\n                if (target.aggregates && isArray(target.aggregates)) {\n                    target.aggregates = convertDescriptorsField(target.aggregates, model);\n                }\n                result.push(target);\n            }\n            return result;\n        }\n        var DataSource = Observable.extend({\n            init: function (options) {\n                var that = this, model, data;\n                if (options) {\n                    data = options.data;\n                }\n                options = that.options = extend({}, that.options, options);\n                that._map = {};\n                that._prefetch = {};\n                that._data = [];\n                that._pristineData = [];\n                that._ranges = [];\n                that._view = [];\n                that._pristineTotal = 0;\n                that._destroyed = [];\n                that._pageSize = options.pageSize;\n                that._page = options.page || (options.pageSize ? 1 : undefined);\n                that._sort = normalizeSort(options.sort);\n                that._filter = normalizeFilter(options.filter);\n                that._group = normalizeGroup(options.group);\n                that._aggregate = options.aggregate;\n                that._total = options.total;\n                that._shouldDetachObservableParents = true;\n                Observable.fn.init.call(that);\n                that.transport = Transport.create(options, data, that);\n                if (isFunction(that.transport.push)) {\n                    that.transport.push({\n                        pushCreate: proxy(that._pushCreate, that),\n                        pushUpdate: proxy(that._pushUpdate, that),\n                        pushDestroy: proxy(that._pushDestroy, that)\n                    });\n                }\n                if (options.offlineStorage != null) {\n                    if (typeof options.offlineStorage == 'string') {\n                        var key = options.offlineStorage;\n                        that._storage = {\n                            getItem: function () {\n                                return JSON.parse(localStorage.getItem(key));\n                            },\n                            setItem: function (item) {\n                                localStorage.setItem(key, stringify(that.reader.serialize(item)));\n                            }\n                        };\n                    } else {\n                        that._storage = options.offlineStorage;\n                    }\n                }\n                that.reader = new kendo.data.readers[options.schema.type || 'json'](options.schema);\n                model = that.reader.model || {};\n                that._detachObservableParents();\n                that._data = that._observe(that._data);\n                that._online = true;\n                that.bind([\n                    'push',\n                    ERROR,\n                    CHANGE,\n                    REQUESTSTART,\n                    SYNC,\n                    REQUESTEND,\n                    PROGRESS\n                ], options);\n            },\n            options: {\n                data: null,\n                schema: { modelBase: Model },\n                offlineStorage: null,\n                serverSorting: false,\n                serverPaging: false,\n                serverFiltering: false,\n                serverGrouping: false,\n                serverAggregates: false,\n                batch: false,\n                inPlaceSort: false\n            },\n            clone: function () {\n                return this;\n            },\n            online: function (value) {\n                if (value !== undefined) {\n                    if (this._online != value) {\n                        this._online = value;\n                        if (value) {\n                            return this.sync();\n                        }\n                    }\n                    return $.Deferred().resolve().promise();\n                } else {\n                    return this._online;\n                }\n            },\n            offlineData: function (state) {\n                if (this.options.offlineStorage == null) {\n                    return null;\n                }\n                if (state !== undefined) {\n                    return this._storage.setItem(state);\n                }\n                return this._storage.getItem() || [];\n            },\n            _isServerGrouped: function () {\n                var group = this.group() || [];\n                return this.options.serverGrouping && group.length;\n            },\n            _pushCreate: function (result) {\n                this._push(result, 'pushCreate');\n            },\n            _pushUpdate: function (result) {\n                this._push(result, 'pushUpdate');\n            },\n            _pushDestroy: function (result) {\n                this._push(result, 'pushDestroy');\n            },\n            _push: function (result, operation) {\n                var data = this._readData(result);\n                if (!data) {\n                    data = result;\n                }\n                this[operation](data);\n            },\n            _flatData: function (data, skip) {\n                if (data) {\n                    if (this._isServerGrouped()) {\n                        return flattenGroups(data);\n                    }\n                    if (!skip) {\n                        for (var idx = 0; idx < data.length; idx++) {\n                            data.at(idx);\n                        }\n                    }\n                }\n                return data;\n            },\n            parent: noop,\n            get: function (id) {\n                var idx, length, data = this._flatData(this._data, this.options.useRanges);\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].id == id) {\n                        return data[idx];\n                    }\n                }\n            },\n            getByUid: function (id) {\n                return this._getByUid(id, this._data);\n            },\n            _getByUid: function (id, dataItems) {\n                var idx, length, data = this._flatData(dataItems, this.options.useRanges);\n                if (!data) {\n                    return;\n                }\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].uid == id) {\n                        return data[idx];\n                    }\n                }\n            },\n            indexOf: function (model) {\n                return indexOfModel(this._data, model);\n            },\n            at: function (index) {\n                return this._data.at(index);\n            },\n            data: function (value) {\n                var that = this;\n                if (value !== undefined) {\n                    that._detachObservableParents();\n                    that._data = this._observe(value);\n                    that._pristineData = value.slice(0);\n                    that._storeData();\n                    that._ranges = [];\n                    that.trigger('reset');\n                    that._addRange(that._data);\n                    that._total = that._data.length;\n                    that._pristineTotal = that._total;\n                    that._process(that._data);\n                } else {\n                    if (that._data) {\n                        for (var idx = 0; idx < that._data.length; idx++) {\n                            that._data.at(idx);\n                        }\n                    }\n                    return that._data;\n                }\n            },\n            view: function (value) {\n                if (value === undefined) {\n                    return this._view;\n                } else {\n                    this._view = this._observeView(value);\n                }\n            },\n            _observeView: function (data) {\n                var that = this;\n                replaceWithObservable(data, that._data, that._ranges, that.reader.model || ObservableObject, that._isServerGrouped());\n                var view = new LazyObservableArray(data, that.reader.model);\n                view.parent = function () {\n                    return that.parent();\n                };\n                return view;\n            },\n            flatView: function () {\n                var groups = this.group() || [];\n                if (groups.length) {\n                    return flattenGroups(this._view);\n                } else {\n                    return this._view;\n                }\n            },\n            add: function (model) {\n                return this.insert(this._data.length, model);\n            },\n            _createNewModel: function (model) {\n                if (this.reader.model) {\n                    return new this.reader.model(model);\n                }\n                if (model instanceof ObservableObject) {\n                    return model;\n                }\n                return new ObservableObject(model);\n            },\n            insert: function (index, model) {\n                if (!model) {\n                    model = index;\n                    index = 0;\n                }\n                if (!(model instanceof Model)) {\n                    model = this._createNewModel(model);\n                }\n                if (this._isServerGrouped()) {\n                    this._data.splice(index, 0, this._wrapInEmptyGroup(model));\n                } else {\n                    this._data.splice(index, 0, model);\n                }\n                this._insertModelInRange(index, model);\n                return model;\n            },\n            pushInsert: function (index, items) {\n                var that = this;\n                var rangeSpan = that._getCurrentRangeSpan();\n                if (!items) {\n                    items = index;\n                    index = 0;\n                }\n                if (!isArray(items)) {\n                    items = [items];\n                }\n                var pushed = [];\n                var autoSync = this.options.autoSync;\n                this.options.autoSync = false;\n                try {\n                    for (var idx = 0; idx < items.length; idx++) {\n                        var item = items[idx];\n                        var result = this.insert(index, item);\n                        pushed.push(result);\n                        var pristine = result.toJSON();\n                        if (this._isServerGrouped()) {\n                            pristine = this._wrapInEmptyGroup(pristine);\n                        }\n                        this._pristineData.push(pristine);\n                        if (rangeSpan && rangeSpan.length) {\n                            $(rangeSpan).last()[0].pristineData.push(pristine);\n                        }\n                        index++;\n                    }\n                } finally {\n                    this.options.autoSync = autoSync;\n                }\n                if (pushed.length) {\n                    this.trigger('push', {\n                        type: 'create',\n                        items: pushed\n                    });\n                }\n            },\n            pushCreate: function (items) {\n                this.pushInsert(this._data.length, items);\n            },\n            pushUpdate: function (items) {\n                if (!isArray(items)) {\n                    items = [items];\n                }\n                var pushed = [];\n                for (var idx = 0; idx < items.length; idx++) {\n                    var item = items[idx];\n                    var model = this._createNewModel(item);\n                    var target = this.get(model.id);\n                    if (target) {\n                        pushed.push(target);\n                        target.accept(item);\n                        target.trigger(CHANGE);\n                        this._updatePristineForModel(target, item);\n                    } else {\n                        this.pushCreate(item);\n                    }\n                }\n                if (pushed.length) {\n                    this.trigger('push', {\n                        type: 'update',\n                        items: pushed\n                    });\n                }\n            },\n            pushDestroy: function (items) {\n                var pushed = this._removeItems(items);\n                if (pushed.length) {\n                    this.trigger('push', {\n                        type: 'destroy',\n                        items: pushed\n                    });\n                }\n            },\n            _removeItems: function (items, removePristine) {\n                if (!isArray(items)) {\n                    items = [items];\n                }\n                var shouldRemovePristine = typeof removePristine !== 'undefined' ? removePristine : true;\n                var destroyed = [];\n                var autoSync = this.options.autoSync;\n                this.options.autoSync = false;\n                try {\n                    for (var idx = 0; idx < items.length; idx++) {\n                        var item = items[idx];\n                        var model = this._createNewModel(item);\n                        var found = false;\n                        this._eachItem(this._data, function (items) {\n                            for (var idx = 0; idx < items.length; idx++) {\n                                var item = items.at(idx);\n                                if (item.id === model.id) {\n                                    destroyed.push(item);\n                                    items.splice(idx, 1);\n                                    found = true;\n                                    break;\n                                }\n                            }\n                        });\n                        if (found && shouldRemovePristine) {\n                            this._removePristineForModel(model);\n                            this._destroyed.pop();\n                        }\n                    }\n                } finally {\n                    this.options.autoSync = autoSync;\n                }\n                return destroyed;\n            },\n            remove: function (model) {\n                var result, that = this, hasGroups = that._isServerGrouped();\n                this._eachItem(that._data, function (items) {\n                    result = removeModel(items, model);\n                    if (result && hasGroups) {\n                        if (!result.isNew || !result.isNew()) {\n                            that._destroyed.push(result);\n                        }\n                        return true;\n                    }\n                });\n                this._removeModelFromRanges(model);\n                return model;\n            },\n            destroyed: function () {\n                return this._destroyed;\n            },\n            created: function () {\n                var idx, length, result = [], data = this._flatData(this._data, this.options.useRanges);\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].isNew && data[idx].isNew()) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            updated: function () {\n                var idx, length, result = [], data = this._flatData(this._data, this.options.useRanges);\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].isNew && !data[idx].isNew() && data[idx].dirty) {\n                        result.push(data[idx]);\n                    }\n                }\n                return result;\n            },\n            sync: function () {\n                var that = this, created = [], updated = [], destroyed = that._destroyed;\n                var promise = $.Deferred().resolve().promise();\n                if (that.online()) {\n                    if (!that.reader.model) {\n                        return promise;\n                    }\n                    created = that.created();\n                    updated = that.updated();\n                    var promises = [];\n                    if (that.options.batch && that.transport.submit) {\n                        promises = that._sendSubmit(created, updated, destroyed);\n                    } else {\n                        promises.push.apply(promises, that._send('create', created));\n                        promises.push.apply(promises, that._send('update', updated));\n                        promises.push.apply(promises, that._send('destroy', destroyed));\n                    }\n                    promise = $.when.apply(null, promises).then(function () {\n                        var idx, length;\n                        for (idx = 0, length = arguments.length; idx < length; idx++) {\n                            if (arguments[idx]) {\n                                that._accept(arguments[idx]);\n                            }\n                        }\n                        that._storeData(true);\n                        that._syncEnd();\n                        that._change({ action: 'sync' });\n                        that.trigger(SYNC);\n                    });\n                } else {\n                    that._storeData(true);\n                    that._syncEnd();\n                    that._change({ action: 'sync' });\n                }\n                return promise;\n            },\n            _syncEnd: noop,\n            cancelChanges: function (model) {\n                var that = this;\n                if (model instanceof kendo.data.Model) {\n                    that._cancelModel(model);\n                } else {\n                    that._destroyed = [];\n                    that._detachObservableParents();\n                    that._data = that._observe(that._pristineData);\n                    if (that.options.serverPaging) {\n                        that._total = that._pristineTotal;\n                    }\n                    that._ranges = [];\n                    that._addRange(that._data, 0);\n                    that._changesCanceled();\n                    that._change();\n                    that._markOfflineUpdatesAsDirty();\n                }\n            },\n            _changesCanceled: noop,\n            _markOfflineUpdatesAsDirty: function () {\n                var that = this;\n                if (that.options.offlineStorage != null) {\n                    that._eachItem(that._data, function (items) {\n                        for (var idx = 0; idx < items.length; idx++) {\n                            var item = items.at(idx);\n                            if (item.__state__ == 'update' || item.__state__ == 'create') {\n                                item.dirty = true;\n                            }\n                        }\n                    });\n                }\n            },\n            hasChanges: function () {\n                var idx, length, data = this._flatData(this._data, this.options.useRanges);\n                if (this._destroyed.length) {\n                    return true;\n                }\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    if (data[idx].isNew && data[idx].isNew() || data[idx].dirty) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _accept: function (result) {\n                var that = this, models = result.models, response = result.response, idx = 0, serverGroup = that._isServerGrouped(), pristine = that._pristineData, type = result.type, length;\n                that.trigger(REQUESTEND, {\n                    response: response,\n                    type: type\n                });\n                if (response && !isEmptyObject(response)) {\n                    response = that.reader.parse(response);\n                    if (that._handleCustomErrors(response)) {\n                        return;\n                    }\n                    response = that.reader.data(response);\n                    if (!isArray(response)) {\n                        response = [response];\n                    }\n                } else {\n                    response = $.map(models, function (model) {\n                        return model.toJSON();\n                    });\n                }\n                if (type === 'destroy') {\n                    that._destroyed = [];\n                }\n                for (idx = 0, length = models.length; idx < length; idx++) {\n                    if (type !== 'destroy') {\n                        models[idx].accept(response[idx]);\n                        if (type === 'create') {\n                            pristine.push(serverGroup ? that._wrapInEmptyGroup(models[idx].toJSON()) : response[idx]);\n                        } else if (type === 'update') {\n                            that._updatePristineForModel(models[idx], response[idx]);\n                        }\n                    } else {\n                        that._removePristineForModel(models[idx]);\n                    }\n                }\n            },\n            _updatePristineForModel: function (model, values) {\n                this._executeOnPristineForModel(model, function (index, items) {\n                    kendo.deepExtend(items[index], values);\n                });\n            },\n            _executeOnPristineForModel: function (model, callback) {\n                this._eachPristineItem(function (items) {\n                    var index = indexOfPristineModel(items, model);\n                    if (index > -1) {\n                        callback(index, items);\n                        return true;\n                    }\n                });\n            },\n            _removePristineForModel: function (model) {\n                this._executeOnPristineForModel(model, function (index, items) {\n                    items.splice(index, 1);\n                });\n            },\n            _readData: function (data) {\n                var read = !this._isServerGrouped() ? this.reader.data : this.reader.groups;\n                return read.call(this.reader, data);\n            },\n            _eachPristineItem: function (callback) {\n                var that = this;\n                var options = that.options;\n                var rangeSpan = that._getCurrentRangeSpan();\n                that._eachItem(that._pristineData, callback);\n                if (options.serverPaging && options.useRanges) {\n                    each(rangeSpan, function (i, range) {\n                        that._eachItem(range.pristineData, callback);\n                    });\n                }\n            },\n            _eachItem: function (data, callback) {\n                if (data && data.length) {\n                    if (this._isServerGrouped()) {\n                        eachGroupItems(data, callback);\n                    } else {\n                        callback(data);\n                    }\n                }\n            },\n            _pristineForModel: function (model) {\n                var pristine, idx, callback = function (items) {\n                        idx = indexOfPristineModel(items, model);\n                        if (idx > -1) {\n                            pristine = items[idx];\n                            return true;\n                        }\n                    };\n                this._eachPristineItem(callback);\n                return pristine;\n            },\n            _cancelModel: function (model) {\n                var that = this;\n                var pristine = this._pristineForModel(model);\n                this._eachItem(this._data, function (items) {\n                    var idx = indexOfModel(items, model);\n                    if (idx >= 0) {\n                        if (pristine && (!model.isNew() || pristine.__state__)) {\n                            items[idx].accept(pristine);\n                            if (pristine.__state__ == 'update') {\n                                items[idx].dirty = true;\n                            }\n                        } else {\n                            that._modelCanceled(model);\n                            items.splice(idx, 1);\n                            that._removeModelFromRanges(model);\n                        }\n                    }\n                });\n            },\n            _modelCanceled: noop,\n            _submit: function (promises, data) {\n                var that = this;\n                that.trigger(REQUESTSTART, { type: 'submit' });\n                that.trigger(PROGRESS);\n                that.transport.submit(extend({\n                    success: function (response, type) {\n                        var promise = $.grep(promises, function (x) {\n                            return x.type == type;\n                        })[0];\n                        if (promise) {\n                            promise.resolve({\n                                response: response,\n                                models: promise.models,\n                                type: type\n                            });\n                        }\n                    },\n                    error: function (response, status, error) {\n                        for (var idx = 0; idx < promises.length; idx++) {\n                            promises[idx].reject(response);\n                        }\n                        that.error(response, status, error);\n                    }\n                }, data));\n            },\n            _sendSubmit: function (created, updated, destroyed) {\n                var that = this, promises = [];\n                if (that.options.batch) {\n                    if (created.length) {\n                        promises.push($.Deferred(function (deferred) {\n                            deferred.type = 'create';\n                            deferred.models = created;\n                        }));\n                    }\n                    if (updated.length) {\n                        promises.push($.Deferred(function (deferred) {\n                            deferred.type = 'update';\n                            deferred.models = updated;\n                        }));\n                    }\n                    if (destroyed.length) {\n                        promises.push($.Deferred(function (deferred) {\n                            deferred.type = 'destroy';\n                            deferred.models = destroyed;\n                        }));\n                    }\n                    that._submit(promises, {\n                        data: {\n                            created: that.reader.serialize(toJSON(created)),\n                            updated: that.reader.serialize(toJSON(updated)),\n                            destroyed: that.reader.serialize(toJSON(destroyed))\n                        }\n                    });\n                }\n                return promises;\n            },\n            _promise: function (data, models, type) {\n                var that = this;\n                return $.Deferred(function (deferred) {\n                    that.trigger(REQUESTSTART, { type: type });\n                    that.trigger(PROGRESS);\n                    that.transport[type].call(that.transport, extend({\n                        success: function (response) {\n                            deferred.resolve({\n                                response: response,\n                                models: models,\n                                type: type\n                            });\n                        },\n                        error: function (response, status, error) {\n                            deferred.reject(response);\n                            that.error(response, status, error);\n                        }\n                    }, data));\n                }).promise();\n            },\n            _send: function (method, data) {\n                var that = this, idx, length, promises = [], converted = that.reader.serialize(toJSON(data));\n                if (that.options.batch) {\n                    if (data.length) {\n                        promises.push(that._promise({ data: { models: converted } }, data, method));\n                    }\n                } else {\n                    for (idx = 0, length = data.length; idx < length; idx++) {\n                        promises.push(that._promise({ data: converted[idx] }, [data[idx]], method));\n                    }\n                }\n                return promises;\n            },\n            read: function (data) {\n                var that = this, params = that._params(data);\n                var deferred = $.Deferred();\n                that._queueRequest(params, function () {\n                    var isPrevented = that.trigger(REQUESTSTART, { type: 'read' });\n                    if (!isPrevented) {\n                        that.trigger(PROGRESS);\n                        that._ranges = [];\n                        that.trigger('reset');\n                        if (that.online()) {\n                            that.transport.read({\n                                data: params,\n                                success: function (data) {\n                                    that._ranges = [];\n                                    that.success(data, params);\n                                    deferred.resolve();\n                                },\n                                error: function () {\n                                    var args = slice.call(arguments);\n                                    that.error.apply(that, args);\n                                    deferred.reject.apply(deferred, args);\n                                }\n                            });\n                        } else if (that.options.offlineStorage != null) {\n                            that.success(that.offlineData(), params);\n                            deferred.resolve();\n                        }\n                    } else {\n                        that._dequeueRequest();\n                        deferred.resolve(isPrevented);\n                    }\n                });\n                return deferred.promise();\n            },\n            _readAggregates: function (data) {\n                return this.reader.aggregates(data);\n            },\n            success: function (data) {\n                var that = this, options = that.options, items, replaceSubset;\n                that.trigger(REQUESTEND, {\n                    response: data,\n                    type: 'read'\n                });\n                if (that.online()) {\n                    data = that.reader.parse(data);\n                    if (that._handleCustomErrors(data)) {\n                        that._dequeueRequest();\n                        return;\n                    }\n                    that._total = that.reader.total(data);\n                    if (that._pageSize > that._total) {\n                        that._pageSize = that._total;\n                        if (that.options.pageSize && that.options.pageSize > that._pageSize) {\n                            that._pageSize = that.options.pageSize;\n                        }\n                    }\n                    if (that._aggregate && options.serverAggregates) {\n                        that._aggregateResult = that._readAggregates(data);\n                    }\n                    data = that._readData(data);\n                    that._destroyed = [];\n                } else {\n                    data = that._readData(data);\n                    items = [];\n                    var itemIds = {};\n                    var model = that.reader.model;\n                    var idField = model ? model.idField : 'id';\n                    var idx;\n                    for (idx = 0; idx < this._destroyed.length; idx++) {\n                        var id = this._destroyed[idx][idField];\n                        itemIds[id] = id;\n                    }\n                    for (idx = 0; idx < data.length; idx++) {\n                        var item = data[idx];\n                        var state = item.__state__;\n                        if (state == 'destroy') {\n                            if (!itemIds[item[idField]]) {\n                                this._destroyed.push(this._createNewModel(item));\n                            }\n                        } else {\n                            items.push(item);\n                        }\n                    }\n                    data = items;\n                    that._total = data.length;\n                }\n                that._pristineTotal = that._total;\n                replaceSubset = that._skip && that._data.length && that._skip < that._data.length;\n                if (that.options.endless) {\n                    if (replaceSubset) {\n                        that._pristineData.splice(that._skip, that._pristineData.length);\n                    }\n                    items = data.slice(0);\n                    for (var j = 0; j < items.length; j++) {\n                        that._pristineData.push(items[j]);\n                    }\n                } else {\n                    that._pristineData = data.slice(0);\n                }\n                that._detachObservableParents();\n                if (that.options.endless) {\n                    that._data.unbind(CHANGE, that._changeHandler);\n                    if (that._isServerGrouped() && that._data[that._data.length - 1].value === data[0].value) {\n                        fillLastGroup(that._data[that._data.length - 1], data[0]);\n                        data.shift();\n                    }\n                    data = that._observe(data);\n                    if (replaceSubset) {\n                        that._data.splice(that._skip, that._data.length);\n                    }\n                    for (var i = 0; i < data.length; i++) {\n                        that._data.push(data[i]);\n                    }\n                    that._data.bind(CHANGE, that._changeHandler);\n                } else {\n                    that._data = that._observe(data);\n                }\n                that._markOfflineUpdatesAsDirty();\n                that._storeData();\n                that._addRange(that._data);\n                that._process(that._data);\n                that._dequeueRequest();\n            },\n            _detachObservableParents: function () {\n                if (this._data && this._shouldDetachObservableParents) {\n                    for (var idx = 0; idx < this._data.length; idx++) {\n                        if (this._data[idx].parent) {\n                            this._data[idx].parent = noop;\n                        }\n                    }\n                }\n            },\n            _storeData: function (updatePristine) {\n                var serverGrouping = this._isServerGrouped();\n                var model = this.reader.model;\n                function items(data) {\n                    var state = [];\n                    for (var idx = 0; idx < data.length; idx++) {\n                        var dataItem = data.at(idx);\n                        var item = dataItem.toJSON();\n                        if (serverGrouping && dataItem.items) {\n                            item.items = items(dataItem.items);\n                        } else {\n                            item.uid = dataItem.uid;\n                            if (model) {\n                                if (dataItem.isNew()) {\n                                    item.__state__ = 'create';\n                                } else if (dataItem.dirty) {\n                                    item.__state__ = 'update';\n                                }\n                            }\n                        }\n                        state.push(item);\n                    }\n                    return state;\n                }\n                if (this.options.offlineStorage != null) {\n                    var state = items(this._data);\n                    var destroyed = [];\n                    for (var idx = 0; idx < this._destroyed.length; idx++) {\n                        var item = this._destroyed[idx].toJSON();\n                        item.__state__ = 'destroy';\n                        destroyed.push(item);\n                    }\n                    this.offlineData(state.concat(destroyed));\n                    if (updatePristine) {\n                        this._pristineData = this.reader.reader ? this.reader.reader._wrapDataAccessBase(state) : this.reader._wrapDataAccessBase(state);\n                    }\n                }\n            },\n            _addRange: function (data, skip) {\n                var that = this, start = typeof skip !== 'undefined' ? skip : that._skip || 0, end = start + that._flatData(data, true).length;\n                that._ranges.push({\n                    start: start,\n                    end: end,\n                    data: data,\n                    pristineData: data.toJSON(),\n                    timestamp: that._timeStamp()\n                });\n                that._sortRanges();\n            },\n            _sortRanges: function () {\n                this._ranges.sort(function (x, y) {\n                    return x.start - y.start;\n                });\n            },\n            error: function (xhr, status, errorThrown) {\n                this._dequeueRequest();\n                this.trigger(REQUESTEND, {});\n                this.trigger(ERROR, {\n                    xhr: xhr,\n                    status: status,\n                    errorThrown: errorThrown\n                });\n            },\n            _params: function (data) {\n                var that = this, options = extend({\n                        take: that.take(),\n                        skip: that.skip(),\n                        page: that.page(),\n                        pageSize: that.pageSize(),\n                        sort: that._sort,\n                        filter: that._filter,\n                        group: that._group,\n                        aggregate: that._aggregate\n                    }, data);\n                if (!that.options.serverPaging) {\n                    delete options.take;\n                    delete options.skip;\n                    delete options.page;\n                    delete options.pageSize;\n                }\n                if (!that.options.serverGrouping) {\n                    delete options.group;\n                } else if (that.reader.model && options.group) {\n                    options.group = convertDescriptorsField(options.group, that.reader.model);\n                }\n                if (!that.options.serverFiltering) {\n                    delete options.filter;\n                } else if (that.reader.model && options.filter) {\n                    options.filter = convertFilterDescriptorsField(options.filter, that.reader.model);\n                }\n                if (!that.options.serverSorting) {\n                    delete options.sort;\n                } else if (that.reader.model && options.sort) {\n                    options.sort = convertDescriptorsField(options.sort, that.reader.model);\n                }\n                if (!that.options.serverAggregates) {\n                    delete options.aggregate;\n                } else if (that.reader.model && options.aggregate) {\n                    options.aggregate = convertDescriptorsField(options.aggregate, that.reader.model);\n                }\n                return options;\n            },\n            _queueRequest: function (options, callback) {\n                var that = this;\n                if (!that._requestInProgress) {\n                    that._requestInProgress = true;\n                    that._pending = undefined;\n                    callback();\n                } else {\n                    that._pending = {\n                        callback: proxy(callback, that),\n                        options: options\n                    };\n                }\n            },\n            _dequeueRequest: function () {\n                var that = this;\n                that._requestInProgress = false;\n                if (that._pending) {\n                    that._queueRequest(that._pending.options, that._pending.callback);\n                }\n            },\n            _handleCustomErrors: function (response) {\n                if (this.reader.errors) {\n                    var errors = this.reader.errors(response);\n                    if (errors) {\n                        this.trigger(ERROR, {\n                            xhr: null,\n                            status: 'customerror',\n                            errorThrown: 'custom error',\n                            errors: errors\n                        });\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _shouldWrap: function (data) {\n                var model = this.reader.model;\n                if (model && data.length) {\n                    return !(data[0] instanceof model);\n                }\n                return false;\n            },\n            _observe: function (data) {\n                var that = this, model = that.reader.model;\n                that._shouldDetachObservableParents = true;\n                if (data instanceof ObservableArray) {\n                    that._shouldDetachObservableParents = false;\n                    if (that._shouldWrap(data)) {\n                        data.type = that.reader.model;\n                        data.wrapAll(data, data);\n                    }\n                } else {\n                    var arrayType = that.pageSize() && !that.options.serverPaging ? LazyObservableArray : ObservableArray;\n                    data = new arrayType(data, that.reader.model);\n                    data.parent = function () {\n                        return that.parent();\n                    };\n                }\n                if (that._isServerGrouped()) {\n                    wrapGroupItems(data, model);\n                }\n                if (that._changeHandler && that._data && that._data instanceof ObservableArray && !(that.options.useRanges && that.options.serverPaging)) {\n                    that._data.unbind(CHANGE, that._changeHandler);\n                } else {\n                    that._changeHandler = proxy(that._change, that);\n                }\n                return data.bind(CHANGE, that._changeHandler);\n            },\n            _updateTotalForAction: function (action, items) {\n                var that = this;\n                var total = parseInt(that._total, 10);\n                if (!isNumber(that._total)) {\n                    total = parseInt(that._pristineTotal, 10);\n                }\n                if (action === 'add') {\n                    total += items.length;\n                } else if (action === 'remove') {\n                    total -= items.length;\n                } else if (action !== 'itemchange' && action !== 'sync' && !that.options.serverPaging) {\n                    total = that._pristineTotal;\n                } else if (action === 'sync') {\n                    total = that._pristineTotal = parseInt(that._total, 10);\n                }\n                that._total = total;\n            },\n            _change: function (e) {\n                var that = this, idx, length, action = e ? e.action : '';\n                if (action === 'remove') {\n                    for (idx = 0, length = e.items.length; idx < length; idx++) {\n                        if (!e.items[idx].isNew || !e.items[idx].isNew()) {\n                            that._destroyed.push(e.items[idx]);\n                        }\n                    }\n                }\n                if (that.options.autoSync && (action === 'add' || action === 'remove' || action === 'itemchange')) {\n                    var handler = function (args) {\n                        if (args.action === 'sync') {\n                            that.unbind('change', handler);\n                            that._updateTotalForAction(action, e.items);\n                        }\n                    };\n                    that.first('change', handler);\n                    that.sync();\n                } else {\n                    that._updateTotalForAction(action, e ? e.items : []);\n                    that._process(that._data, e);\n                }\n            },\n            _calculateAggregates: function (data, options) {\n                options = options || {};\n                var query = new Query(data), aggregates = options.aggregate, filter = options.filter;\n                if (filter) {\n                    query = query.filter(filter);\n                }\n                return query.aggregate(aggregates);\n            },\n            _process: function (data, e) {\n                var that = this, options = {}, result;\n                if (that.options.serverPaging !== true) {\n                    options.skip = that._skip;\n                    options.take = that._take || that._pageSize;\n                    if (options.skip === undefined && that._page !== undefined && that._pageSize !== undefined) {\n                        options.skip = (that._page - 1) * that._pageSize;\n                    }\n                    if (that.options.useRanges) {\n                        options.skip = that.currentRangeStart();\n                    }\n                }\n                if (that.options.serverSorting !== true) {\n                    options.sort = that._sort;\n                }\n                if (that.options.serverFiltering !== true) {\n                    options.filter = that._filter;\n                }\n                if (that.options.serverGrouping !== true) {\n                    options.group = that._group;\n                }\n                if (that.options.serverAggregates !== true) {\n                    options.aggregate = that._aggregate;\n                }\n                if (that.options.serverGrouping) {\n                    that._clearEmptyGroups(data);\n                }\n                result = that._queryProcess(data, options);\n                if (that.options.serverAggregates !== true) {\n                    that._aggregateResult = that._calculateAggregates(result.dataToAggregate || data, options);\n                }\n                that.view(result.data);\n                that._setFilterTotal(result.total, false);\n                e = e || {};\n                e.items = e.items || that._view;\n                that.trigger(CHANGE, e);\n            },\n            _clearEmptyGroups: function (data) {\n                for (var idx = data.length - 1; idx >= 0; idx--) {\n                    var group = data[idx];\n                    if (group.hasSubgroups) {\n                        this._clearEmptyGroups(group.items);\n                    } else {\n                        if (group.items && !group.items.length) {\n                            splice.apply(group.parent(), [\n                                idx,\n                                1\n                            ]);\n                        }\n                    }\n                }\n            },\n            _queryProcess: function (data, options) {\n                if (this.options.inPlaceSort) {\n                    return Query.process(data, options, this.options.inPlaceSort);\n                } else {\n                    return Query.process(data, options);\n                }\n            },\n            _mergeState: function (options) {\n                var that = this;\n                if (options !== undefined) {\n                    that._pageSize = options.pageSize;\n                    that._page = options.page;\n                    that._sort = options.sort;\n                    that._filter = options.filter;\n                    that._group = options.group;\n                    that._aggregate = options.aggregate;\n                    that._skip = that._currentRangeStart = options.skip;\n                    that._take = options.take;\n                    if (that._skip === undefined) {\n                        that._skip = that._currentRangeStart = that.skip();\n                        options.skip = that.skip();\n                    }\n                    if (that._take === undefined && that._pageSize !== undefined) {\n                        that._take = that._pageSize;\n                        options.take = that._take;\n                    }\n                    if (options.sort) {\n                        that._sort = options.sort = normalizeSort(options.sort);\n                        that._sortFields = sortFields(options.sort);\n                    }\n                    if (options.filter) {\n                        that._filter = options.filter = that.options.accentFoldingFiltering && !$.isEmptyObject(options.filter) ? $.extend({}, normalizeFilter(options.filter), { accentFoldingFiltering: that.options.accentFoldingFiltering }) : normalizeFilter(options.filter);\n                    }\n                    if (options.group) {\n                        that._group = options.group = normalizeGroup(options.group);\n                    }\n                    if (options.aggregate) {\n                        that._aggregate = options.aggregate = normalizeAggregate(options.aggregate);\n                    }\n                }\n                return options;\n            },\n            query: function (options) {\n                var result;\n                var remote = this.options.serverSorting || this.options.serverPaging || this.options.serverFiltering || this.options.serverGrouping || this.options.serverAggregates;\n                if (remote || (this._data === undefined || this._data.length === 0) && !this._destroyed.length) {\n                    if (this.options.endless) {\n                        var moreItemsCount = options.pageSize - this.pageSize();\n                        if (moreItemsCount > 0) {\n                            moreItemsCount = this.pageSize();\n                            options.page = options.pageSize / moreItemsCount;\n                            options.pageSize = moreItemsCount;\n                        } else {\n                            options.page = 1;\n                            this.options.endless = false;\n                        }\n                    }\n                    return this.read(this._mergeState(options));\n                }\n                var isPrevented = this.trigger(REQUESTSTART, { type: 'read' });\n                if (!isPrevented) {\n                    this.trigger(PROGRESS);\n                    result = this._queryProcess(this._data, this._mergeState(options));\n                    this._setFilterTotal(result.total, true);\n                    this._aggregateResult = this._calculateAggregates(result.dataToAggregate || this._data, options);\n                    this.view(result.data);\n                    this.trigger(REQUESTEND, { type: 'read' });\n                    this.trigger(CHANGE, { items: result.data });\n                }\n                return $.Deferred().resolve(isPrevented).promise();\n            },\n            _setFilterTotal: function (filterTotal, setDefaultValue) {\n                var that = this;\n                if (!that.options.serverFiltering) {\n                    if (filterTotal !== undefined) {\n                        that._total = filterTotal;\n                    } else if (setDefaultValue) {\n                        that._total = that._data.length;\n                    }\n                }\n            },\n            fetch: function (callback) {\n                var that = this;\n                var fn = function (isPrevented) {\n                    if (isPrevented !== true && isFunction(callback)) {\n                        callback.call(that);\n                    }\n                };\n                return this._query().done(fn);\n            },\n            _query: function (options) {\n                var that = this;\n                return that.query(extend({}, {\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that.sort(),\n                    filter: that.filter(),\n                    group: that.group(),\n                    aggregate: that.aggregate()\n                }, options));\n            },\n            next: function (options) {\n                var that = this, page = that.page(), total = that.total();\n                options = options || {};\n                if (!page || total && page + 1 > that.totalPages()) {\n                    return;\n                }\n                that._skip = that._currentRangeStart = page * that.take();\n                page += 1;\n                options.page = page;\n                that._query(options);\n                return page;\n            },\n            prev: function (options) {\n                var that = this, page = that.page();\n                options = options || {};\n                if (!page || page === 1) {\n                    return;\n                }\n                that._skip = that._currentRangeStart = that._skip - that.take();\n                page -= 1;\n                options.page = page;\n                that._query(options);\n                return page;\n            },\n            page: function (val) {\n                var that = this, skip;\n                if (val !== undefined) {\n                    val = math.max(math.min(math.max(val, 1), that.totalPages()), 1);\n                    that._query(that._pageableQueryOptions({ page: val }));\n                    return;\n                }\n                skip = that.skip();\n                return skip !== undefined ? math.round((skip || 0) / (that.take() || 1)) + 1 : undefined;\n            },\n            pageSize: function (val) {\n                var that = this;\n                if (val !== undefined) {\n                    that._query(that._pageableQueryOptions({\n                        pageSize: val,\n                        page: 1\n                    }));\n                    return;\n                }\n                return that.take();\n            },\n            sort: function (val) {\n                var that = this;\n                if (val !== undefined) {\n                    that.trigger('sort');\n                    that._query({ sort: val });\n                    return;\n                }\n                return that._sort;\n            },\n            filter: function (val) {\n                var that = this;\n                if (val === undefined) {\n                    return that._filter;\n                }\n                that.trigger('reset');\n                that._query({\n                    filter: val,\n                    page: 1\n                });\n            },\n            group: function (val) {\n                var that = this;\n                if (val !== undefined) {\n                    that._query({ group: val });\n                    return;\n                }\n                return that._group;\n            },\n            total: function () {\n                return parseInt(this._total || 0, 10);\n            },\n            aggregate: function (val) {\n                var that = this;\n                if (val !== undefined) {\n                    that._query({ aggregate: val });\n                    return;\n                }\n                return that._aggregate;\n            },\n            aggregates: function () {\n                var result = this._aggregateResult;\n                if (isEmptyObject(result)) {\n                    result = this._emptyAggregates(this.aggregate());\n                }\n                return result;\n            },\n            _emptyAggregates: function (aggregates) {\n                var result = {};\n                if (!isEmptyObject(aggregates)) {\n                    var aggregate = {};\n                    if (!isArray(aggregates)) {\n                        aggregates = [aggregates];\n                    }\n                    for (var idx = 0; idx < aggregates.length; idx++) {\n                        aggregate[aggregates[idx].aggregate] = 0;\n                        result[aggregates[idx].field] = aggregate;\n                    }\n                }\n                return result;\n            },\n            _pageableQueryOptions: function (options) {\n                return options;\n            },\n            _wrapInEmptyGroup: function (model) {\n                var groups = this.group(), parent, group, idx, length;\n                for (idx = groups.length - 1, length = 0; idx >= length; idx--) {\n                    group = groups[idx];\n                    parent = {\n                        value: model.get ? model.get(group.field) : model[group.field],\n                        field: group.field,\n                        items: parent ? [parent] : [model],\n                        hasSubgroups: !!parent,\n                        aggregates: this._emptyAggregates(group.aggregates)\n                    };\n                }\n                return parent;\n            },\n            totalPages: function () {\n                var that = this, pageSize = that.pageSize() || that.total();\n                return math.ceil((that.total() || 0) / pageSize);\n            },\n            inRange: function (skip, take) {\n                var that = this, end = math.min(skip + take, that.total());\n                if (!that.options.serverPaging && that._data.length > 0) {\n                    return true;\n                }\n                return that._findRange(skip, end).length > 0;\n            },\n            lastRange: function () {\n                var ranges = this._ranges;\n                return ranges[ranges.length - 1] || {\n                    start: 0,\n                    end: 0,\n                    data: []\n                };\n            },\n            firstItemUid: function () {\n                var ranges = this._ranges;\n                return ranges.length && ranges[0].data.length && ranges[0].data[0].uid;\n            },\n            enableRequestsInProgress: function () {\n                this._skipRequestsInProgress = false;\n            },\n            _timeStamp: function () {\n                return new Date().getTime();\n            },\n            range: function (skip, take, callback) {\n                this._currentRequestTimeStamp = this._timeStamp();\n                this._skipRequestsInProgress = true;\n                skip = math.min(skip || 0, this.total());\n                callback = isFunction(callback) ? callback : noop;\n                var that = this, pageSkip = math.max(math.floor(skip / take), 0) * take, size = math.min(pageSkip + take, that.total()), data;\n                data = that._findRange(skip, math.min(skip + take, that.total()));\n                if (data.length || that.total() === 0) {\n                    that._processRangeData(data, skip, take, pageSkip, size);\n                    callback();\n                    return;\n                }\n                if (take !== undefined) {\n                    if (!that._rangeExists(pageSkip, size)) {\n                        that.prefetch(pageSkip, take, function () {\n                            if (skip > pageSkip && size < that.total() && !that._rangeExists(size, math.min(size + take, that.total()))) {\n                                that.prefetch(size, take, function () {\n                                    that.range(skip, take, callback);\n                                });\n                            } else {\n                                that.range(skip, take, callback);\n                            }\n                        });\n                    } else if (pageSkip < skip) {\n                        that.prefetch(size, take, function () {\n                            that.range(skip, take, callback);\n                        });\n                    }\n                }\n            },\n            _findRange: function (start, end) {\n                var that = this, ranges = that._ranges, range, data = [], skipIdx, takeIdx, startIndex, endIndex, rangeData, rangeEnd, processed, options = that.options, remote = options.serverSorting || options.serverPaging || options.serverFiltering || options.serverGrouping || options.serverAggregates, flatData, count, length;\n                for (skipIdx = 0, length = ranges.length; skipIdx < length; skipIdx++) {\n                    range = ranges[skipIdx];\n                    if (start >= range.start && start <= range.end) {\n                        count = 0;\n                        for (takeIdx = skipIdx; takeIdx < length; takeIdx++) {\n                            range = ranges[takeIdx];\n                            flatData = that._flatData(range.data, true);\n                            if (flatData.length && start + count >= range.start) {\n                                rangeData = range.data;\n                                rangeEnd = range.end;\n                                if (!remote) {\n                                    if (options.inPlaceSort) {\n                                        processed = that._queryProcess(range.data, { filter: that.filter() });\n                                    } else {\n                                        var sort = normalizeGroupWithoutCompare(that.group() || []).concat(normalizeSort(that.sort() || []));\n                                        processed = that._queryProcess(range.data, {\n                                            sort: sort,\n                                            filter: that.filter()\n                                        });\n                                    }\n                                    flatData = rangeData = processed.data;\n                                    if (processed.total !== undefined) {\n                                        rangeEnd = processed.total;\n                                    }\n                                }\n                                startIndex = 0;\n                                if (start + count > range.start) {\n                                    startIndex = start + count - range.start;\n                                }\n                                endIndex = flatData.length;\n                                if (rangeEnd > end) {\n                                    endIndex = endIndex - (rangeEnd - end);\n                                }\n                                count += endIndex - startIndex;\n                                data = that._mergeGroups(data, rangeData, startIndex, endIndex);\n                                if (end <= range.end && count == end - start) {\n                                    return data;\n                                }\n                            }\n                        }\n                        break;\n                    }\n                }\n                return [];\n            },\n            _mergeGroups: function (data, range, skip, take) {\n                if (this._isServerGrouped()) {\n                    var temp = range.toJSON(), prevGroup;\n                    if (data.length) {\n                        prevGroup = data[data.length - 1];\n                    }\n                    mergeGroups(prevGroup, temp, skip, take);\n                    return data.concat(temp);\n                }\n                return data.concat(range.slice(skip, take));\n            },\n            _processRangeData: function (data, skip, take, pageSkip, size) {\n                var that = this;\n                that._pending = undefined;\n                that._skip = skip > that.skip() ? math.min(size, (that.totalPages() - 1) * that.take()) : pageSkip;\n                that._currentRangeStart = skip;\n                that._take = take;\n                var paging = that.options.serverPaging;\n                var sorting = that.options.serverSorting;\n                var filtering = that.options.serverFiltering;\n                var aggregates = that.options.serverAggregates;\n                try {\n                    that.options.serverPaging = true;\n                    if (!that._isServerGrouped() && !(that.group() && that.group().length)) {\n                        that.options.serverSorting = true;\n                    }\n                    that.options.serverFiltering = true;\n                    that.options.serverPaging = true;\n                    that.options.serverAggregates = true;\n                    if (paging) {\n                        that._detachObservableParents();\n                        that._data = data = that._observe(data);\n                    }\n                    that._process(data);\n                } finally {\n                    that.options.serverPaging = paging;\n                    that.options.serverSorting = sorting;\n                    that.options.serverFiltering = filtering;\n                    that.options.serverAggregates = aggregates;\n                }\n            },\n            skip: function () {\n                var that = this;\n                if (that._skip === undefined) {\n                    return that._page !== undefined ? (that._page - 1) * (that.take() || 1) : undefined;\n                }\n                return that._skip;\n            },\n            currentRangeStart: function () {\n                return this._currentRangeStart || 0;\n            },\n            take: function () {\n                return this._take || this._pageSize;\n            },\n            _prefetchSuccessHandler: function (skip, size, callback, force) {\n                var that = this;\n                var timestamp = that._timeStamp();\n                return function (data) {\n                    var found = false, range = {\n                            start: skip,\n                            end: size,\n                            data: [],\n                            timestamp: that._timeStamp()\n                        }, idx, length, temp;\n                    that._dequeueRequest();\n                    that.trigger(REQUESTEND, {\n                        response: data,\n                        type: 'read'\n                    });\n                    data = that.reader.parse(data);\n                    temp = that._readData(data);\n                    if (temp.length) {\n                        for (idx = 0, length = that._ranges.length; idx < length; idx++) {\n                            if (that._ranges[idx].start === skip) {\n                                found = true;\n                                range = that._ranges[idx];\n                                range.pristineData = temp;\n                                range.data = that._observe(temp);\n                                range.end = range.start + that._flatData(range.data, true).length;\n                                that._sortRanges();\n                                break;\n                            }\n                        }\n                        if (!found) {\n                            that._addRange(that._observe(temp), skip);\n                        }\n                    }\n                    that._total = that.reader.total(data);\n                    if (force || (timestamp >= that._currentRequestTimeStamp || !that._skipRequestsInProgress)) {\n                        if (callback && temp.length) {\n                            callback();\n                        } else {\n                            that.trigger(CHANGE, {});\n                        }\n                    }\n                };\n            },\n            prefetch: function (skip, take, callback) {\n                var that = this, size = math.min(skip + take, that.total()), options = {\n                        take: take,\n                        skip: skip,\n                        page: skip / take + 1,\n                        pageSize: take,\n                        sort: that._sort,\n                        filter: that._filter,\n                        group: that._group,\n                        aggregate: that._aggregate\n                    };\n                if (!that._rangeExists(skip, size)) {\n                    clearTimeout(that._timeout);\n                    that._timeout = setTimeout(function () {\n                        that._queueRequest(options, function () {\n                            if (!that.trigger(REQUESTSTART, { type: 'read' })) {\n                                that.transport.read({\n                                    data: that._params(options),\n                                    success: that._prefetchSuccessHandler(skip, size, callback),\n                                    error: function () {\n                                        var args = slice.call(arguments);\n                                        that.error.apply(that, args);\n                                    }\n                                });\n                            } else {\n                                that._dequeueRequest();\n                            }\n                        });\n                    }, 100);\n                } else if (callback) {\n                    callback();\n                }\n            },\n            _multiplePrefetch: function (skip, take, callback) {\n                var that = this, size = math.min(skip + take, that.total()), options = {\n                        take: take,\n                        skip: skip,\n                        page: skip / take + 1,\n                        pageSize: take,\n                        sort: that._sort,\n                        filter: that._filter,\n                        group: that._group,\n                        aggregate: that._aggregate\n                    };\n                if (!that._rangeExists(skip, size)) {\n                    if (!that.trigger(REQUESTSTART, { type: 'read' })) {\n                        that.transport.read({\n                            data: that._params(options),\n                            success: that._prefetchSuccessHandler(skip, size, callback, true)\n                        });\n                    }\n                } else if (callback) {\n                    callback();\n                }\n            },\n            _rangeExists: function (start, end) {\n                var that = this, ranges = that._ranges, idx, length;\n                for (idx = 0, length = ranges.length; idx < length; idx++) {\n                    if (ranges[idx].start <= start && ranges[idx].end >= end) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _getCurrentRangeSpan: function () {\n                var that = this;\n                var ranges = that._ranges;\n                var start = that.currentRangeStart();\n                var end = start + (that.take() || 0);\n                var rangeSpan = [];\n                var range;\n                var idx;\n                var length = ranges.length;\n                for (idx = 0; idx < length; idx++) {\n                    range = ranges[idx];\n                    if (range.start <= start && range.end >= start || range.start >= start && range.start <= end) {\n                        rangeSpan.push(range);\n                    }\n                }\n                return rangeSpan;\n            },\n            _removeModelFromRanges: function (model) {\n                var that = this;\n                var range;\n                for (var idx = 0, length = this._ranges.length; idx < length; idx++) {\n                    range = this._ranges[idx];\n                    that._removeModelFromRange(range, model);\n                }\n                that._updateRangesLength();\n            },\n            _removeModelFromRange: function (range, model) {\n                this._eachItem(range.data, function (data) {\n                    for (var idx = 0; idx < data.length; idx++) {\n                        var dataItem = data[idx];\n                        if (dataItem.uid && dataItem.uid == model.uid) {\n                            [].splice.call(data, idx, 1);\n                            break;\n                        }\n                    }\n                });\n            },\n            _insertModelInRange: function (index, model) {\n                var that = this;\n                var ranges = that._ranges || [];\n                var rangesLength = ranges.length;\n                var range;\n                var i;\n                for (i = 0; i < rangesLength; i++) {\n                    range = ranges[i];\n                    if (range.start <= index && range.end >= index) {\n                        if (!that._getByUid(model.uid, range.data)) {\n                            if (that._isServerGrouped()) {\n                                range.data.splice(index, 0, that._wrapInEmptyGroup(model));\n                            } else {\n                                range.data.splice(index, 0, model);\n                            }\n                        }\n                        break;\n                    }\n                }\n                that._updateRangesLength();\n            },\n            _updateRangesLength: function () {\n                var that = this;\n                var ranges = that._ranges || [];\n                var rangesLength = ranges.length;\n                var mismatchFound = false;\n                var mismatchLength = 0;\n                var lengthDifference = 0;\n                var range;\n                var i;\n                for (i = 0; i < rangesLength; i++) {\n                    range = ranges[i];\n                    lengthDifference = that._flatData(range.data, true).length - math.abs(range.end - range.start);\n                    if (!mismatchFound && lengthDifference !== 0) {\n                        mismatchFound = true;\n                        mismatchLength = lengthDifference;\n                        range.end += mismatchLength;\n                        continue;\n                    }\n                    if (mismatchFound) {\n                        range.start += mismatchLength;\n                        range.end += mismatchLength;\n                    }\n                }\n            }\n        });\n        var Transport = {};\n        Transport.create = function (options, data, dataSource) {\n            var transport, transportOptions = options.transport ? $.extend({}, options.transport) : null;\n            if (transportOptions) {\n                transportOptions.read = typeof transportOptions.read === STRING ? { url: transportOptions.read } : transportOptions.read;\n                if (options.type === 'jsdo') {\n                    transportOptions.dataSource = dataSource;\n                }\n                if (options.type) {\n                    kendo.data.transports = kendo.data.transports || {};\n                    kendo.data.schemas = kendo.data.schemas || {};\n                    if (!kendo.data.transports[options.type]) {\n                        kendo.logToConsole('Unknown DataSource transport type \\'' + options.type + '\\'.\\nVerify that registration scripts for this type are included after Kendo UI on the page.', 'warn');\n                    } else if (!isPlainObject(kendo.data.transports[options.type])) {\n                        transport = new kendo.data.transports[options.type](extend(transportOptions, { data: data }));\n                    } else {\n                        transportOptions = extend(true, {}, kendo.data.transports[options.type], transportOptions);\n                    }\n                    options.schema = extend(true, {}, kendo.data.schemas[options.type], options.schema);\n                }\n                if (!transport) {\n                    transport = isFunction(transportOptions.read) ? transportOptions : new RemoteTransport(transportOptions);\n                }\n            } else {\n                transport = new LocalTransport({ data: options.data || [] });\n            }\n            return transport;\n        };\n        DataSource.create = function (options) {\n            if (isArray(options) || options instanceof ObservableArray) {\n                options = { data: options };\n            }\n            var dataSource = options || {}, data = dataSource.data, fields = dataSource.fields, table = dataSource.table, select = dataSource.select, idx, length, model = {}, field;\n            if (!data && fields && !dataSource.transport) {\n                if (table) {\n                    data = inferTable(table, fields);\n                } else if (select) {\n                    data = inferSelect(select, fields);\n                    if (dataSource.group === undefined && data[0] && data[0].optgroup !== undefined) {\n                        dataSource.group = 'optgroup';\n                    }\n                }\n            }\n            if (kendo.data.Model && fields && (!dataSource.schema || !dataSource.schema.model)) {\n                for (idx = 0, length = fields.length; idx < length; idx++) {\n                    field = fields[idx];\n                    if (field.type) {\n                        model[field.field] = field;\n                    }\n                }\n                if (!isEmptyObject(model)) {\n                    dataSource.schema = extend(true, dataSource.schema, { model: { fields: model } });\n                }\n            }\n            dataSource.data = data;\n            select = null;\n            dataSource.select = null;\n            table = null;\n            dataSource.table = null;\n            return dataSource instanceof DataSource ? dataSource : new DataSource(dataSource);\n        };\n        function inferSelect(select, fields) {\n            select = $(select)[0];\n            var options = select.options;\n            var firstField = fields[0];\n            var secondField = fields[1];\n            var data = [];\n            var idx, length;\n            var optgroup;\n            var option;\n            var record;\n            var value;\n            for (idx = 0, length = options.length; idx < length; idx++) {\n                record = {};\n                option = options[idx];\n                optgroup = option.parentNode;\n                if (optgroup === select) {\n                    optgroup = null;\n                }\n                if (option.disabled || optgroup && optgroup.disabled) {\n                    continue;\n                }\n                if (optgroup) {\n                    record.optgroup = optgroup.label;\n                }\n                record[firstField.field] = option.text;\n                value = option.attributes.value;\n                if (value && value.specified) {\n                    value = option.value;\n                } else {\n                    value = option.text;\n                }\n                record[secondField.field] = value;\n                data.push(record);\n            }\n            return data;\n        }\n        function inferTable(table, fields) {\n            var tbody = $(table)[0].tBodies[0], rows = tbody ? tbody.rows : [], idx, length, fieldIndex, fieldCount = fields.length, data = [], cells, record, cell, empty;\n            for (idx = 0, length = rows.length; idx < length; idx++) {\n                record = {};\n                empty = true;\n                cells = rows[idx].cells;\n                for (fieldIndex = 0; fieldIndex < fieldCount; fieldIndex++) {\n                    cell = cells[fieldIndex];\n                    if (cell.nodeName.toLowerCase() !== 'th') {\n                        empty = false;\n                        record[fields[fieldIndex].field] = cell.innerHTML;\n                    }\n                }\n                if (!empty) {\n                    data.push(record);\n                }\n            }\n            return data;\n        }\n        var Node = Model.define({\n            idField: 'id',\n            init: function (value) {\n                var that = this, hasChildren = that.hasChildren || value && value.hasChildren, childrenField = 'items', childrenOptions = {};\n                kendo.data.Model.fn.init.call(that, value);\n                if (typeof that.children === STRING) {\n                    childrenField = that.children;\n                }\n                childrenOptions = {\n                    schema: {\n                        data: childrenField,\n                        model: {\n                            hasChildren: hasChildren,\n                            id: that.idField,\n                            fields: that.fields\n                        }\n                    }\n                };\n                if (typeof that.children !== STRING) {\n                    extend(childrenOptions, that.children);\n                }\n                childrenOptions.data = value;\n                if (!hasChildren) {\n                    hasChildren = childrenOptions.schema.data;\n                }\n                if (typeof hasChildren === STRING) {\n                    hasChildren = kendo.getter(hasChildren);\n                }\n                if (isFunction(hasChildren)) {\n                    var hasChildrenObject = hasChildren.call(that, that);\n                    if (hasChildrenObject && hasChildrenObject.length === 0) {\n                        that.hasChildren = false;\n                    } else {\n                        that.hasChildren = !!hasChildrenObject;\n                    }\n                }\n                that._childrenOptions = childrenOptions;\n                if (that.hasChildren) {\n                    that._initChildren();\n                }\n                that._loaded = !!(value && value._loaded);\n            },\n            _initChildren: function () {\n                var that = this;\n                var children, transport, parameterMap;\n                if (!(that.children instanceof HierarchicalDataSource)) {\n                    children = that.children = new HierarchicalDataSource(that._childrenOptions);\n                    transport = children.transport;\n                    parameterMap = transport.parameterMap;\n                    transport.parameterMap = function (data, type) {\n                        data[that.idField || 'id'] = that.id;\n                        if (parameterMap) {\n                            data = parameterMap(data, type);\n                        }\n                        return data;\n                    };\n                    children.parent = function () {\n                        return that;\n                    };\n                    children.bind(CHANGE, function (e) {\n                        e.node = e.node || that;\n                        that.trigger(CHANGE, e);\n                    });\n                    children.bind(ERROR, function (e) {\n                        var collection = that.parent();\n                        if (collection) {\n                            e.node = e.node || that;\n                            collection.trigger(ERROR, e);\n                        }\n                    });\n                    that._updateChildrenField();\n                }\n            },\n            append: function (model) {\n                this._initChildren();\n                this.loaded(true);\n                this.children.add(model);\n            },\n            hasChildren: false,\n            level: function () {\n                var parentNode = this.parentNode(), level = 0;\n                while (parentNode && parentNode.parentNode) {\n                    level++;\n                    parentNode = parentNode.parentNode ? parentNode.parentNode() : null;\n                }\n                return level;\n            },\n            _updateChildrenField: function () {\n                var fieldName = this._childrenOptions.schema.data;\n                this[fieldName || 'items'] = this.children.data();\n            },\n            _childrenLoaded: function () {\n                this._loaded = true;\n                this._updateChildrenField();\n            },\n            load: function () {\n                var options = {};\n                var method = '_query';\n                var children, promise;\n                if (this.hasChildren) {\n                    this._initChildren();\n                    children = this.children;\n                    options[this.idField || 'id'] = this.id;\n                    if (!this._loaded) {\n                        children._data = undefined;\n                        method = 'read';\n                    }\n                    children.one(CHANGE, proxy(this._childrenLoaded, this));\n                    if (this._matchFilter) {\n                        options.filter = {\n                            field: '_matchFilter',\n                            operator: 'eq',\n                            value: true\n                        };\n                    }\n                    promise = children[method](options);\n                } else {\n                    this.loaded(true);\n                }\n                return promise || $.Deferred().resolve().promise();\n            },\n            parentNode: function () {\n                var array = this.parent();\n                return array.parent();\n            },\n            loaded: function (value) {\n                if (value !== undefined) {\n                    this._loaded = value;\n                } else {\n                    return this._loaded;\n                }\n            },\n            shouldSerialize: function (field) {\n                return Model.fn.shouldSerialize.call(this, field) && field !== 'children' && field !== '_loaded' && field !== 'hasChildren' && field !== '_childrenOptions';\n            }\n        });\n        function dataMethod(name) {\n            return function () {\n                var data = this._data, result = DataSource.fn[name].apply(this, slice.call(arguments));\n                if (this._data != data) {\n                    this._attachBubbleHandlers();\n                }\n                return result;\n            };\n        }\n        var HierarchicalDataSource = DataSource.extend({\n            init: function (options) {\n                var node = Node.define({ children: options });\n                if (options.filter && !options.serverFiltering) {\n                    this._hierarchicalFilter = options.filter;\n                    options.filter = null;\n                }\n                DataSource.fn.init.call(this, extend(true, {}, {\n                    schema: {\n                        modelBase: node,\n                        model: node\n                    }\n                }, options));\n                this._attachBubbleHandlers();\n            },\n            _attachBubbleHandlers: function () {\n                var that = this;\n                that._data.bind(ERROR, function (e) {\n                    that.trigger(ERROR, e);\n                });\n            },\n            read: function (data) {\n                var result = DataSource.fn.read.call(this, data);\n                if (this._hierarchicalFilter) {\n                    if (this._data && this._data.length > 0) {\n                        this.filter(this._hierarchicalFilter);\n                    } else {\n                        this.options.filter = this._hierarchicalFilter;\n                        this._filter = normalizeFilter(this.options.filter);\n                        this._hierarchicalFilter = null;\n                    }\n                }\n                return result;\n            },\n            remove: function (node) {\n                var parentNode = node.parentNode(), dataSource = this, result;\n                if (parentNode && parentNode._initChildren) {\n                    dataSource = parentNode.children;\n                }\n                result = DataSource.fn.remove.call(dataSource, node);\n                if (parentNode && !dataSource.data().length) {\n                    parentNode.hasChildren = false;\n                }\n                return result;\n            },\n            success: dataMethod('success'),\n            data: dataMethod('data'),\n            insert: function (index, model) {\n                var parentNode = this.parent();\n                if (parentNode && parentNode._initChildren) {\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n                return DataSource.fn.insert.call(this, index, model);\n            },\n            filter: function (val) {\n                if (val === undefined) {\n                    return this._filter;\n                }\n                if (!this.options.serverFiltering && this._markHierarchicalQuery(val)) {\n                    val = {\n                        logic: 'or',\n                        filters: [\n                            val,\n                            {\n                                field: '_matchFilter',\n                                operator: 'equals',\n                                value: true\n                            }\n                        ]\n                    };\n                }\n                this.trigger('reset');\n                this._query({\n                    filter: val,\n                    page: 1\n                });\n            },\n            _markHierarchicalQuery: function (expressions) {\n                var compiled;\n                var predicate;\n                var fields;\n                var operators;\n                var filter;\n                var accentFoldingFiltering = this.options.accentFoldingFiltering;\n                expressions = accentFoldingFiltering ? $.extend({}, normalizeFilter(expressions), { accentFoldingFiltering: accentFoldingFiltering }) : normalizeFilter(expressions);\n                if (!expressions || expressions.filters.length === 0) {\n                    this._updateHierarchicalFilter(function () {\n                        return true;\n                    });\n                    return false;\n                }\n                compiled = Query.filterExpr(expressions);\n                fields = compiled.fields;\n                operators = compiled.operators;\n                predicate = filter = new Function('d, __f, __o', 'return ' + compiled.expression);\n                if (fields.length || operators.length) {\n                    filter = function (d) {\n                        return predicate(d, fields, operators);\n                    };\n                }\n                this._updateHierarchicalFilter(filter);\n                return true;\n            },\n            _updateHierarchicalFilter: function (filter) {\n                var current;\n                var data = this._data;\n                var result = false;\n                for (var idx = 0; idx < data.length; idx++) {\n                    current = data[idx];\n                    if (current.hasChildren) {\n                        current._matchFilter = current.children._updateHierarchicalFilter(filter);\n                        if (!current._matchFilter) {\n                            current._matchFilter = filter(current);\n                        }\n                    } else {\n                        current._matchFilter = filter(current);\n                    }\n                    if (current._matchFilter) {\n                        result = true;\n                    }\n                }\n                return result;\n            },\n            _find: function (method, value) {\n                var idx, length, node, children;\n                var data = this._data;\n                if (!data) {\n                    return;\n                }\n                node = DataSource.fn[method].call(this, value);\n                if (node) {\n                    return node;\n                }\n                data = this._flatData(this._data);\n                for (idx = 0, length = data.length; idx < length; idx++) {\n                    children = data[idx].children;\n                    if (!(children instanceof HierarchicalDataSource)) {\n                        continue;\n                    }\n                    node = children[method](value);\n                    if (node) {\n                        return node;\n                    }\n                }\n            },\n            get: function (id) {\n                return this._find('get', id);\n            },\n            getByUid: function (uid) {\n                return this._find('getByUid', uid);\n            }\n        });\n        function inferList(list, fields) {\n            var items = $(list).children(), idx, length, data = [], record, textField = fields[0].field, urlField = fields[1] && fields[1].field, spriteCssClassField = fields[2] && fields[2].field, imageUrlField = fields[3] && fields[3].field, item, id, textChild, className, children;\n            function elements(collection, tagName) {\n                return collection.filter(tagName).add(collection.find(tagName));\n            }\n            for (idx = 0, length = items.length; idx < length; idx++) {\n                record = { _loaded: true };\n                item = items.eq(idx);\n                textChild = item[0].firstChild;\n                children = item.children();\n                list = children.filter('ul');\n                children = children.filter(':not(ul)');\n                id = item.attr('data-id');\n                if (id) {\n                    record.id = id;\n                }\n                if (textChild) {\n                    record[textField] = textChild.nodeType == 3 ? textChild.nodeValue : children.text();\n                }\n                if (urlField) {\n                    record[urlField] = elements(children, 'a').attr('href');\n                }\n                if (imageUrlField) {\n                    record[imageUrlField] = elements(children, 'img').attr('src');\n                }\n                if (spriteCssClassField) {\n                    className = elements(children, '.k-sprite').prop('className');\n                    record[spriteCssClassField] = className && $.trim(className.replace('k-sprite', ''));\n                }\n                if (list.length) {\n                    record.items = inferList(list.eq(0), fields);\n                }\n                if (item.attr('data-hasChildren') == 'true') {\n                    record.hasChildren = true;\n                }\n                data.push(record);\n            }\n            return data;\n        }\n        HierarchicalDataSource.create = function (options) {\n            options = options && options.push ? { data: options } : options;\n            var dataSource = options || {}, data = dataSource.data, fields = dataSource.fields, list = dataSource.list;\n            if (data && data._dataSource) {\n                return data._dataSource;\n            }\n            if (!data && fields && !dataSource.transport) {\n                if (list) {\n                    data = inferList(list, fields);\n                }\n            }\n            dataSource.data = data;\n            return dataSource instanceof HierarchicalDataSource ? dataSource : new HierarchicalDataSource(dataSource);\n        };\n        var Buffer = kendo.Observable.extend({\n            init: function (dataSource, viewSize, disablePrefetch) {\n                kendo.Observable.fn.init.call(this);\n                this._prefetching = false;\n                this.dataSource = dataSource;\n                this.prefetch = !disablePrefetch;\n                var buffer = this;\n                dataSource.bind('change', function () {\n                    buffer._change();\n                });\n                dataSource.bind('reset', function () {\n                    buffer._reset();\n                });\n                this._syncWithDataSource();\n                this.setViewSize(viewSize);\n            },\n            setViewSize: function (viewSize) {\n                this.viewSize = viewSize;\n                this._recalculate();\n            },\n            at: function (index) {\n                var pageSize = this.pageSize, itemPresent = true;\n                if (index >= this.total()) {\n                    this.trigger('endreached', { index: index });\n                    return null;\n                }\n                if (!this.useRanges) {\n                    return this.dataSource.view()[index];\n                }\n                if (this.useRanges) {\n                    if (index < this.dataOffset || index >= this.skip + pageSize) {\n                        itemPresent = this.range(Math.floor(index / pageSize) * pageSize);\n                    }\n                    if (index === this.prefetchThreshold) {\n                        this._prefetch();\n                    }\n                    if (index === this.midPageThreshold) {\n                        this.range(this.nextMidRange, true);\n                    } else if (index === this.nextPageThreshold) {\n                        this.range(this.nextFullRange);\n                    } else if (index === this.pullBackThreshold) {\n                        if (this.offset === this.skip) {\n                            this.range(this.previousMidRange);\n                        } else {\n                            this.range(this.previousFullRange);\n                        }\n                    }\n                    if (itemPresent) {\n                        return this.dataSource.at(index - this.dataOffset);\n                    } else {\n                        this.trigger('endreached', { index: index });\n                        return null;\n                    }\n                }\n            },\n            indexOf: function (item) {\n                return this.dataSource.data().indexOf(item) + this.dataOffset;\n            },\n            total: function () {\n                return parseInt(this.dataSource.total(), 10);\n            },\n            next: function () {\n                var buffer = this, pageSize = buffer.pageSize, offset = buffer.skip - buffer.viewSize + pageSize, pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize;\n                this.offset = offset;\n                this.dataSource.prefetch(pageSkip, pageSize, function () {\n                    buffer._goToRange(offset, true);\n                });\n            },\n            range: function (offset, nextRange) {\n                if (this.offset === offset) {\n                    return true;\n                }\n                var buffer = this, pageSize = this.pageSize, pageSkip = math.max(math.floor(offset / pageSize), 0) * pageSize, dataSource = this.dataSource;\n                if (nextRange) {\n                    pageSkip += pageSize;\n                }\n                if (dataSource.inRange(offset, pageSize)) {\n                    this.offset = offset;\n                    this._recalculate();\n                    this._goToRange(offset);\n                    return true;\n                } else if (this.prefetch) {\n                    dataSource.prefetch(pageSkip, pageSize, function () {\n                        buffer.offset = offset;\n                        buffer._recalculate();\n                        buffer._goToRange(offset, true);\n                    });\n                    return false;\n                }\n                return true;\n            },\n            syncDataSource: function () {\n                var offset = this.offset;\n                this.offset = null;\n                this.range(offset);\n            },\n            destroy: function () {\n                this.unbind();\n            },\n            _prefetch: function () {\n                var buffer = this, pageSize = this.pageSize, prefetchOffset = this.skip + pageSize, dataSource = this.dataSource;\n                if (!dataSource.inRange(prefetchOffset, pageSize) && !this._prefetching && this.prefetch) {\n                    this._prefetching = true;\n                    this.trigger('prefetching', {\n                        skip: prefetchOffset,\n                        take: pageSize\n                    });\n                    dataSource.prefetch(prefetchOffset, pageSize, function () {\n                        buffer._prefetching = false;\n                        buffer.trigger('prefetched', {\n                            skip: prefetchOffset,\n                            take: pageSize\n                        });\n                    });\n                }\n            },\n            _goToRange: function (offset, expanding) {\n                if (this.offset !== offset) {\n                    return;\n                }\n                this.dataOffset = offset;\n                this._expanding = expanding;\n                this.dataSource.range(offset, this.pageSize);\n                this.dataSource.enableRequestsInProgress();\n            },\n            _reset: function () {\n                this._syncPending = true;\n            },\n            _change: function () {\n                var dataSource = this.dataSource;\n                this.length = this.useRanges ? dataSource.lastRange().end : dataSource.view().length;\n                if (this._syncPending) {\n                    this._syncWithDataSource();\n                    this._recalculate();\n                    this._syncPending = false;\n                    this.trigger('reset', { offset: this.offset });\n                }\n                this.trigger('resize');\n                if (this._expanding) {\n                    this.trigger('expand');\n                }\n                delete this._expanding;\n            },\n            _syncWithDataSource: function () {\n                var dataSource = this.dataSource;\n                this._firstItemUid = dataSource.firstItemUid();\n                this.dataOffset = this.offset = dataSource.skip() || 0;\n                this.pageSize = dataSource.pageSize();\n                this.useRanges = dataSource.options.serverPaging;\n            },\n            _recalculate: function () {\n                var pageSize = this.pageSize, offset = this.offset, viewSize = this.viewSize, skip = Math.ceil(offset / pageSize) * pageSize;\n                this.skip = skip;\n                this.midPageThreshold = skip + pageSize - 1;\n                this.nextPageThreshold = skip + viewSize - 1;\n                this.prefetchThreshold = skip + Math.floor(pageSize / 3 * 2);\n                this.pullBackThreshold = this.offset - 1;\n                this.nextMidRange = skip + pageSize - viewSize;\n                this.nextFullRange = skip;\n                this.previousMidRange = offset - viewSize;\n                this.previousFullRange = skip - pageSize;\n            }\n        });\n        var BatchBuffer = kendo.Observable.extend({\n            init: function (dataSource, batchSize) {\n                var batchBuffer = this;\n                kendo.Observable.fn.init.call(batchBuffer);\n                this.dataSource = dataSource;\n                this.batchSize = batchSize;\n                this._total = 0;\n                this.buffer = new Buffer(dataSource, batchSize * 3);\n                this.buffer.bind({\n                    'endreached': function (e) {\n                        batchBuffer.trigger('endreached', { index: e.index });\n                    },\n                    'prefetching': function (e) {\n                        batchBuffer.trigger('prefetching', {\n                            skip: e.skip,\n                            take: e.take\n                        });\n                    },\n                    'prefetched': function (e) {\n                        batchBuffer.trigger('prefetched', {\n                            skip: e.skip,\n                            take: e.take\n                        });\n                    },\n                    'reset': function () {\n                        batchBuffer._total = 0;\n                        batchBuffer.trigger('reset');\n                    },\n                    'resize': function () {\n                        batchBuffer._total = Math.ceil(this.length / batchBuffer.batchSize);\n                        batchBuffer.trigger('resize', {\n                            total: batchBuffer.total(),\n                            offset: this.offset\n                        });\n                    }\n                });\n            },\n            syncDataSource: function () {\n                this.buffer.syncDataSource();\n            },\n            at: function (index) {\n                var buffer = this.buffer, skip = index * this.batchSize, take = this.batchSize, view = [], item;\n                if (buffer.offset > skip) {\n                    buffer.at(buffer.offset - 1);\n                }\n                for (var i = 0; i < take; i++) {\n                    item = buffer.at(skip + i);\n                    if (item === null) {\n                        break;\n                    }\n                    view.push(item);\n                }\n                return view;\n            },\n            total: function () {\n                return this._total;\n            },\n            destroy: function () {\n                this.buffer.destroy();\n                this.unbind();\n            }\n        });\n        extend(true, kendo.data, {\n            readers: { json: DataReader },\n            Query: Query,\n            DataSource: DataSource,\n            HierarchicalDataSource: HierarchicalDataSource,\n            Node: Node,\n            ObservableObject: ObservableObject,\n            ObservableArray: ObservableArray,\n            LazyObservableArray: LazyObservableArray,\n            LocalTransport: LocalTransport,\n            RemoteTransport: RemoteTransport,\n            Cache: Cache,\n            DataReader: DataReader,\n            Model: Model,\n            Buffer: Buffer,\n            BatchBuffer: BatchBuffer\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}